/*
** Lua binding: LuaBox2D
** Generated automatically by tolua++-1.0.92 on 06/10/12 11:03:41.
*/

#ifndef __cplusplus
#include "stdlib.h"
#endif
#include "string.h"

#include "tolua++.h"

/* Exported function */
TOLUA_API int  tolua_LuaBox2D_open (lua_State* tolua_S);

#include "Box2D/Box2D.h"
#include <Box2D/Dynamics/Contacts/b2Contact.h>
#include <Box2D/Dynamics/Contacts/b2CircleContact.h>
#include <Box2D/Dynamics/Contacts/b2PolygonAndCircleContact.h>
#include <Box2D/Dynamics/Contacts/b2PolygonContact.h>
#include <Box2D/Dynamics/Contacts/b2EdgeAndCircleContact.h>
#include <Box2D/Dynamics/Contacts/b2EdgeAndPolygonContact.h>
#include <Box2D/Dynamics/Contacts/b2ChainAndCircleContact.h>
#include <Box2D/Dynamics/Contacts/b2ChainAndPolygonContact.h>
#include <Box2D/Dynamics/Contacts/b2ContactSolver.h>
#include <Box2D/Collision/b2Collision.h>
#include <Box2D/Collision/b2TimeOfImpact.h>
#include <Box2D/Collision/Shapes/b2Shape.h>
#include <Box2D/Common/b2BlockAllocator.h>
#include <Box2D/Dynamics/b2Body.h>
#include <Box2D/Dynamics/b2Fixture.h>
#include <Box2D/Dynamics/b2World.h>
#include <Box2D/Dynamics/b2Island.h>
#include <Box2D/Dynamics/Joints/b2PulleyJoint.h>
#include <Box2D/Dynamics/Contacts/b2Contact.h>
#include <Box2D/Dynamics/Contacts/b2ContactSolver.h>
#include <Box2D/Collision/b2BroadPhase.h>
#include <Box2D/Collision/Shapes/b2CircleShape.h>
#include <Box2D/Collision/Shapes/b2EdgeShape.h>
#include <Box2D/Collision/Shapes/b2ChainShape.h>
#include <Box2D/Collision/Shapes/b2PolygonShape.h>
#include <Box2D/Rope/b2Rope.h>
#include "LuaBox2D.h"

/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_b2ManifoldPoint (lua_State* tolua_S)
{
 b2ManifoldPoint* self = (b2ManifoldPoint*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2StackAllocator (lua_State* tolua_S)
{
 b2StackAllocator* self = (b2StackAllocator*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2CircleContact (lua_State* tolua_S)
{
 b2CircleContact* self = (b2CircleContact*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2Draw (lua_State* tolua_S)
{
 b2Draw* self = (b2Draw*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2FrictionJointDef (lua_State* tolua_S)
{
 b2FrictionJointDef* self = (b2FrictionJointDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2VelocityConstraintPoint (lua_State* tolua_S)
{
 b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2EdgeShape (lua_State* tolua_S)
{
 b2EdgeShape* self = (b2EdgeShape*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2ContactManager (lua_State* tolua_S)
{
 b2ContactManager* self = (b2ContactManager*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2RevoluteJointDef (lua_State* tolua_S)
{
 b2RevoluteJointDef* self = (b2RevoluteJointDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2ContactSolver (lua_State* tolua_S)
{
 b2ContactSolver* self = (b2ContactSolver*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2DynamicTree (lua_State* tolua_S)
{
 b2DynamicTree* self = (b2DynamicTree*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2DistanceProxy (lua_State* tolua_S)
{
 b2DistanceProxy* self = (b2DistanceProxy*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2JointDef (lua_State* tolua_S)
{
 b2JointDef* self = (b2JointDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2FixtureDef (lua_State* tolua_S)
{
 b2FixtureDef* self = (b2FixtureDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2Timer (lua_State* tolua_S)
{
 b2Timer* self = (b2Timer*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2ContactFilter (lua_State* tolua_S)
{
 b2ContactFilter* self = (b2ContactFilter*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2ClipVertex (lua_State* tolua_S)
{
 b2ClipVertex* self = (b2ClipVertex*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2RayCastCallback (lua_State* tolua_S)
{
 b2RayCastCallback* self = (b2RayCastCallback*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2PulleyJointDef (lua_State* tolua_S)
{
 b2PulleyJointDef* self = (b2PulleyJointDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2QueryCallback (lua_State* tolua_S)
{
 b2QueryCallback* self = (b2QueryCallback*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2DestructionListener (lua_State* tolua_S)
{
 b2DestructionListener* self = (b2DestructionListener*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2DistanceJointDef (lua_State* tolua_S)
{
 b2DistanceJointDef* self = (b2DistanceJointDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2BroadPhase (lua_State* tolua_S)
{
 b2BroadPhase* self = (b2BroadPhase*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2Rot (lua_State* tolua_S)
{
 b2Rot* self = (b2Rot*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2WheelJointDef (lua_State* tolua_S)
{
 b2WheelJointDef* self = (b2WheelJointDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2ChainAndPolygonContact (lua_State* tolua_S)
{
 b2ChainAndPolygonContact* self = (b2ChainAndPolygonContact*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2PolygonShape (lua_State* tolua_S)
{
 b2PolygonShape* self = (b2PolygonShape*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2BlockAllocator (lua_State* tolua_S)
{
 b2BlockAllocator* self = (b2BlockAllocator*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2Vec3 (lua_State* tolua_S)
{
 b2Vec3* self = (b2Vec3*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2WeldJointDef (lua_State* tolua_S)
{
 b2WeldJointDef* self = (b2WeldJointDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2Vec2 (lua_State* tolua_S)
{
 b2Vec2* self = (b2Vec2*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2Filter (lua_State* tolua_S)
{
 b2Filter* self = (b2Filter*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2RopeDef (lua_State* tolua_S)
{
 b2RopeDef* self = (b2RopeDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2PrismaticJointDef (lua_State* tolua_S)
{
 b2PrismaticJointDef* self = (b2PrismaticJointDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2PolygonContact (lua_State* tolua_S)
{
 b2PolygonContact* self = (b2PolygonContact*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2PolygonAndCircleContact (lua_State* tolua_S)
{
 b2PolygonAndCircleContact* self = (b2PolygonAndCircleContact*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2CircleShape (lua_State* tolua_S)
{
 b2CircleShape* self = (b2CircleShape*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2World (lua_State* tolua_S)
{
 b2World* self = (b2World*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2MouseJointDef (lua_State* tolua_S)
{
 b2MouseJointDef* self = (b2MouseJointDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2Transform (lua_State* tolua_S)
{
 b2Transform* self = (b2Transform*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2Mat33 (lua_State* tolua_S)
{
 b2Mat33* self = (b2Mat33*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2Mat22 (lua_State* tolua_S)
{
 b2Mat22* self = (b2Mat22*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2BodyDef (lua_State* tolua_S)
{
 b2BodyDef* self = (b2BodyDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2Island (lua_State* tolua_S)
{
 b2Island* self = (b2Island*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2ChainAndCircleContact (lua_State* tolua_S)
{
 b2ChainAndCircleContact* self = (b2ChainAndCircleContact*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2Shape (lua_State* tolua_S)
{
 b2Shape* self = (b2Shape*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2GearJointDef (lua_State* tolua_S)
{
 b2GearJointDef* self = (b2GearJointDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2EdgeAndPolygonContact (lua_State* tolua_S)
{
 b2EdgeAndPolygonContact* self = (b2EdgeAndPolygonContact*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2ContactListener (lua_State* tolua_S)
{
 b2ContactListener* self = (b2ContactListener*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2EdgeAndCircleContact (lua_State* tolua_S)
{
 b2EdgeAndCircleContact* self = (b2EdgeAndCircleContact*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2ChainShape (lua_State* tolua_S)
{
 b2ChainShape* self = (b2ChainShape*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2Rope (lua_State* tolua_S)
{
 b2Rope* self = (b2Rope*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2Color (lua_State* tolua_S)
{
 b2Color* self = (b2Color*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}

static int tolua_collect_b2RopeJointDef (lua_State* tolua_S)
{
 b2RopeJointDef* self = (b2RopeJointDef*) tolua_tousertype(tolua_S,1,0);
    Mtolua_delete(self);
    return 0;
}
#endif


/* function to register type */
static void tolua_reg_types (lua_State* tolua_S)
{
 tolua_usertype(tolua_S,"b2ManifoldPoint");
 tolua_usertype(tolua_S,"b2StackAllocator");
 tolua_usertype(tolua_S,"b2CircleContact");
 tolua_usertype(tolua_S,"b2Draw");
 tolua_usertype(tolua_S,"b2JointEdge");
 tolua_usertype(tolua_S,"b2StackEntry");
 tolua_usertype(tolua_S,"b2VelocityConstraintPoint");
 tolua_usertype(tolua_S,"b2Fixture");
 tolua_usertype(tolua_S,"b2RevoluteJointDef");
 tolua_usertype(tolua_S,"b2ContactSolver");
 tolua_usertype(tolua_S,"b2DynamicTree");
 tolua_usertype(tolua_S,"b2ContactFeature");
 tolua_usertype(tolua_S,"b2FixtureDef");
 tolua_usertype(tolua_S,"b2FixtureProxy");
 tolua_usertype(tolua_S,"b2ContactFilter");
 tolua_usertype(tolua_S,"b2DistanceJointDef");
 tolua_usertype(tolua_S,"b2SimplexCache");
 tolua_usertype(tolua_S,"b2ContactEdge");
 tolua_usertype(tolua_S,"b2DistanceJoint");
 tolua_usertype(tolua_S,"b2PolygonShape");
 tolua_usertype(tolua_S,"b2RayCastOutput");
 tolua_usertype(tolua_S,"b2WeldJointDef");
 tolua_usertype(tolua_S,"b2PulleyJoint");
 tolua_usertype(tolua_S,"b2Velocity");
 tolua_usertype(tolua_S,"b2ContactRegister");
 tolua_usertype(tolua_S,"b2CircleShape");
 tolua_usertype(tolua_S,"b2ContactID");
 tolua_usertype(tolua_S,"b2Manifold");
 tolua_usertype(tolua_S,"b2ContactCreateFcn");
 tolua_usertype(tolua_S,"b2Profile");
 tolua_usertype(tolua_S,"b2BodyDef");
 tolua_usertype(tolua_S,"b2WorldManifold");
 tolua_usertype(tolua_S,"b2RayCastCallback");
 tolua_usertype(tolua_S,"b2DistanceInput");
 tolua_usertype(tolua_S,"b2RopeJoint");
 tolua_usertype(tolua_S,"b2QueryCallback");
 tolua_usertype(tolua_S,"b2PrismaticJoint");
 tolua_usertype(tolua_S,"b2ContactImpulse");
 tolua_usertype(tolua_S,"b2DestructionListener");
 tolua_usertype(tolua_S,"b2ContactResult");
 tolua_usertype(tolua_S,"b2WheelJoint");
 tolua_usertype(tolua_S,"b2WheelJointDef");
 tolua_usertype(tolua_S,"b2MouseJoint");
 tolua_usertype(tolua_S,"b2Chunk");
 tolua_usertype(tolua_S,"b2PolygonAndCircleContact");
 tolua_usertype(tolua_S,"b2Position");
 tolua_usertype(tolua_S,"b2Transform");
 tolua_usertype(tolua_S,"b2FrictionJointDef");
 tolua_usertype(tolua_S,"b2Timer");
 tolua_usertype(tolua_S,"b2TOIOutput");
 tolua_usertype(tolua_S,"b2ContactSolverDef");
 tolua_usertype(tolua_S,"b2ContactManager");
 tolua_usertype(tolua_S,"b2TOIInput");
 tolua_usertype(tolua_S,"b2Version");
 tolua_usertype(tolua_S,"b2DistanceOutput");
 tolua_usertype(tolua_S,"b2ChainShape");
 tolua_usertype(tolua_S,"b2DistanceProxy");
 tolua_usertype(tolua_S,"b2MassData");
 tolua_usertype(tolua_S,"b2RopeJointDef");
 tolua_usertype(tolua_S,"b2JointDef");
 tolua_usertype(tolua_S,"b2GearJoint");
 tolua_usertype(tolua_S,"b2Rope");
 tolua_usertype(tolua_S,"b2EdgeAndPolygonContact");
 tolua_usertype(tolua_S,"b2RopeDef");
 tolua_usertype(tolua_S,"b2RevoluteJoint");
 tolua_usertype(tolua_S,"b2Mat33");
 tolua_usertype(tolua_S,"b2PrismaticJointDef");
 tolua_usertype(tolua_S,"b2PolygonContact");
 tolua_usertype(tolua_S,"b2BlockAllocator");
 tolua_usertype(tolua_S,"b2MouseJointDef");
 tolua_usertype(tolua_S,"b2PulleyJointDef");
 tolua_usertype(tolua_S,"b2TimeStep");
 tolua_usertype(tolua_S,"b2Contact");
 tolua_usertype(tolua_S,"b2ContactListener");
 tolua_usertype(tolua_S,"b2ChainAndCircleContact");
 tolua_usertype(tolua_S,"b2Rot");
 tolua_usertype(tolua_S,"b2Mat22");
 tolua_usertype(tolua_S,"b2Vec3");
 tolua_usertype(tolua_S,"b2RayCastInput");
 tolua_usertype(tolua_S,"b2SolverData");
 tolua_usertype(tolua_S,"b2ContactVelocityConstraint");
 tolua_usertype(tolua_S,"b2ClipVertex");
 tolua_usertype(tolua_S,"b2Vec2");
 tolua_usertype(tolua_S,"b2Filter");
 tolua_usertype(tolua_S,"b2Shape");
 tolua_usertype(tolua_S,"b2Island");
 tolua_usertype(tolua_S,"b2Block");
 tolua_usertype(tolua_S,"b2EdgeShape");
 tolua_usertype(tolua_S,"b2Pair");
 tolua_usertype(tolua_S,"b2World");
 tolua_usertype(tolua_S,"b2Sweep");
 tolua_usertype(tolua_S,"b2GearJointDef");
 tolua_usertype(tolua_S,"b2AABB");
 tolua_usertype(tolua_S,"b2FrictionJoint");
 tolua_usertype(tolua_S,"b2Jacobian");
 tolua_usertype(tolua_S,"b2ChainAndPolygonContact");
 tolua_usertype(tolua_S,"b2TreeNode");
 tolua_usertype(tolua_S,"b2BroadPhase");
 tolua_usertype(tolua_S,"b2Joint");
 tolua_usertype(tolua_S,"b2ContactPositionConstraint");
 tolua_usertype(tolua_S,"b2Controller");
 tolua_usertype(tolua_S,"b2EdgeAndCircleContact");
 tolua_usertype(tolua_S,"b2WeldJoint");
 tolua_usertype(tolua_S,"b2Body");
 tolua_usertype(tolua_S,"b2Color");
 tolua_usertype(tolua_S,"b2ContactDestroyFcn");
}

/* method: new of class  b2BlockAllocator */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BlockAllocator_new00
static int tolua_LuaBox2D_b2BlockAllocator_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2BlockAllocator* tolua_ret = (b2BlockAllocator*)  Mtolua_new((b2BlockAllocator)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2BlockAllocator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2BlockAllocator */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BlockAllocator_new00_local
static int tolua_LuaBox2D_b2BlockAllocator_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2BlockAllocator* tolua_ret = (b2BlockAllocator*)  Mtolua_new((b2BlockAllocator)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2BlockAllocator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2BlockAllocator */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BlockAllocator_delete00
static int tolua_LuaBox2D_b2BlockAllocator_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BlockAllocator* self = (b2BlockAllocator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Allocate of class  b2BlockAllocator */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BlockAllocator_Allocate00
static int tolua_LuaBox2D_b2BlockAllocator_Allocate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BlockAllocator* self = (b2BlockAllocator*)  tolua_tousertype(tolua_S,1,0);
  int32 size = ((int32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Allocate'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->Allocate(size);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Allocate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Free of class  b2BlockAllocator */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BlockAllocator_Free00
static int tolua_LuaBox2D_b2BlockAllocator_Free00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BlockAllocator* self = (b2BlockAllocator*)  tolua_tousertype(tolua_S,1,0);
  void* p = ((void*)  tolua_touserdata(tolua_S,2,0));
  int32 size = ((int32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Free'", NULL);
#endif
  {
   self->Free(p,size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Free'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  b2BlockAllocator */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BlockAllocator_Clear00
static int tolua_LuaBox2D_b2BlockAllocator_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BlockAllocator* self = (b2BlockAllocator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetType of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetType00
static int tolua_LuaBox2D_b2Fixture_GetType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetType'", NULL);
#endif
  {
   b2Shape::Type tolua_ret = (b2Shape::Type)  self->GetType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetShape of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetShape00
static int tolua_LuaBox2D_b2Fixture_GetShape00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetShape'", NULL);
#endif
  {
   b2Shape* tolua_ret = (b2Shape*)  self->GetShape();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Shape");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetShape'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetShape of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetShape01
static int tolua_LuaBox2D_b2Fixture_GetShape01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetShape'", NULL);
#endif
  {
   const b2Shape* tolua_ret = (const b2Shape*)  self->GetShape();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Shape");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Fixture_GetShape00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSensor of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_SetSensor00
static int tolua_LuaBox2D_b2Fixture_SetSensor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
  bool sensor = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSensor'", NULL);
#endif
  {
   self->SetSensor(sensor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSensor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsSensor of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_IsSensor00
static int tolua_LuaBox2D_b2Fixture_IsSensor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsSensor'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsSensor();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsSensor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFilterData of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_SetFilterData00
static int tolua_LuaBox2D_b2Fixture_SetFilterData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Filter",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
  const b2Filter* filter = ((const b2Filter*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFilterData'", NULL);
#endif
  {
   self->SetFilterData(*filter);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFilterData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFilterData of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetFilterData00
static int tolua_LuaBox2D_b2Fixture_GetFilterData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFilterData'", NULL);
#endif
  {
   const b2Filter& tolua_ret = (const b2Filter&)  self->GetFilterData();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Filter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFilterData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Refilter of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_Refilter00
static int tolua_LuaBox2D_b2Fixture_Refilter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Refilter'", NULL);
#endif
  {
   self->Refilter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Refilter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBody of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetBody00
static int tolua_LuaBox2D_b2Fixture_GetBody00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBody'", NULL);
#endif
  {
   b2Body* tolua_ret = (b2Body*)  self->GetBody();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Body");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBody'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBody of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetBody01
static int tolua_LuaBox2D_b2Fixture_GetBody01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBody'", NULL);
#endif
  {
   const b2Body* tolua_ret = (const b2Body*)  self->GetBody();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Body");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Fixture_GetBody00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNext of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetNext00
static int tolua_LuaBox2D_b2Fixture_GetNext00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNext'", NULL);
#endif
  {
   b2Fixture* tolua_ret = (b2Fixture*)  self->GetNext();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Fixture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNext'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNext of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetNext01
static int tolua_LuaBox2D_b2Fixture_GetNext01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNext'", NULL);
#endif
  {
   const b2Fixture* tolua_ret = (const b2Fixture*)  self->GetNext();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Fixture");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Fixture_GetNext00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUserData of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetUserData00
static int tolua_LuaBox2D_b2Fixture_GetUserData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUserData'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetUserData();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUserData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUserData of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_SetUserData00
static int tolua_LuaBox2D_b2Fixture_SetUserData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
  void* data = ((void*)  tolua_touserdata(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUserData'", NULL);
#endif
  {
   self->SetUserData(data);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUserData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: TestPoint of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_TestPoint00
static int tolua_LuaBox2D_b2Fixture_TestPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* p = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TestPoint'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->TestPoint(*p);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'TestPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RayCast of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_RayCast00
static int tolua_LuaBox2D_b2Fixture_RayCast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2RayCastOutput",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2RayCastInput",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
  b2RayCastOutput* output = ((b2RayCastOutput*)  tolua_tousertype(tolua_S,2,0));
  const b2RayCastInput* input = ((const b2RayCastInput*)  tolua_tousertype(tolua_S,3,0));
  int32 childIndex = ((int32)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RayCast'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RayCast(output,*input,childIndex);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RayCast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMassData of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetMassData00
static int tolua_LuaBox2D_b2Fixture_GetMassData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2MassData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
  b2MassData* massData = ((b2MassData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMassData'", NULL);
#endif
  {
   self->GetMassData(massData);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMassData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDensity of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_SetDensity00
static int tolua_LuaBox2D_b2Fixture_SetDensity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
  float32 density = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDensity'", NULL);
#endif
  {
   self->SetDensity(density);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDensity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDensity of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetDensity00
static int tolua_LuaBox2D_b2Fixture_GetDensity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDensity'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetDensity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDensity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFriction of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetFriction00
static int tolua_LuaBox2D_b2Fixture_GetFriction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFriction'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetFriction();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFriction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFriction of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_SetFriction00
static int tolua_LuaBox2D_b2Fixture_SetFriction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
  float32 friction = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFriction'", NULL);
#endif
  {
   self->SetFriction(friction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFriction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRestitution of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetRestitution00
static int tolua_LuaBox2D_b2Fixture_GetRestitution00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRestitution'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetRestitution();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRestitution'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRestitution of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_SetRestitution00
static int tolua_LuaBox2D_b2Fixture_SetRestitution00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
  float32 restitution = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRestitution'", NULL);
#endif
  {
   self->SetRestitution(restitution);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRestitution'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAABB of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_GetAABB00
static int tolua_LuaBox2D_b2Fixture_GetAABB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
  int32 childIndex = ((int32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAABB'", NULL);
#endif
  {
   const b2AABB& tolua_ret = (const b2AABB&)  self->GetAABB(childIndex);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2AABB");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAABB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2Fixture */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Fixture_Dump00
static int tolua_LuaBox2D_b2Fixture_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* self = (b2Fixture*)  tolua_tousertype(tolua_S,1,0);
  int32 bodyIndex = ((int32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump(bodyIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetType of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_GetType00
static int tolua_LuaBox2D_b2Joint_GetType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Joint* self = (b2Joint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetType'", NULL);
#endif
  {
   b2JointType tolua_ret = (b2JointType)  self->GetType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBodyA of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_GetBodyA00
static int tolua_LuaBox2D_b2Joint_GetBodyA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Joint* self = (b2Joint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBodyA'", NULL);
#endif
  {
   b2Body* tolua_ret = (b2Body*)  self->GetBodyA();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Body");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBodyA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBodyB of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_GetBodyB00
static int tolua_LuaBox2D_b2Joint_GetBodyB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Joint* self = (b2Joint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBodyB'", NULL);
#endif
  {
   b2Body* tolua_ret = (b2Body*)  self->GetBodyB();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Body");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBodyB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorA of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_GetAnchorA00
static int tolua_LuaBox2D_b2Joint_GetAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Joint* self = (const b2Joint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorA'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorA();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorB of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_GetAnchorB00
static int tolua_LuaBox2D_b2Joint_GetAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Joint* self = (const b2Joint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorB'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorB();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionForce of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_GetReactionForce00
static int tolua_LuaBox2D_b2Joint_GetReactionForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2Joint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Joint* self = (const b2Joint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionForce'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetReactionForce(inv_dt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionTorque of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_GetReactionTorque00
static int tolua_LuaBox2D_b2Joint_GetReactionTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2Joint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Joint* self = (const b2Joint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionTorque'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetReactionTorque(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNext of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_GetNext00
static int tolua_LuaBox2D_b2Joint_GetNext00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Joint* self = (b2Joint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNext'", NULL);
#endif
  {
   b2Joint* tolua_ret = (b2Joint*)  self->GetNext();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Joint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNext'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNext of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_GetNext01
static int tolua_LuaBox2D_b2Joint_GetNext01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Joint* self = (b2Joint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNext'", NULL);
#endif
  {
   const b2Joint* tolua_ret = (const b2Joint*)  self->GetNext();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Joint");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Joint_GetNext00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUserData of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_GetUserData00
static int tolua_LuaBox2D_b2Joint_GetUserData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Joint* self = (b2Joint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUserData'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetUserData();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUserData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUserData of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_SetUserData00
static int tolua_LuaBox2D_b2Joint_SetUserData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Joint",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Joint* self = (b2Joint*)  tolua_tousertype(tolua_S,1,0);
  void* data = ((void*)  tolua_touserdata(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUserData'", NULL);
#endif
  {
   self->SetUserData(data);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUserData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsActive of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_IsActive00
static int tolua_LuaBox2D_b2Joint_IsActive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Joint* self = (b2Joint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsActive'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsActive();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsActive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCollideConnected of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_GetCollideConnected00
static int tolua_LuaBox2D_b2Joint_GetCollideConnected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Joint* self = (b2Joint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCollideConnected'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetCollideConnected();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCollideConnected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2Joint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Joint_Dump00
static int tolua_LuaBox2D_b2Joint_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Joint* self = (b2Joint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetManifold of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_GetManifold00
static int tolua_LuaBox2D_b2Contact_GetManifold00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetManifold'", NULL);
#endif
  {
   b2Manifold* tolua_ret = (b2Manifold*)  self->GetManifold();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Manifold");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetManifold'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetManifold of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_GetManifold01
static int tolua_LuaBox2D_b2Contact_GetManifold01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetManifold'", NULL);
#endif
  {
   const b2Manifold* tolua_ret = (const b2Manifold*)  self->GetManifold();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Manifold");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Contact_GetManifold00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldManifold of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_GetWorldManifold00
static int tolua_LuaBox2D_b2Contact_GetWorldManifold00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2WorldManifold",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
  b2WorldManifold* worldManifold = ((b2WorldManifold*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldManifold'", NULL);
#endif
  {
   self->GetWorldManifold(worldManifold);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldManifold'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsTouching of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_IsTouching00
static int tolua_LuaBox2D_b2Contact_IsTouching00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsTouching'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsTouching();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsTouching'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEnabled of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_SetEnabled00
static int tolua_LuaBox2D_b2Contact_SetEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEnabled'", NULL);
#endif
  {
   self->SetEnabled(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsEnabled of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_IsEnabled00
static int tolua_LuaBox2D_b2Contact_IsEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNext of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_GetNext00
static int tolua_LuaBox2D_b2Contact_GetNext00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNext'", NULL);
#endif
  {
   b2Contact* tolua_ret = (b2Contact*)  self->GetNext();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Contact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNext'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNext of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_GetNext01
static int tolua_LuaBox2D_b2Contact_GetNext01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNext'", NULL);
#endif
  {
   const b2Contact* tolua_ret = (const b2Contact*)  self->GetNext();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Contact");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Contact_GetNext00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFixtureA of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_GetFixtureA00
static int tolua_LuaBox2D_b2Contact_GetFixtureA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFixtureA'", NULL);
#endif
  {
   b2Fixture* tolua_ret = (b2Fixture*)  self->GetFixtureA();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Fixture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFixtureA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFixtureA of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_GetFixtureA01
static int tolua_LuaBox2D_b2Contact_GetFixtureA01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFixtureA'", NULL);
#endif
  {
   const b2Fixture* tolua_ret = (const b2Fixture*)  self->GetFixtureA();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Fixture");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Contact_GetFixtureA00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChildIndexA of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_GetChildIndexA00
static int tolua_LuaBox2D_b2Contact_GetChildIndexA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChildIndexA'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetChildIndexA();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChildIndexA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFixtureB of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_GetFixtureB00
static int tolua_LuaBox2D_b2Contact_GetFixtureB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFixtureB'", NULL);
#endif
  {
   b2Fixture* tolua_ret = (b2Fixture*)  self->GetFixtureB();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Fixture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFixtureB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFixtureB of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_GetFixtureB01
static int tolua_LuaBox2D_b2Contact_GetFixtureB01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFixtureB'", NULL);
#endif
  {
   const b2Fixture* tolua_ret = (const b2Fixture*)  self->GetFixtureB();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Fixture");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Contact_GetFixtureB00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChildIndexB of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_GetChildIndexB00
static int tolua_LuaBox2D_b2Contact_GetChildIndexB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChildIndexB'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetChildIndexB();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChildIndexB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFriction of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_SetFriction00
static int tolua_LuaBox2D_b2Contact_SetFriction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
  float32 friction = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFriction'", NULL);
#endif
  {
   self->SetFriction(friction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFriction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFriction of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_GetFriction00
static int tolua_LuaBox2D_b2Contact_GetFriction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFriction'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetFriction();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFriction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetFriction of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_ResetFriction00
static int tolua_LuaBox2D_b2Contact_ResetFriction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetFriction'", NULL);
#endif
  {
   self->ResetFriction();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetFriction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRestitution of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_SetRestitution00
static int tolua_LuaBox2D_b2Contact_SetRestitution00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
  float32 restitution = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRestitution'", NULL);
#endif
  {
   self->SetRestitution(restitution);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRestitution'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRestitution of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_GetRestitution00
static int tolua_LuaBox2D_b2Contact_GetRestitution00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRestitution'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetRestitution();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRestitution'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetRestitution of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_ResetRestitution00
static int tolua_LuaBox2D_b2Contact_ResetRestitution00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetRestitution'", NULL);
#endif
  {
   self->ResetRestitution();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetRestitution'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Evaluate of class  b2Contact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Contact_Evaluate00
static int tolua_LuaBox2D_b2Contact_Evaluate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Contact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Manifold",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* self = (b2Contact*)  tolua_tousertype(tolua_S,1,0);
  b2Manifold* manifold = ((b2Manifold*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Evaluate'", NULL);
#endif
  {
   self->Evaluate(manifold,*xfA,*xfB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Evaluate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_new00
static int tolua_LuaBox2D_b2World_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2World",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Vec2* gravity = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  {
   b2World* tolua_ret = (b2World*)  Mtolua_new((b2World)(*gravity));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2World");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_new00_local
static int tolua_LuaBox2D_b2World_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2World",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Vec2* gravity = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  {
   b2World* tolua_ret = (b2World*)  Mtolua_new((b2World)(*gravity));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2World");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_delete00
static int tolua_LuaBox2D_b2World_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDestructionListener of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_SetDestructionListener00
static int tolua_LuaBox2D_b2World_SetDestructionListener00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2DestructionListener",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  b2DestructionListener* listener = ((b2DestructionListener*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDestructionListener'", NULL);
#endif
  {
   self->SetDestructionListener(listener);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDestructionListener'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetContactFilter of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_SetContactFilter00
static int tolua_LuaBox2D_b2World_SetContactFilter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2ContactFilter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  b2ContactFilter* filter = ((b2ContactFilter*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetContactFilter'", NULL);
#endif
  {
   self->SetContactFilter(filter);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetContactFilter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetContactListener of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_SetContactListener00
static int tolua_LuaBox2D_b2World_SetContactListener00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2ContactListener",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  b2ContactListener* listener = ((b2ContactListener*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetContactListener'", NULL);
#endif
  {
   self->SetContactListener(listener);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetContactListener'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDebugDraw of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_SetDebugDraw00
static int tolua_LuaBox2D_b2World_SetDebugDraw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Draw",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  b2Draw* debugDraw = ((b2Draw*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDebugDraw'", NULL);
#endif
  {
   self->SetDebugDraw(debugDraw);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDebugDraw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateBody of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_CreateBody00
static int tolua_LuaBox2D_b2World_CreateBody00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2BodyDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  const b2BodyDef* def = ((const b2BodyDef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateBody'", NULL);
#endif
  {
   b2Body* tolua_ret = (b2Body*)  self->CreateBody(def);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Body");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateBody'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DestroyBody of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_DestroyBody00
static int tolua_LuaBox2D_b2World_DestroyBody00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  b2Body* body = ((b2Body*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DestroyBody'", NULL);
#endif
  {
   self->DestroyBody(body);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DestroyBody'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateJoint of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_CreateJoint00
static int tolua_LuaBox2D_b2World_CreateJoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2JointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  const b2JointDef* def = ((const b2JointDef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateJoint'", NULL);
#endif
  {
   b2Joint* tolua_ret = (b2Joint*)  self->CreateJoint(def);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Joint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateJoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DestroyJoint of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_DestroyJoint00
static int tolua_LuaBox2D_b2World_DestroyJoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  b2Joint* joint = ((b2Joint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DestroyJoint'", NULL);
#endif
  {
   self->DestroyJoint(joint);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DestroyJoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Step of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_Step00
static int tolua_LuaBox2D_b2World_Step00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
   float timeStep = ((  float)  tolua_tonumber(tolua_S,2,0));
  signed int velocityIterations = (( signed int)  tolua_tonumber(tolua_S,3,0));
  signed int positionIterations = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Step'", NULL);
#endif
  {
   self->Step(timeStep,velocityIterations,positionIterations);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Step'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearForces of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_ClearForces00
static int tolua_LuaBox2D_b2World_ClearForces00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearForces'", NULL);
#endif
  {
   self->ClearForces();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearForces'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DrawDebugData of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_DrawDebugData00
static int tolua_LuaBox2D_b2World_DrawDebugData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DrawDebugData'", NULL);
#endif
  {
   self->DrawDebugData();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DrawDebugData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: QueryAABB of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_QueryAABB00
static int tolua_LuaBox2D_b2World_QueryAABB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2QueryCallback",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2AABB",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  b2QueryCallback* callback = ((b2QueryCallback*)  tolua_tousertype(tolua_S,2,0));
  const b2AABB* aabb = ((const b2AABB*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'QueryAABB'", NULL);
#endif
  {
   self->QueryAABB(callback,*aabb);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'QueryAABB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RayCast of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_RayCast00
static int tolua_LuaBox2D_b2World_RayCast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2RayCastCallback",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  b2RayCastCallback* callback = ((b2RayCastCallback*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* point1 = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec2* point2 = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RayCast'", NULL);
#endif
  {
   self->RayCast(callback,*point1,*point2);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RayCast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBodyList of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetBodyList00
static int tolua_LuaBox2D_b2World_GetBodyList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBodyList'", NULL);
#endif
  {
   b2Body* tolua_ret = (b2Body*)  self->GetBodyList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Body");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBodyList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBodyList of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetBodyList01
static int tolua_LuaBox2D_b2World_GetBodyList01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBodyList'", NULL);
#endif
  {
   const b2Body* tolua_ret = (const b2Body*)  self->GetBodyList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Body");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2World_GetBodyList00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetJointList of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetJointList00
static int tolua_LuaBox2D_b2World_GetJointList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetJointList'", NULL);
#endif
  {
   b2Joint* tolua_ret = (b2Joint*)  self->GetJointList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Joint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetJointList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetJointList of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetJointList01
static int tolua_LuaBox2D_b2World_GetJointList01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetJointList'", NULL);
#endif
  {
   const b2Joint* tolua_ret = (const b2Joint*)  self->GetJointList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Joint");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2World_GetJointList00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetContactList of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetContactList00
static int tolua_LuaBox2D_b2World_GetContactList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetContactList'", NULL);
#endif
  {
   b2Contact* tolua_ret = (b2Contact*)  self->GetContactList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Contact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetContactList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetContactList of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetContactList01
static int tolua_LuaBox2D_b2World_GetContactList01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetContactList'", NULL);
#endif
  {
   const b2Contact* tolua_ret = (const b2Contact*)  self->GetContactList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Contact");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2World_GetContactList00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAllowSleeping of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_SetAllowSleeping00
static int tolua_LuaBox2D_b2World_SetAllowSleeping00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAllowSleeping'", NULL);
#endif
  {
   self->SetAllowSleeping(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAllowSleeping'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAllowSleeping of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetAllowSleeping00
static int tolua_LuaBox2D_b2World_GetAllowSleeping00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2World* self = (const b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAllowSleeping'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetAllowSleeping();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAllowSleeping'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetWarmStarting of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_SetWarmStarting00
static int tolua_LuaBox2D_b2World_SetWarmStarting00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetWarmStarting'", NULL);
#endif
  {
   self->SetWarmStarting(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetWarmStarting'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWarmStarting of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetWarmStarting00
static int tolua_LuaBox2D_b2World_GetWarmStarting00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2World* self = (const b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWarmStarting'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetWarmStarting();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWarmStarting'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetContinuousPhysics of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_SetContinuousPhysics00
static int tolua_LuaBox2D_b2World_SetContinuousPhysics00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetContinuousPhysics'", NULL);
#endif
  {
   self->SetContinuousPhysics(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetContinuousPhysics'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetContinuousPhysics of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetContinuousPhysics00
static int tolua_LuaBox2D_b2World_GetContinuousPhysics00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2World* self = (const b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetContinuousPhysics'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetContinuousPhysics();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetContinuousPhysics'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSubStepping of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_SetSubStepping00
static int tolua_LuaBox2D_b2World_SetSubStepping00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSubStepping'", NULL);
#endif
  {
   self->SetSubStepping(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSubStepping'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSubStepping of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetSubStepping00
static int tolua_LuaBox2D_b2World_GetSubStepping00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2World* self = (const b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSubStepping'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetSubStepping();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSubStepping'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxyCount of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetProxyCount00
static int tolua_LuaBox2D_b2World_GetProxyCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxyCount'", NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->GetProxyCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxyCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBodyCount of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetBodyCount00
static int tolua_LuaBox2D_b2World_GetBodyCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBodyCount'", NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->GetBodyCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBodyCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetJointCount of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetJointCount00
static int tolua_LuaBox2D_b2World_GetJointCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetJointCount'", NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->GetJointCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetJointCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetContactCount of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetContactCount00
static int tolua_LuaBox2D_b2World_GetContactCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetContactCount'", NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->GetContactCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetContactCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTreeHeight of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetTreeHeight00
static int tolua_LuaBox2D_b2World_GetTreeHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTreeHeight'", NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->GetTreeHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTreeHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTreeBalance of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetTreeBalance00
static int tolua_LuaBox2D_b2World_GetTreeBalance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTreeBalance'", NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->GetTreeBalance();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTreeBalance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTreeQuality of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetTreeQuality00
static int tolua_LuaBox2D_b2World_GetTreeQuality00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTreeQuality'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetTreeQuality();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTreeQuality'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetGravity of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_SetGravity00
static int tolua_LuaBox2D_b2World_SetGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* gravity = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetGravity'", NULL);
#endif
  {
   self->SetGravity(*gravity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetGravity of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetGravity00
static int tolua_LuaBox2D_b2World_GetGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetGravity'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetGravity();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsLocked of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_IsLocked00
static int tolua_LuaBox2D_b2World_IsLocked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsLocked'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsLocked();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsLocked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAutoClearForces of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_SetAutoClearForces00
static int tolua_LuaBox2D_b2World_SetAutoClearForces00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAutoClearForces'", NULL);
#endif
  {
   self->SetAutoClearForces(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAutoClearForces'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAutoClearForces of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetAutoClearForces00
static int tolua_LuaBox2D_b2World_GetAutoClearForces00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAutoClearForces'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetAutoClearForces();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAutoClearForces'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetContactManager of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetContactManager00
static int tolua_LuaBox2D_b2World_GetContactManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetContactManager'", NULL);
#endif
  {
   const b2ContactManager& tolua_ret = (const b2ContactManager&)  self->GetContactManager();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2ContactManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetContactManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProfile of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_GetProfile00
static int tolua_LuaBox2D_b2World_GetProfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProfile'", NULL);
#endif
  {
   const b2Profile& tolua_ret = (const b2Profile&)  self->GetProfile();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Profile");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2World */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2World_Dump00
static int tolua_LuaBox2D_b2World_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2World",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2World* self = (b2World*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FixtureDef_new00
static int tolua_LuaBox2D_b2FixtureDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2FixtureDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2FixtureDef* tolua_ret = (b2FixtureDef*)  Mtolua_new((b2FixtureDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2FixtureDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FixtureDef_new00_local
static int tolua_LuaBox2D_b2FixtureDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2FixtureDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2FixtureDef* tolua_ret = (b2FixtureDef*)  Mtolua_new((b2FixtureDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2FixtureDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: shape of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_get_b2FixtureDef_shape_ptr
static int tolua_get_b2FixtureDef_shape_ptr(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'shape'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->shape,"b2Shape");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: shape of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_set_b2FixtureDef_shape_ptr
static int tolua_set_b2FixtureDef_shape_ptr(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'shape'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Shape",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->shape = ((b2Shape*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: userData of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_get_b2FixtureDef_userData
static int tolua_get_b2FixtureDef_userData(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'userData'",NULL);
#endif
  tolua_pushuserdata(tolua_S,(void*)self->userData);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: userData of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_set_b2FixtureDef_userData
static int tolua_set_b2FixtureDef_userData(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'userData'",NULL);
  if (!tolua_isuserdata(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->userData = ((void*)  tolua_touserdata(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: friction of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_get_b2FixtureDef_friction
static int tolua_get_b2FixtureDef_friction(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'friction'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->friction);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: friction of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_set_b2FixtureDef_friction
static int tolua_set_b2FixtureDef_friction(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'friction'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->friction = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: restitution of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_get_b2FixtureDef_restitution
static int tolua_get_b2FixtureDef_restitution(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'restitution'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->restitution);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: restitution of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_set_b2FixtureDef_restitution
static int tolua_set_b2FixtureDef_restitution(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'restitution'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->restitution = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: density of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_get_b2FixtureDef_density
static int tolua_get_b2FixtureDef_density(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'density'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->density);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: density of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_set_b2FixtureDef_density
static int tolua_set_b2FixtureDef_density(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'density'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->density = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: isSensor of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_get_b2FixtureDef_isSensor
static int tolua_get_b2FixtureDef_isSensor(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'isSensor'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->isSensor);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: isSensor of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_set_b2FixtureDef_isSensor
static int tolua_set_b2FixtureDef_isSensor(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'isSensor'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->isSensor = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: filter of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_get_b2FixtureDef_filter
static int tolua_get_b2FixtureDef_filter(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'filter'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->filter,"b2Filter");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: filter of class  b2FixtureDef */
#ifndef TOLUA_DISABLE_tolua_set_b2FixtureDef_filter
static int tolua_set_b2FixtureDef_filter(lua_State* tolua_S)
{
  b2FixtureDef* self = (b2FixtureDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'filter'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Filter",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->filter = *((b2Filter*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: other of class  b2JointEdge */
#ifndef TOLUA_DISABLE_tolua_get_b2JointEdge_other_ptr
static int tolua_get_b2JointEdge_other_ptr(lua_State* tolua_S)
{
  b2JointEdge* self = (b2JointEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'other'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->other,"b2Body");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: other of class  b2JointEdge */
#ifndef TOLUA_DISABLE_tolua_set_b2JointEdge_other_ptr
static int tolua_set_b2JointEdge_other_ptr(lua_State* tolua_S)
{
  b2JointEdge* self = (b2JointEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'other'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Body",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->other = ((b2Body*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: joint of class  b2JointEdge */
#ifndef TOLUA_DISABLE_tolua_get_b2JointEdge_joint_ptr
static int tolua_get_b2JointEdge_joint_ptr(lua_State* tolua_S)
{
  b2JointEdge* self = (b2JointEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'joint'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->joint,"b2Joint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: joint of class  b2JointEdge */
#ifndef TOLUA_DISABLE_tolua_set_b2JointEdge_joint_ptr
static int tolua_set_b2JointEdge_joint_ptr(lua_State* tolua_S)
{
  b2JointEdge* self = (b2JointEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'joint'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Joint",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->joint = ((b2Joint*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: prev of class  b2JointEdge */
#ifndef TOLUA_DISABLE_tolua_get_b2JointEdge_prev_ptr
static int tolua_get_b2JointEdge_prev_ptr(lua_State* tolua_S)
{
  b2JointEdge* self = (b2JointEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'prev'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->prev,"b2JointEdge");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: prev of class  b2JointEdge */
#ifndef TOLUA_DISABLE_tolua_set_b2JointEdge_prev_ptr
static int tolua_set_b2JointEdge_prev_ptr(lua_State* tolua_S)
{
  b2JointEdge* self = (b2JointEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'prev'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2JointEdge",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->prev = ((b2JointEdge*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: next of class  b2JointEdge */
#ifndef TOLUA_DISABLE_tolua_get_b2JointEdge_next_ptr
static int tolua_get_b2JointEdge_next_ptr(lua_State* tolua_S)
{
  b2JointEdge* self = (b2JointEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'next'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->next,"b2JointEdge");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: next of class  b2JointEdge */
#ifndef TOLUA_DISABLE_tolua_set_b2JointEdge_next_ptr
static int tolua_set_b2JointEdge_next_ptr(lua_State* tolua_S)
{
  b2JointEdge* self = (b2JointEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'next'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2JointEdge",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->next = ((b2JointEdge*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: other of class  b2ContactEdge */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactEdge_other_ptr
static int tolua_get_b2ContactEdge_other_ptr(lua_State* tolua_S)
{
  b2ContactEdge* self = (b2ContactEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'other'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->other,"b2Body");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: other of class  b2ContactEdge */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactEdge_other_ptr
static int tolua_set_b2ContactEdge_other_ptr(lua_State* tolua_S)
{
  b2ContactEdge* self = (b2ContactEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'other'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Body",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->other = ((b2Body*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: contact of class  b2ContactEdge */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactEdge_contact_ptr
static int tolua_get_b2ContactEdge_contact_ptr(lua_State* tolua_S)
{
  b2ContactEdge* self = (b2ContactEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'contact'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->contact,"b2Contact");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: contact of class  b2ContactEdge */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactEdge_contact_ptr
static int tolua_set_b2ContactEdge_contact_ptr(lua_State* tolua_S)
{
  b2ContactEdge* self = (b2ContactEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'contact'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->contact = ((b2Contact*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: prev of class  b2ContactEdge */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactEdge_prev_ptr
static int tolua_get_b2ContactEdge_prev_ptr(lua_State* tolua_S)
{
  b2ContactEdge* self = (b2ContactEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'prev'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->prev,"b2ContactEdge");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: prev of class  b2ContactEdge */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactEdge_prev_ptr
static int tolua_set_b2ContactEdge_prev_ptr(lua_State* tolua_S)
{
  b2ContactEdge* self = (b2ContactEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'prev'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2ContactEdge",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->prev = ((b2ContactEdge*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: next of class  b2ContactEdge */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactEdge_next_ptr
static int tolua_get_b2ContactEdge_next_ptr(lua_State* tolua_S)
{
  b2ContactEdge* self = (b2ContactEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'next'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->next,"b2ContactEdge");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: next of class  b2ContactEdge */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactEdge_next_ptr
static int tolua_set_b2ContactEdge_next_ptr(lua_State* tolua_S)
{
  b2ContactEdge* self = (b2ContactEdge*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'next'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2ContactEdge",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->next = ((b2ContactEdge*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BodyDef_new00
static int tolua_LuaBox2D_b2BodyDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2BodyDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2BodyDef* tolua_ret = (b2BodyDef*)  Mtolua_new((b2BodyDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2BodyDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BodyDef_new00_local
static int tolua_LuaBox2D_b2BodyDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2BodyDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2BodyDef* tolua_ret = (b2BodyDef*)  Mtolua_new((b2BodyDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2BodyDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: type of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_type
static int tolua_get_b2BodyDef_type(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: type of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_type
static int tolua_set_b2BodyDef_type(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->type = ((b2BodyType) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: position of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_position
static int tolua_get_b2BodyDef_position(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'position'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->position,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: position of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_position
static int tolua_set_b2BodyDef_position(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'position'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->position = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: angle of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_angle
static int tolua_get_b2BodyDef_angle(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'angle'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->angle);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: angle of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_angle
static int tolua_set_b2BodyDef_angle(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'angle'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->angle = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: linearVelocity of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_linearVelocity
static int tolua_get_b2BodyDef_linearVelocity(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'linearVelocity'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->linearVelocity,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: linearVelocity of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_linearVelocity
static int tolua_set_b2BodyDef_linearVelocity(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'linearVelocity'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->linearVelocity = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: angularVelocity of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_angularVelocity
static int tolua_get_b2BodyDef_angularVelocity(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'angularVelocity'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->angularVelocity);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: angularVelocity of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_angularVelocity
static int tolua_set_b2BodyDef_angularVelocity(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'angularVelocity'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->angularVelocity = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: linearDamping of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_linearDamping
static int tolua_get_b2BodyDef_linearDamping(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'linearDamping'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->linearDamping);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: linearDamping of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_linearDamping
static int tolua_set_b2BodyDef_linearDamping(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'linearDamping'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->linearDamping = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: angularDamping of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_angularDamping
static int tolua_get_b2BodyDef_angularDamping(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'angularDamping'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->angularDamping);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: angularDamping of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_angularDamping
static int tolua_set_b2BodyDef_angularDamping(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'angularDamping'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->angularDamping = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: allowSleep of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_allowSleep
static int tolua_get_b2BodyDef_allowSleep(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'allowSleep'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->allowSleep);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: allowSleep of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_allowSleep
static int tolua_set_b2BodyDef_allowSleep(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'allowSleep'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->allowSleep = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: awake of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_awake
static int tolua_get_b2BodyDef_awake(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'awake'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->awake);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: awake of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_awake
static int tolua_set_b2BodyDef_awake(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'awake'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->awake = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: fixedRotation of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_fixedRotation
static int tolua_get_b2BodyDef_fixedRotation(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'fixedRotation'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->fixedRotation);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: fixedRotation of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_fixedRotation
static int tolua_set_b2BodyDef_fixedRotation(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'fixedRotation'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->fixedRotation = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: bullet of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_bullet
static int tolua_get_b2BodyDef_bullet(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bullet'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->bullet);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: bullet of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_bullet
static int tolua_set_b2BodyDef_bullet(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bullet'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->bullet = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: active of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_active
static int tolua_get_b2BodyDef_active(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'active'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->active);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: active of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_active
static int tolua_set_b2BodyDef_active(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'active'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->active = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: userData of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_userData
static int tolua_get_b2BodyDef_userData(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'userData'",NULL);
#endif
  tolua_pushuserdata(tolua_S,(void*)self->userData);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: userData of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_userData
static int tolua_set_b2BodyDef_userData(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'userData'",NULL);
  if (!tolua_isuserdata(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->userData = ((void*)  tolua_touserdata(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: gravityScale of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_get_b2BodyDef_gravityScale
static int tolua_get_b2BodyDef_gravityScale(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'gravityScale'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->gravityScale);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: gravityScale of class  b2BodyDef */
#ifndef TOLUA_DISABLE_tolua_set_b2BodyDef_gravityScale
static int tolua_set_b2BodyDef_gravityScale(lua_State* tolua_S)
{
  b2BodyDef* self = (b2BodyDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'gravityScale'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->gravityScale = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateFixture of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_CreateFixture00
static int tolua_LuaBox2D_b2Body_CreateFixture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2FixtureDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2FixtureDef* def = ((const b2FixtureDef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateFixture'", NULL);
#endif
  {
   b2Fixture* tolua_ret = (b2Fixture*)  self->CreateFixture(def);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Fixture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateFixture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateFixture of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_CreateFixture01
static int tolua_LuaBox2D_b2Body_CreateFixture01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2Shape",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2Shape* shape = ((const b2Shape*)  tolua_tousertype(tolua_S,2,0));
  float32 density = ((float32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateFixture'", NULL);
#endif
  {
   b2Fixture* tolua_ret = (b2Fixture*)  self->CreateFixture(shape,density);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Fixture");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Body_CreateFixture00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: DestroyFixture of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_DestroyFixture00
static int tolua_LuaBox2D_b2Body_DestroyFixture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  b2Fixture* fixture = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DestroyFixture'", NULL);
#endif
  {
   self->DestroyFixture(fixture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DestroyFixture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTransform of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetTransform00
static int tolua_LuaBox2D_b2Body_SetTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* position = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  float32 angle = ((float32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTransform'", NULL);
#endif
  {
   self->SetTransform(*position,angle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTransform of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetTransform00
static int tolua_LuaBox2D_b2Body_GetTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTransform'", NULL);
#endif
  {
   const b2Transform& tolua_ret = (const b2Transform&)  self->GetTransform();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Transform");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPosition of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetPosition00
static int tolua_LuaBox2D_b2Body_GetPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPosition'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetPosition();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAngle of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetAngle00
static int tolua_LuaBox2D_b2Body_GetAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAngle'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetAngle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldCenter of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetWorldCenter00
static int tolua_LuaBox2D_b2Body_GetWorldCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldCenter'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetWorldCenter();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalCenter of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetLocalCenter00
static int tolua_LuaBox2D_b2Body_GetLocalCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalCenter'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalCenter();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLinearVelocity of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetLinearVelocity00
static int tolua_LuaBox2D_b2Body_SetLinearVelocity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* v = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLinearVelocity'", NULL);
#endif
  {
   self->SetLinearVelocity(*v);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLinearVelocity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLinearVelocity of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetLinearVelocity00
static int tolua_LuaBox2D_b2Body_GetLinearVelocity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLinearVelocity'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetLinearVelocity();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLinearVelocity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAngularVelocity of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetAngularVelocity00
static int tolua_LuaBox2D_b2Body_SetAngularVelocity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  float32 omega = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAngularVelocity'", NULL);
#endif
  {
   self->SetAngularVelocity(omega);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAngularVelocity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAngularVelocity of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetAngularVelocity00
static int tolua_LuaBox2D_b2Body_GetAngularVelocity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAngularVelocity'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetAngularVelocity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAngularVelocity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ApplyForce of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_ApplyForce00
static int tolua_LuaBox2D_b2Body_ApplyForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* force = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* point = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ApplyForce'", NULL);
#endif
  {
   self->ApplyForce(*force,*point);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ApplyForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ApplyForceToCenter of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_ApplyForceToCenter00
static int tolua_LuaBox2D_b2Body_ApplyForceToCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* force = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ApplyForceToCenter'", NULL);
#endif
  {
   self->ApplyForceToCenter(*force);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ApplyForceToCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ApplyTorque of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_ApplyTorque00
static int tolua_LuaBox2D_b2Body_ApplyTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  float32 torque = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ApplyTorque'", NULL);
#endif
  {
   self->ApplyTorque(torque);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ApplyTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ApplyLinearImpulse of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_ApplyLinearImpulse00
static int tolua_LuaBox2D_b2Body_ApplyLinearImpulse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* impulse = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* point = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ApplyLinearImpulse'", NULL);
#endif
  {
   self->ApplyLinearImpulse(*impulse,*point);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ApplyLinearImpulse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ApplyAngularImpulse of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_ApplyAngularImpulse00
static int tolua_LuaBox2D_b2Body_ApplyAngularImpulse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  float32 impulse = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ApplyAngularImpulse'", NULL);
#endif
  {
   self->ApplyAngularImpulse(impulse);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ApplyAngularImpulse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMass of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetMass00
static int tolua_LuaBox2D_b2Body_GetMass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMass'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetMass();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetInertia of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetInertia00
static int tolua_LuaBox2D_b2Body_GetInertia00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetInertia'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetInertia();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetInertia'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMassData of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetMassData00
static int tolua_LuaBox2D_b2Body_GetMassData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2MassData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  b2MassData* data = ((b2MassData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMassData'", NULL);
#endif
  {
   self->GetMassData(data);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMassData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMassData of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetMassData00
static int tolua_LuaBox2D_b2Body_SetMassData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2MassData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2MassData* data = ((const b2MassData*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMassData'", NULL);
#endif
  {
   self->SetMassData(data);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMassData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetMassData of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_ResetMassData00
static int tolua_LuaBox2D_b2Body_ResetMassData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetMassData'", NULL);
#endif
  {
   self->ResetMassData();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetMassData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldPoint of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetWorldPoint00
static int tolua_LuaBox2D_b2Body_GetWorldPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* localPoint = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldPoint'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetWorldPoint(*localPoint);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldVector of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetWorldVector00
static int tolua_LuaBox2D_b2Body_GetWorldVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* localVector = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldVector'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetWorldVector(*localVector);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalPoint of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetLocalPoint00
static int tolua_LuaBox2D_b2Body_GetLocalPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* worldPoint = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalPoint'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetLocalPoint(*worldPoint);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalVector of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetLocalVector00
static int tolua_LuaBox2D_b2Body_GetLocalVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* worldVector = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalVector'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetLocalVector(*worldVector);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLinearVelocityFromWorldPoint of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetLinearVelocityFromWorldPoint00
static int tolua_LuaBox2D_b2Body_GetLinearVelocityFromWorldPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* worldPoint = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLinearVelocityFromWorldPoint'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetLinearVelocityFromWorldPoint(*worldPoint);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLinearVelocityFromWorldPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLinearVelocityFromLocalPoint of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetLinearVelocityFromLocalPoint00
static int tolua_LuaBox2D_b2Body_GetLinearVelocityFromLocalPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* localPoint = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLinearVelocityFromLocalPoint'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetLinearVelocityFromLocalPoint(*localPoint);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLinearVelocityFromLocalPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLinearDamping of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetLinearDamping00
static int tolua_LuaBox2D_b2Body_GetLinearDamping00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLinearDamping'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetLinearDamping();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLinearDamping'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLinearDamping of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetLinearDamping00
static int tolua_LuaBox2D_b2Body_SetLinearDamping00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  float32 linearDamping = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLinearDamping'", NULL);
#endif
  {
   self->SetLinearDamping(linearDamping);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLinearDamping'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAngularDamping of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetAngularDamping00
static int tolua_LuaBox2D_b2Body_GetAngularDamping00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAngularDamping'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetAngularDamping();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAngularDamping'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAngularDamping of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetAngularDamping00
static int tolua_LuaBox2D_b2Body_SetAngularDamping00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  float32 angularDamping = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAngularDamping'", NULL);
#endif
  {
   self->SetAngularDamping(angularDamping);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAngularDamping'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetGravityScale of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetGravityScale00
static int tolua_LuaBox2D_b2Body_GetGravityScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetGravityScale'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetGravityScale();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetGravityScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetGravityScale of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetGravityScale00
static int tolua_LuaBox2D_b2Body_SetGravityScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  float32 scale = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetGravityScale'", NULL);
#endif
  {
   self->SetGravityScale(scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetGravityScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetType of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetType00
static int tolua_LuaBox2D_b2Body_SetType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  b2BodyType type = ((b2BodyType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetType'", NULL);
#endif
  {
   self->SetType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetType of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetType00
static int tolua_LuaBox2D_b2Body_GetType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetType'", NULL);
#endif
  {
   b2BodyType tolua_ret = (b2BodyType)  self->GetType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBullet of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetBullet00
static int tolua_LuaBox2D_b2Body_SetBullet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBullet'", NULL);
#endif
  {
   self->SetBullet(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBullet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsBullet of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_IsBullet00
static int tolua_LuaBox2D_b2Body_IsBullet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsBullet'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsBullet();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsBullet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSleepingAllowed of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetSleepingAllowed00
static int tolua_LuaBox2D_b2Body_SetSleepingAllowed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSleepingAllowed'", NULL);
#endif
  {
   self->SetSleepingAllowed(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSleepingAllowed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsSleepingAllowed of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_IsSleepingAllowed00
static int tolua_LuaBox2D_b2Body_IsSleepingAllowed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsSleepingAllowed'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsSleepingAllowed();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsSleepingAllowed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAwake of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetAwake00
static int tolua_LuaBox2D_b2Body_SetAwake00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAwake'", NULL);
#endif
  {
   self->SetAwake(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAwake'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAwake of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_IsAwake00
static int tolua_LuaBox2D_b2Body_IsAwake00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAwake'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAwake();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAwake'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetActive of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetActive00
static int tolua_LuaBox2D_b2Body_SetActive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetActive'", NULL);
#endif
  {
   self->SetActive(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetActive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsActive of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_IsActive00
static int tolua_LuaBox2D_b2Body_IsActive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsActive'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsActive();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsActive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFixedRotation of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetFixedRotation00
static int tolua_LuaBox2D_b2Body_SetFixedRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFixedRotation'", NULL);
#endif
  {
   self->SetFixedRotation(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFixedRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsFixedRotation of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_IsFixedRotation00
static int tolua_LuaBox2D_b2Body_IsFixedRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsFixedRotation'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsFixedRotation();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsFixedRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFixtureList of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetFixtureList00
static int tolua_LuaBox2D_b2Body_GetFixtureList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFixtureList'", NULL);
#endif
  {
   b2Fixture* tolua_ret = (b2Fixture*)  self->GetFixtureList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Fixture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFixtureList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFixtureList of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetFixtureList01
static int tolua_LuaBox2D_b2Body_GetFixtureList01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFixtureList'", NULL);
#endif
  {
   const b2Fixture* tolua_ret = (const b2Fixture*)  self->GetFixtureList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Fixture");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Body_GetFixtureList00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetJointList of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetJointList00
static int tolua_LuaBox2D_b2Body_GetJointList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetJointList'", NULL);
#endif
  {
   b2JointEdge* tolua_ret = (b2JointEdge*)  self->GetJointList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2JointEdge");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetJointList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetJointList of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetJointList01
static int tolua_LuaBox2D_b2Body_GetJointList01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetJointList'", NULL);
#endif
  {
   const b2JointEdge* tolua_ret = (const b2JointEdge*)  self->GetJointList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2JointEdge");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Body_GetJointList00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetContactList of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetContactList00
static int tolua_LuaBox2D_b2Body_GetContactList00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetContactList'", NULL);
#endif
  {
   b2ContactEdge* tolua_ret = (b2ContactEdge*)  self->GetContactList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2ContactEdge");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetContactList'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetContactList of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetContactList01
static int tolua_LuaBox2D_b2Body_GetContactList01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetContactList'", NULL);
#endif
  {
   const b2ContactEdge* tolua_ret = (const b2ContactEdge*)  self->GetContactList();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2ContactEdge");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Body_GetContactList00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNext of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetNext00
static int tolua_LuaBox2D_b2Body_GetNext00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNext'", NULL);
#endif
  {
   b2Body* tolua_ret = (b2Body*)  self->GetNext();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Body");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNext'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNext of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetNext01
static int tolua_LuaBox2D_b2Body_GetNext01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNext'", NULL);
#endif
  {
   const b2Body* tolua_ret = (const b2Body*)  self->GetNext();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Body");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Body_GetNext00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUserData of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetUserData00
static int tolua_LuaBox2D_b2Body_GetUserData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUserData'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetUserData();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUserData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUserData of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetUserData00
static int tolua_LuaBox2D_b2Body_SetUserData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  void* data = ((void*)  tolua_touserdata(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUserData'", NULL);
#endif
  {
   self->SetUserData(data);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUserData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUserData of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_SetUserData01
static int tolua_LuaBox2D_b2Body_SetUserData01(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
  int data = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUserData'", NULL);
#endif
  {
   self->SetUserData((void*)data);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUserData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorld of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetWorld00
static int tolua_LuaBox2D_b2Body_GetWorld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorld'", NULL);
#endif
  {
   b2World* tolua_ret = (b2World*)  self->GetWorld();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2World");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorld of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_GetWorld01
static int tolua_LuaBox2D_b2Body_GetWorld01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorld'", NULL);
#endif
  {
   const b2World* tolua_ret = (const b2World*)  self->GetWorld();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2World");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Body_GetWorld00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2Body */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Body_Dump00
static int tolua_LuaBox2D_b2Body_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Body* self = (b2Body*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: proxyIdA of class  b2Pair */
#ifndef TOLUA_DISABLE_tolua_get_b2Pair_proxyIdA
static int tolua_get_b2Pair_proxyIdA(lua_State* tolua_S)
{
  b2Pair* self = (b2Pair*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyIdA'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->proxyIdA);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: proxyIdA of class  b2Pair */
#ifndef TOLUA_DISABLE_tolua_set_b2Pair_proxyIdA
static int tolua_set_b2Pair_proxyIdA(lua_State* tolua_S)
{
  b2Pair* self = (b2Pair*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyIdA'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->proxyIdA = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: proxyIdB of class  b2Pair */
#ifndef TOLUA_DISABLE_tolua_get_b2Pair_proxyIdB
static int tolua_get_b2Pair_proxyIdB(lua_State* tolua_S)
{
  b2Pair* self = (b2Pair*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyIdB'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->proxyIdB);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: proxyIdB of class  b2Pair */
#ifndef TOLUA_DISABLE_tolua_set_b2Pair_proxyIdB
static int tolua_set_b2Pair_proxyIdB(lua_State* tolua_S)
{
  b2Pair* self = (b2Pair*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyIdB'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->proxyIdB = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: next of class  b2Pair */
#ifndef TOLUA_DISABLE_tolua_get_b2Pair_next
static int tolua_get_b2Pair_next(lua_State* tolua_S)
{
  b2Pair* self = (b2Pair*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'next'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->next);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: next of class  b2Pair */
#ifndef TOLUA_DISABLE_tolua_set_b2Pair_next
static int tolua_set_b2Pair_next(lua_State* tolua_S)
{
  b2Pair* self = (b2Pair*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'next'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->next = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_new00
static int tolua_LuaBox2D_b2BroadPhase_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2BroadPhase* tolua_ret = (b2BroadPhase*)  Mtolua_new((b2BroadPhase)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2BroadPhase");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_new00_local
static int tolua_LuaBox2D_b2BroadPhase_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2BroadPhase* tolua_ret = (b2BroadPhase*)  Mtolua_new((b2BroadPhase)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2BroadPhase");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_delete00
static int tolua_LuaBox2D_b2BroadPhase_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BroadPhase* self = (b2BroadPhase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateProxy of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_CreateProxy00
static int tolua_LuaBox2D_b2BroadPhase_CreateProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2AABB",0,&tolua_err)) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BroadPhase* self = (b2BroadPhase*)  tolua_tousertype(tolua_S,1,0);
  const b2AABB* aabb = ((const b2AABB*)  tolua_tousertype(tolua_S,2,0));
  void* userData = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateProxy'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->CreateProxy(*aabb,userData);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DestroyProxy of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_DestroyProxy00
static int tolua_LuaBox2D_b2BroadPhase_DestroyProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BroadPhase* self = (b2BroadPhase*)  tolua_tousertype(tolua_S,1,0);
  int32 proxyId = ((int32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DestroyProxy'", NULL);
#endif
  {
   self->DestroyProxy(proxyId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DestroyProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MoveProxy of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_MoveProxy00
static int tolua_LuaBox2D_b2BroadPhase_MoveProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2AABB",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BroadPhase* self = (b2BroadPhase*)  tolua_tousertype(tolua_S,1,0);
  int32 proxyId = ((int32)  tolua_tonumber(tolua_S,2,0));
  const b2AABB* aabb = ((const b2AABB*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec2* displacement = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MoveProxy'", NULL);
#endif
  {
   self->MoveProxy(proxyId,*aabb,*displacement);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MoveProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: TouchProxy of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_TouchProxy00
static int tolua_LuaBox2D_b2BroadPhase_TouchProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BroadPhase* self = (b2BroadPhase*)  tolua_tousertype(tolua_S,1,0);
  int32 proxyId = ((int32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TouchProxy'", NULL);
#endif
  {
   self->TouchProxy(proxyId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'TouchProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFatAABB of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_GetFatAABB00
static int tolua_LuaBox2D_b2BroadPhase_GetFatAABB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BroadPhase* self = (b2BroadPhase*)  tolua_tousertype(tolua_S,1,0);
  int32 proxyId = ((int32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFatAABB'", NULL);
#endif
  {
   const b2AABB& tolua_ret = (const b2AABB&)  self->GetFatAABB(proxyId);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2AABB");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFatAABB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUserData of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_GetUserData00
static int tolua_LuaBox2D_b2BroadPhase_GetUserData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BroadPhase* self = (b2BroadPhase*)  tolua_tousertype(tolua_S,1,0);
  int32 proxyId = ((int32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUserData'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetUserData(proxyId);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUserData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: TestOverlap of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_TestOverlap00
static int tolua_LuaBox2D_b2BroadPhase_TestOverlap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BroadPhase* self = (b2BroadPhase*)  tolua_tousertype(tolua_S,1,0);
  int32 proxyIdA = ((int32)  tolua_tonumber(tolua_S,2,0));
  int32 proxyIdB = ((int32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TestOverlap'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->TestOverlap(proxyIdA,proxyIdB);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'TestOverlap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProxyCount of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_GetProxyCount00
static int tolua_LuaBox2D_b2BroadPhase_GetProxyCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BroadPhase* self = (b2BroadPhase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProxyCount'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetProxyCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProxyCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTreeHeight of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_GetTreeHeight00
static int tolua_LuaBox2D_b2BroadPhase_GetTreeHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BroadPhase* self = (b2BroadPhase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTreeHeight'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetTreeHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTreeHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTreeBalance of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_GetTreeBalance00
static int tolua_LuaBox2D_b2BroadPhase_GetTreeBalance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BroadPhase* self = (b2BroadPhase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTreeBalance'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetTreeBalance();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTreeBalance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTreeQuality of class  b2BroadPhase */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2BroadPhase_GetTreeQuality00
static int tolua_LuaBox2D_b2BroadPhase_GetTreeQuality00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2BroadPhase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2BroadPhase* self = (b2BroadPhase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTreeQuality'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetTreeQuality();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTreeQuality'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  b2ChainAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainAndCircleContact_Create00
static int tolua_LuaBox2D_b2ChainAndCircleContact_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ChainAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  int32 indexA = ((int32)  tolua_tonumber(tolua_S,3,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,4,0));
  int32 indexB = ((int32)  tolua_tonumber(tolua_S,5,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,6,0));
  {
   b2Contact* tolua_ret = (b2Contact*)  b2ChainAndCircleContact::Create(fixtureA,indexA,fixtureB,indexB,allocator);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Contact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Destroy of class  b2ChainAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainAndCircleContact_Destroy00
static int tolua_LuaBox2D_b2ChainAndCircleContact_Destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ChainAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* contact = ((b2Contact*)  tolua_tousertype(tolua_S,2,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,3,0));
  {
   b2ChainAndCircleContact::Destroy(contact,allocator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2ChainAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainAndCircleContact_new00
static int tolua_LuaBox2D_b2ChainAndCircleContact_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ChainAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  int32 indexA = ((int32)  tolua_tonumber(tolua_S,3,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,4,0));
  int32 indexB = ((int32)  tolua_tonumber(tolua_S,5,0));
  {
   b2ChainAndCircleContact* tolua_ret = (b2ChainAndCircleContact*)  Mtolua_new((b2ChainAndCircleContact)(fixtureA,indexA,fixtureB,indexB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2ChainAndCircleContact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2ChainAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainAndCircleContact_new00_local
static int tolua_LuaBox2D_b2ChainAndCircleContact_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ChainAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  int32 indexA = ((int32)  tolua_tonumber(tolua_S,3,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,4,0));
  int32 indexB = ((int32)  tolua_tonumber(tolua_S,5,0));
  {
   b2ChainAndCircleContact* tolua_ret = (b2ChainAndCircleContact*)  Mtolua_new((b2ChainAndCircleContact)(fixtureA,indexA,fixtureB,indexB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2ChainAndCircleContact");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2ChainAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainAndCircleContact_delete00
static int tolua_LuaBox2D_b2ChainAndCircleContact_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainAndCircleContact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainAndCircleContact* self = (b2ChainAndCircleContact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Evaluate of class  b2ChainAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainAndCircleContact_Evaluate00
static int tolua_LuaBox2D_b2ChainAndCircleContact_Evaluate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Manifold",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainAndCircleContact* self = (b2ChainAndCircleContact*)  tolua_tousertype(tolua_S,1,0);
  b2Manifold* manifold = ((b2Manifold*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Evaluate'", NULL);
#endif
  {
   self->Evaluate(manifold,*xfA,*xfB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Evaluate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  b2ChainAndPolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainAndPolygonContact_Create00
static int tolua_LuaBox2D_b2ChainAndPolygonContact_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ChainAndPolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  int32 indexA = ((int32)  tolua_tonumber(tolua_S,3,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,4,0));
  int32 indexB = ((int32)  tolua_tonumber(tolua_S,5,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,6,0));
  {
   b2Contact* tolua_ret = (b2Contact*)  b2ChainAndPolygonContact::Create(fixtureA,indexA,fixtureB,indexB,allocator);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Contact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Destroy of class  b2ChainAndPolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainAndPolygonContact_Destroy00
static int tolua_LuaBox2D_b2ChainAndPolygonContact_Destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ChainAndPolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* contact = ((b2Contact*)  tolua_tousertype(tolua_S,2,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,3,0));
  {
   b2ChainAndPolygonContact::Destroy(contact,allocator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2ChainAndPolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainAndPolygonContact_new00
static int tolua_LuaBox2D_b2ChainAndPolygonContact_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ChainAndPolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  int32 indexA = ((int32)  tolua_tonumber(tolua_S,3,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,4,0));
  int32 indexB = ((int32)  tolua_tonumber(tolua_S,5,0));
  {
   b2ChainAndPolygonContact* tolua_ret = (b2ChainAndPolygonContact*)  Mtolua_new((b2ChainAndPolygonContact)(fixtureA,indexA,fixtureB,indexB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2ChainAndPolygonContact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2ChainAndPolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainAndPolygonContact_new00_local
static int tolua_LuaBox2D_b2ChainAndPolygonContact_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ChainAndPolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  int32 indexA = ((int32)  tolua_tonumber(tolua_S,3,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,4,0));
  int32 indexB = ((int32)  tolua_tonumber(tolua_S,5,0));
  {
   b2ChainAndPolygonContact* tolua_ret = (b2ChainAndPolygonContact*)  Mtolua_new((b2ChainAndPolygonContact)(fixtureA,indexA,fixtureB,indexB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2ChainAndPolygonContact");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2ChainAndPolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainAndPolygonContact_delete00
static int tolua_LuaBox2D_b2ChainAndPolygonContact_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainAndPolygonContact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainAndPolygonContact* self = (b2ChainAndPolygonContact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Evaluate of class  b2ChainAndPolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainAndPolygonContact_Evaluate00
static int tolua_LuaBox2D_b2ChainAndPolygonContact_Evaluate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainAndPolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Manifold",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainAndPolygonContact* self = (b2ChainAndPolygonContact*)  tolua_tousertype(tolua_S,1,0);
  b2Manifold* manifold = ((b2Manifold*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Evaluate'", NULL);
#endif
  {
   self->Evaluate(manifold,*xfA,*xfB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Evaluate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeShape_new00
static int tolua_LuaBox2D_b2EdgeShape_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2EdgeShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2EdgeShape* tolua_ret = (b2EdgeShape*)  Mtolua_new((b2EdgeShape)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2EdgeShape");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeShape_new00_local
static int tolua_LuaBox2D_b2EdgeShape_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2EdgeShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2EdgeShape* tolua_ret = (b2EdgeShape*)  Mtolua_new((b2EdgeShape)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2EdgeShape");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeShape_Set00
static int tolua_LuaBox2D_b2EdgeShape_Set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2EdgeShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* v1 = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* v2 = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set'", NULL);
#endif
  {
   self->Set(*v1,*v2);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clone of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeShape_Clone00
static int tolua_LuaBox2D_b2EdgeShape_Clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2EdgeShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clone'", NULL);
#endif
  {
   b2Shape* tolua_ret = (b2Shape*)  self->Clone(allocator);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Shape");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChildCount of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeShape_GetChildCount00
static int tolua_LuaBox2D_b2EdgeShape_GetChildCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2EdgeShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChildCount'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetChildCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChildCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: TestPoint of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeShape_TestPoint00
static int tolua_LuaBox2D_b2EdgeShape_TestPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2EdgeShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
  const b2Transform* transform = ((const b2Transform*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* p = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TestPoint'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->TestPoint(*transform,*p);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'TestPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RayCast of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeShape_RayCast00
static int tolua_LuaBox2D_b2EdgeShape_RayCast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2EdgeShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2RayCastOutput",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2RayCastInput",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
  b2RayCastOutput* output = ((b2RayCastOutput*)  tolua_tousertype(tolua_S,2,0));
  const b2RayCastInput* input = ((const b2RayCastInput*)  tolua_tousertype(tolua_S,3,0));
  const b2Transform* transform = ((const b2Transform*)  tolua_tousertype(tolua_S,4,0));
  int32 childIndex = ((int32)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RayCast'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RayCast(output,*input,*transform,childIndex);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RayCast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ComputeAABB of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeShape_ComputeAABB00
static int tolua_LuaBox2D_b2EdgeShape_ComputeAABB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2EdgeShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2AABB",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
  b2AABB* aabb = ((b2AABB*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* transform = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  int32 childIndex = ((int32)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ComputeAABB'", NULL);
#endif
  {
   self->ComputeAABB(aabb,*transform,childIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ComputeAABB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ComputeMass of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeShape_ComputeMass00
static int tolua_LuaBox2D_b2EdgeShape_ComputeMass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2EdgeShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2MassData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
  b2MassData* massData = ((b2MassData*)  tolua_tousertype(tolua_S,2,0));
  float32 density = ((float32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ComputeMass'", NULL);
#endif
  {
   self->ComputeMass(massData,density);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ComputeMass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_vertex1 of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_get_b2EdgeShape_m_vertex1
static int tolua_get_b2EdgeShape_m_vertex1(lua_State* tolua_S)
{
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_vertex1'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->m_vertex1,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_vertex1 of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_set_b2EdgeShape_m_vertex1
static int tolua_set_b2EdgeShape_m_vertex1(lua_State* tolua_S)
{
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_vertex1'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_vertex1 = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_vertex2 of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_get_b2EdgeShape_m_vertex2
static int tolua_get_b2EdgeShape_m_vertex2(lua_State* tolua_S)
{
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_vertex2'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->m_vertex2,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_vertex2 of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_set_b2EdgeShape_m_vertex2
static int tolua_set_b2EdgeShape_m_vertex2(lua_State* tolua_S)
{
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_vertex2'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_vertex2 = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_vertex0 of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_get_b2EdgeShape_m_vertex0
static int tolua_get_b2EdgeShape_m_vertex0(lua_State* tolua_S)
{
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_vertex0'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->m_vertex0,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_vertex0 of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_set_b2EdgeShape_m_vertex0
static int tolua_set_b2EdgeShape_m_vertex0(lua_State* tolua_S)
{
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_vertex0'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_vertex0 = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_vertex3 of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_get_b2EdgeShape_m_vertex3
static int tolua_get_b2EdgeShape_m_vertex3(lua_State* tolua_S)
{
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_vertex3'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->m_vertex3,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_vertex3 of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_set_b2EdgeShape_m_vertex3
static int tolua_set_b2EdgeShape_m_vertex3(lua_State* tolua_S)
{
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_vertex3'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_vertex3 = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_hasVertex0 of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_get_b2EdgeShape_m_hasVertex0
static int tolua_get_b2EdgeShape_m_hasVertex0(lua_State* tolua_S)
{
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_hasVertex0'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_hasVertex0);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_hasVertex0 of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_set_b2EdgeShape_m_hasVertex0
static int tolua_set_b2EdgeShape_m_hasVertex0(lua_State* tolua_S)
{
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_hasVertex0'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_hasVertex0 = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_hasVertex3 of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_get_b2EdgeShape_m_hasVertex3
static int tolua_get_b2EdgeShape_m_hasVertex3(lua_State* tolua_S)
{
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_hasVertex3'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_hasVertex3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_hasVertex3 of class  b2EdgeShape */
#ifndef TOLUA_DISABLE_tolua_set_b2EdgeShape_m_hasVertex3
static int tolua_set_b2EdgeShape_m_hasVertex3(lua_State* tolua_S)
{
  b2EdgeShape* self = (b2EdgeShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_hasVertex3'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_hasVertex3 = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_new00
static int tolua_LuaBox2D_b2ChainShape_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2ChainShape* tolua_ret = (b2ChainShape*)  Mtolua_new((b2ChainShape)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2ChainShape");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_new00_local
static int tolua_LuaBox2D_b2ChainShape_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2ChainShape* tolua_ret = (b2ChainShape*)  Mtolua_new((b2ChainShape)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2ChainShape");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_delete00
static int tolua_LuaBox2D_b2ChainShape_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateLoop of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_CreateLoop00
static int tolua_LuaBox2D_b2ChainShape_CreateLoop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* vertices = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  int32 count = ((int32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateLoop'", NULL);
#endif
  {
   self->CreateLoop(vertices,count);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateLoop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateChain of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_CreateChain00
static int tolua_LuaBox2D_b2ChainShape_CreateChain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* vertices = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  int32 count = ((int32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateChain'", NULL);
#endif
  {
   self->CreateChain(vertices,count);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateChain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPrevVertex of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_SetPrevVertex00
static int tolua_LuaBox2D_b2ChainShape_SetPrevVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* prevVertex = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPrevVertex'", NULL);
#endif
  {
   self->SetPrevVertex(*prevVertex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPrevVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetNextVertex of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_SetNextVertex00
static int tolua_LuaBox2D_b2ChainShape_SetNextVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* nextVertex = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetNextVertex'", NULL);
#endif
  {
   self->SetNextVertex(*nextVertex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNextVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clone of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_Clone00
static int tolua_LuaBox2D_b2ChainShape_Clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clone'", NULL);
#endif
  {
   b2Shape* tolua_ret = (b2Shape*)  self->Clone(allocator);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Shape");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChildCount of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_GetChildCount00
static int tolua_LuaBox2D_b2ChainShape_GetChildCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChildCount'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetChildCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChildCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChildEdge of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_GetChildEdge00
static int tolua_LuaBox2D_b2ChainShape_GetChildEdge00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2EdgeShape",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
  b2EdgeShape* edge = ((b2EdgeShape*)  tolua_tousertype(tolua_S,2,0));
  int32 index = ((int32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChildEdge'", NULL);
#endif
  {
   self->GetChildEdge(edge,index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChildEdge'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: TestPoint of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_TestPoint00
static int tolua_LuaBox2D_b2ChainShape_TestPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
  const b2Transform* transform = ((const b2Transform*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* p = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TestPoint'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->TestPoint(*transform,*p);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'TestPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RayCast of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_RayCast00
static int tolua_LuaBox2D_b2ChainShape_RayCast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2RayCastOutput",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2RayCastInput",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
  b2RayCastOutput* output = ((b2RayCastOutput*)  tolua_tousertype(tolua_S,2,0));
  const b2RayCastInput* input = ((const b2RayCastInput*)  tolua_tousertype(tolua_S,3,0));
  const b2Transform* transform = ((const b2Transform*)  tolua_tousertype(tolua_S,4,0));
  int32 childIndex = ((int32)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RayCast'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RayCast(output,*input,*transform,childIndex);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RayCast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ComputeAABB of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_ComputeAABB00
static int tolua_LuaBox2D_b2ChainShape_ComputeAABB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2AABB",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
  b2AABB* aabb = ((b2AABB*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* transform = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  int32 childIndex = ((int32)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ComputeAABB'", NULL);
#endif
  {
   self->ComputeAABB(aabb,*transform,childIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ComputeAABB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ComputeMass of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ChainShape_ComputeMass00
static int tolua_LuaBox2D_b2ChainShape_ComputeMass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ChainShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2MassData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
  b2MassData* massData = ((b2MassData*)  tolua_tousertype(tolua_S,2,0));
  float32 density = ((float32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ComputeMass'", NULL);
#endif
  {
   self->ComputeMass(massData,density);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ComputeMass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_vertices of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_get_b2ChainShape_m_vertices_ptr
static int tolua_get_b2ChainShape_m_vertices_ptr(lua_State* tolua_S)
{
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_vertices'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_vertices,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_vertices of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_set_b2ChainShape_m_vertices_ptr
static int tolua_set_b2ChainShape_m_vertices_ptr(lua_State* tolua_S)
{
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_vertices'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_vertices = ((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_count of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_get_b2ChainShape_m_count
static int tolua_get_b2ChainShape_m_count(lua_State* tolua_S)
{
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_count'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_count);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_count of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_set_b2ChainShape_m_count
static int tolua_set_b2ChainShape_m_count(lua_State* tolua_S)
{
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_count'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_count = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_prevVertex of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_get_b2ChainShape_m_prevVertex
static int tolua_get_b2ChainShape_m_prevVertex(lua_State* tolua_S)
{
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_prevVertex'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->m_prevVertex,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_prevVertex of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_set_b2ChainShape_m_prevVertex
static int tolua_set_b2ChainShape_m_prevVertex(lua_State* tolua_S)
{
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_prevVertex'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_prevVertex = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_nextVertex of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_get_b2ChainShape_m_nextVertex
static int tolua_get_b2ChainShape_m_nextVertex(lua_State* tolua_S)
{
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nextVertex'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->m_nextVertex,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_nextVertex of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_set_b2ChainShape_m_nextVertex
static int tolua_set_b2ChainShape_m_nextVertex(lua_State* tolua_S)
{
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_nextVertex'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_nextVertex = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_hasPrevVertex of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_get_b2ChainShape_m_hasPrevVertex
static int tolua_get_b2ChainShape_m_hasPrevVertex(lua_State* tolua_S)
{
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_hasPrevVertex'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_hasPrevVertex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_hasPrevVertex of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_set_b2ChainShape_m_hasPrevVertex
static int tolua_set_b2ChainShape_m_hasPrevVertex(lua_State* tolua_S)
{
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_hasPrevVertex'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_hasPrevVertex = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_hasNextVertex of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_get_b2ChainShape_m_hasNextVertex
static int tolua_get_b2ChainShape_m_hasNextVertex(lua_State* tolua_S)
{
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_hasNextVertex'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->m_hasNextVertex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_hasNextVertex of class  b2ChainShape */
#ifndef TOLUA_DISABLE_tolua_set_b2ChainShape_m_hasNextVertex
static int tolua_set_b2ChainShape_m_hasNextVertex(lua_State* tolua_S)
{
  b2ChainShape* self = (b2ChainShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_hasNextVertex'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_hasNextVertex = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  b2CircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleContact_Create00
static int tolua_LuaBox2D_b2CircleContact_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2CircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  int32 indexA = ((int32)  tolua_tonumber(tolua_S,3,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,4,0));
  int32 indexB = ((int32)  tolua_tonumber(tolua_S,5,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,6,0));
  {
   b2Contact* tolua_ret = (b2Contact*)  b2CircleContact::Create(fixtureA,indexA,fixtureB,indexB,allocator);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Contact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Destroy of class  b2CircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleContact_Destroy00
static int tolua_LuaBox2D_b2CircleContact_Destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2CircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* contact = ((b2Contact*)  tolua_tousertype(tolua_S,2,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,3,0));
  {
   b2CircleContact::Destroy(contact,allocator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2CircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleContact_new00
static int tolua_LuaBox2D_b2CircleContact_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2CircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,3,0));
  {
   b2CircleContact* tolua_ret = (b2CircleContact*)  Mtolua_new((b2CircleContact)(fixtureA,fixtureB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2CircleContact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2CircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleContact_new00_local
static int tolua_LuaBox2D_b2CircleContact_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2CircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,3,0));
  {
   b2CircleContact* tolua_ret = (b2CircleContact*)  Mtolua_new((b2CircleContact)(fixtureA,fixtureB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2CircleContact");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2CircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleContact_delete00
static int tolua_LuaBox2D_b2CircleContact_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2CircleContact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2CircleContact* self = (b2CircleContact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Evaluate of class  b2CircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleContact_Evaluate00
static int tolua_LuaBox2D_b2CircleContact_Evaluate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2CircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Manifold",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2CircleContact* self = (b2CircleContact*)  tolua_tousertype(tolua_S,1,0);
  b2Manifold* manifold = ((b2Manifold*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Evaluate'", NULL);
#endif
  {
   self->Evaluate(manifold,*xfA,*xfB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Evaluate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleShape_new00
static int tolua_LuaBox2D_b2CircleShape_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2CircleShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2CircleShape* tolua_ret = (b2CircleShape*)  Mtolua_new((b2CircleShape)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2CircleShape");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleShape_new00_local
static int tolua_LuaBox2D_b2CircleShape_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2CircleShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2CircleShape* tolua_ret = (b2CircleShape*)  Mtolua_new((b2CircleShape)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2CircleShape");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clone of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleShape_Clone00
static int tolua_LuaBox2D_b2CircleShape_Clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2CircleShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2CircleShape* self = (b2CircleShape*)  tolua_tousertype(tolua_S,1,0);
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clone'", NULL);
#endif
  {
   b2Shape* tolua_ret = (b2Shape*)  self->Clone(allocator);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Shape");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChildCount of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleShape_GetChildCount00
static int tolua_LuaBox2D_b2CircleShape_GetChildCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2CircleShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2CircleShape* self = (b2CircleShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChildCount'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetChildCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChildCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: TestPoint of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleShape_TestPoint00
static int tolua_LuaBox2D_b2CircleShape_TestPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2CircleShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2CircleShape* self = (b2CircleShape*)  tolua_tousertype(tolua_S,1,0);
  const b2Transform* transform = ((const b2Transform*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* p = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TestPoint'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->TestPoint(*transform,*p);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'TestPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RayCast of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleShape_RayCast00
static int tolua_LuaBox2D_b2CircleShape_RayCast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2CircleShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2RayCastOutput",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2RayCastInput",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2CircleShape* self = (b2CircleShape*)  tolua_tousertype(tolua_S,1,0);
  b2RayCastOutput* output = ((b2RayCastOutput*)  tolua_tousertype(tolua_S,2,0));
  const b2RayCastInput* input = ((const b2RayCastInput*)  tolua_tousertype(tolua_S,3,0));
  const b2Transform* transform = ((const b2Transform*)  tolua_tousertype(tolua_S,4,0));
  int32 childIndex = ((int32)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RayCast'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RayCast(output,*input,*transform,childIndex);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RayCast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ComputeAABB of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleShape_ComputeAABB00
static int tolua_LuaBox2D_b2CircleShape_ComputeAABB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2CircleShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2AABB",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2CircleShape* self = (b2CircleShape*)  tolua_tousertype(tolua_S,1,0);
  b2AABB* aabb = ((b2AABB*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* transform = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  int32 childIndex = ((int32)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ComputeAABB'", NULL);
#endif
  {
   self->ComputeAABB(aabb,*transform,childIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ComputeAABB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ComputeMass of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleShape_ComputeMass00
static int tolua_LuaBox2D_b2CircleShape_ComputeMass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2CircleShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2MassData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2CircleShape* self = (b2CircleShape*)  tolua_tousertype(tolua_S,1,0);
  b2MassData* massData = ((b2MassData*)  tolua_tousertype(tolua_S,2,0));
  float32 density = ((float32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ComputeMass'", NULL);
#endif
  {
   self->ComputeMass(massData,density);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ComputeMass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSupport of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleShape_GetSupport00
static int tolua_LuaBox2D_b2CircleShape_GetSupport00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2CircleShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2CircleShape* self = (b2CircleShape*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* d = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSupport'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetSupport(*d);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSupport'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSupportVertex of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleShape_GetSupportVertex00
static int tolua_LuaBox2D_b2CircleShape_GetSupportVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2CircleShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2CircleShape* self = (b2CircleShape*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* d = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSupportVertex'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetSupportVertex(*d);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSupportVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexCount of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleShape_GetVertexCount00
static int tolua_LuaBox2D_b2CircleShape_GetVertexCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2CircleShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2CircleShape* self = (const b2CircleShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexCount'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetVertexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertexCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertex of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CircleShape_GetVertex00
static int tolua_LuaBox2D_b2CircleShape_GetVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2CircleShape",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2CircleShape* self = (b2CircleShape*)  tolua_tousertype(tolua_S,1,0);
  int32 index = ((int32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertex'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetVertex(index);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_p of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_get_b2CircleShape_m_p
static int tolua_get_b2CircleShape_m_p(lua_State* tolua_S)
{
  b2CircleShape* self = (b2CircleShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_p'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->m_p,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_p of class  b2CircleShape */
#ifndef TOLUA_DISABLE_tolua_set_b2CircleShape_m_p
static int tolua_set_b2CircleShape_m_p(lua_State* tolua_S)
{
  b2CircleShape* self = (b2CircleShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_p'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_p = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2Shape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Shape_delete00
static int tolua_LuaBox2D_b2Shape_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Shape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Shape* self = (b2Shape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clone of class  b2Shape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Shape_Clone00
static int tolua_LuaBox2D_b2Shape_Clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2Shape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Shape* self = (const b2Shape*)  tolua_tousertype(tolua_S,1,0);
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clone'", NULL);
#endif
  {
   b2Shape* tolua_ret = (b2Shape*)  self->Clone(allocator);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Shape");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetType of class  b2Shape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Shape_GetType00
static int tolua_LuaBox2D_b2Shape_GetType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Shape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Shape* self = (b2Shape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetType'", NULL);
#endif
  {
   b2Shape::Type tolua_ret = (b2Shape::Type)  self->GetType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChildCount of class  b2Shape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Shape_GetChildCount00
static int tolua_LuaBox2D_b2Shape_GetChildCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2Shape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Shape* self = (const b2Shape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChildCount'", NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->GetChildCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChildCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: TestPoint of class  b2Shape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Shape_TestPoint00
static int tolua_LuaBox2D_b2Shape_TestPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2Shape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Shape* self = (const b2Shape*)  tolua_tousertype(tolua_S,1,0);
  const b2Transform* xf = ((const b2Transform*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* p = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TestPoint'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->TestPoint(*xf,*p);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'TestPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RayCast of class  b2Shape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Shape_RayCast00
static int tolua_LuaBox2D_b2Shape_RayCast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2Shape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2RayCastOutput",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2RayCastInput",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Shape* self = (const b2Shape*)  tolua_tousertype(tolua_S,1,0);
  b2RayCastOutput* output = ((b2RayCastOutput*)  tolua_tousertype(tolua_S,2,0));
  const b2RayCastInput* input = ((const b2RayCastInput*)  tolua_tousertype(tolua_S,3,0));
  const b2Transform* transform = ((const b2Transform*)  tolua_tousertype(tolua_S,4,0));
  signed int childIndex = (( signed int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RayCast'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RayCast(output,*input,*transform,childIndex);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RayCast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ComputeAABB of class  b2Shape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Shape_ComputeAABB00
static int tolua_LuaBox2D_b2Shape_ComputeAABB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2Shape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2AABB",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Shape* self = (const b2Shape*)  tolua_tousertype(tolua_S,1,0);
  b2AABB* aabb = ((b2AABB*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xf = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  signed int childIndex = (( signed int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ComputeAABB'", NULL);
#endif
  {
   self->ComputeAABB(aabb,*xf,childIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ComputeAABB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ComputeMass of class  b2Shape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Shape_ComputeMass00
static int tolua_LuaBox2D_b2Shape_ComputeMass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2Shape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2MassData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Shape* self = (const b2Shape*)  tolua_tousertype(tolua_S,1,0);
  b2MassData* massData = ((b2MassData*)  tolua_tousertype(tolua_S,2,0));
   float density = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ComputeMass'", NULL);
#endif
  {
   self->ComputeMass(massData,density);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ComputeMass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_type of class  b2Shape */
#ifndef TOLUA_DISABLE_tolua_get_b2Shape_m_type
static int tolua_get_b2Shape_m_type(lua_State* tolua_S)
{
  b2Shape* self = (b2Shape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_type of class  b2Shape */
#ifndef TOLUA_DISABLE_tolua_set_b2Shape_m_type
static int tolua_set_b2Shape_m_type(lua_State* tolua_S)
{
  b2Shape* self = (b2Shape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_type = ((b2Shape::Type) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_radius of class  b2Shape */
#ifndef TOLUA_DISABLE_tolua_get_b2Shape_m_radius
static int tolua_get_b2Shape_m_radius(lua_State* tolua_S)
{
  b2Shape* self = (b2Shape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_radius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_radius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_radius of class  b2Shape */
#ifndef TOLUA_DISABLE_tolua_set_b2Shape_m_radius
static int tolua_set_b2Shape_m_radius(lua_State* tolua_S)
{
  b2Shape* self = (b2Shape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_radius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_radius = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonShape_new00
static int tolua_LuaBox2D_b2PolygonShape_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PolygonShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2PolygonShape* tolua_ret = (b2PolygonShape*)  Mtolua_new((b2PolygonShape)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2PolygonShape");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonShape_new00_local
static int tolua_LuaBox2D_b2PolygonShape_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PolygonShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2PolygonShape* tolua_ret = (b2PolygonShape*)  Mtolua_new((b2PolygonShape)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2PolygonShape");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clone of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonShape_Clone00
static int tolua_LuaBox2D_b2PolygonShape_Clone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clone'", NULL);
#endif
  {
   b2Shape* tolua_ret = (b2Shape*)  self->Clone(allocator);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Shape");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetChildCount of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonShape_GetChildCount00
static int tolua_LuaBox2D_b2PolygonShape_GetChildCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetChildCount'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetChildCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetChildCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonShape_Set00
static int tolua_LuaBox2D_b2PolygonShape_Set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* vertices = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  int32 vertexCount = ((int32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set'", NULL);
#endif
  {
   self->Set(vertices,vertexCount);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAsBox of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonShape_SetAsBox00
static int tolua_LuaBox2D_b2PolygonShape_SetAsBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonShape",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
  float32 hx = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 hy = ((float32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAsBox'", NULL);
#endif
  {
   self->SetAsBox(hx,hy);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAsBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAsBox of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonShape_SetAsBox01
static int tolua_LuaBox2D_b2PolygonShape_SetAsBox01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonShape",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
  float32 hx = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 hy = ((float32)  tolua_tonumber(tolua_S,3,0));
  const b2Vec2* center = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
  float32 angle = ((float32)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAsBox'", NULL);
#endif
  {
   self->SetAsBox(hx,hy,*center,angle);
  }
 }
 return 0;
tolua_lerror:
 return tolua_LuaBox2D_b2PolygonShape_SetAsBox00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: TestPoint of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonShape_TestPoint00
static int tolua_LuaBox2D_b2PolygonShape_TestPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
  const b2Transform* transform = ((const b2Transform*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* p = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'TestPoint'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->TestPoint(*transform,*p);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'TestPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RayCast of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonShape_RayCast00
static int tolua_LuaBox2D_b2PolygonShape_RayCast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2RayCastOutput",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2RayCastInput",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
  b2RayCastOutput* output = ((b2RayCastOutput*)  tolua_tousertype(tolua_S,2,0));
  const b2RayCastInput* input = ((const b2RayCastInput*)  tolua_tousertype(tolua_S,3,0));
  const b2Transform* transform = ((const b2Transform*)  tolua_tousertype(tolua_S,4,0));
  int32 childIndex = ((int32)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RayCast'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RayCast(output,*input,*transform,childIndex);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RayCast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ComputeAABB of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonShape_ComputeAABB00
static int tolua_LuaBox2D_b2PolygonShape_ComputeAABB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2AABB",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
  b2AABB* aabb = ((b2AABB*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* transform = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  int32 childIndex = ((int32)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ComputeAABB'", NULL);
#endif
  {
   self->ComputeAABB(aabb,*transform,childIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ComputeAABB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ComputeMass of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonShape_ComputeMass00
static int tolua_LuaBox2D_b2PolygonShape_ComputeMass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonShape",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2MassData",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
  b2MassData* massData = ((b2MassData*)  tolua_tousertype(tolua_S,2,0));
  float32 density = ((float32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ComputeMass'", NULL);
#endif
  {
   self->ComputeMass(massData,density);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ComputeMass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexCount of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonShape_GetVertexCount00
static int tolua_LuaBox2D_b2PolygonShape_GetVertexCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2PolygonShape",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2PolygonShape* self = (const b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexCount'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetVertexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertexCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertex of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonShape_GetVertex00
static int tolua_LuaBox2D_b2PolygonShape_GetVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonShape",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
  int32 index = ((int32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertex'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetVertex(index);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_centroid of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_get_b2PolygonShape_m_centroid
static int tolua_get_b2PolygonShape_m_centroid(lua_State* tolua_S)
{
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_centroid'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->m_centroid,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_centroid of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_set_b2PolygonShape_m_centroid
static int tolua_set_b2PolygonShape_m_centroid(lua_State* tolua_S)
{
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_centroid'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_centroid = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_vertices of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_get_LuaBox2D_b2PolygonShape_m_vertices
static int tolua_get_LuaBox2D_b2PolygonShape_m_vertices(lua_State* tolua_S)
{
 int tolua_index;
  b2PolygonShape* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2PolygonShape*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxPolygonVertices)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->m_vertices[tolua_index],"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_vertices of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_set_LuaBox2D_b2PolygonShape_m_vertices
static int tolua_set_LuaBox2D_b2PolygonShape_m_vertices(lua_State* tolua_S)
{
 int tolua_index;
  b2PolygonShape* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2PolygonShape*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxPolygonVertices)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_vertices[tolua_index] = *((b2Vec2*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_normals of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_get_LuaBox2D_b2PolygonShape_m_normals
static int tolua_get_LuaBox2D_b2PolygonShape_m_normals(lua_State* tolua_S)
{
 int tolua_index;
  b2PolygonShape* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2PolygonShape*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxPolygonVertices)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->m_normals[tolua_index],"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_normals of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_set_LuaBox2D_b2PolygonShape_m_normals
static int tolua_set_LuaBox2D_b2PolygonShape_m_normals(lua_State* tolua_S)
{
 int tolua_index;
  b2PolygonShape* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2PolygonShape*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxPolygonVertices)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_normals[tolua_index] = *((b2Vec2*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_vertexCount of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_get_b2PolygonShape_m_vertexCount
static int tolua_get_b2PolygonShape_m_vertexCount(lua_State* tolua_S)
{
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_vertexCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_vertexCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_vertexCount of class  b2PolygonShape */
#ifndef TOLUA_DISABLE_tolua_set_b2PolygonShape_m_vertexCount
static int tolua_set_b2PolygonShape_m_vertexCount(lua_State* tolua_S)
{
  b2PolygonShape* self = (b2PolygonShape*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_vertexCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_vertexCount = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: indexA of class  b2ContactFeature */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactFeature_indexA
static int tolua_get_b2ContactFeature_indexA(lua_State* tolua_S)
{
  b2ContactFeature* self = (b2ContactFeature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'indexA'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->indexA);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: indexA of class  b2ContactFeature */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactFeature_indexA
static int tolua_set_b2ContactFeature_indexA(lua_State* tolua_S)
{
  b2ContactFeature* self = (b2ContactFeature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'indexA'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->indexA = ((uint8)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: indexB of class  b2ContactFeature */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactFeature_indexB
static int tolua_get_b2ContactFeature_indexB(lua_State* tolua_S)
{
  b2ContactFeature* self = (b2ContactFeature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'indexB'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->indexB);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: indexB of class  b2ContactFeature */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactFeature_indexB
static int tolua_set_b2ContactFeature_indexB(lua_State* tolua_S)
{
  b2ContactFeature* self = (b2ContactFeature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'indexB'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->indexB = ((uint8)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: typeA of class  b2ContactFeature */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactFeature_typeA
static int tolua_get_b2ContactFeature_typeA(lua_State* tolua_S)
{
  b2ContactFeature* self = (b2ContactFeature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'typeA'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->typeA);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: typeA of class  b2ContactFeature */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactFeature_typeA
static int tolua_set_b2ContactFeature_typeA(lua_State* tolua_S)
{
  b2ContactFeature* self = (b2ContactFeature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'typeA'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->typeA = ((uint8)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: typeB of class  b2ContactFeature */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactFeature_typeB
static int tolua_get_b2ContactFeature_typeB(lua_State* tolua_S)
{
  b2ContactFeature* self = (b2ContactFeature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'typeB'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->typeB);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: typeB of class  b2ContactFeature */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactFeature_typeB
static int tolua_set_b2ContactFeature_typeB(lua_State* tolua_S)
{
  b2ContactFeature* self = (b2ContactFeature*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'typeB'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->typeB = ((uint8)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: cf of class  b2ContactID */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactID_cf
static int tolua_get_b2ContactID_cf(lua_State* tolua_S)
{
  b2ContactID* self = (b2ContactID*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'cf'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->cf,"b2ContactFeature");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: cf of class  b2ContactID */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactID_cf
static int tolua_set_b2ContactID_cf(lua_State* tolua_S)
{
  b2ContactID* self = (b2ContactID*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'cf'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2ContactFeature",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->cf = *((b2ContactFeature*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: key of class  b2ContactID */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactID_key
static int tolua_get_b2ContactID_key(lua_State* tolua_S)
{
  b2ContactID* self = (b2ContactID*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'key'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->key);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: key of class  b2ContactID */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactID_key
static int tolua_set_b2ContactID_key(lua_State* tolua_S)
{
  b2ContactID* self = (b2ContactID*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'key'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->key = ((uint32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localPoint of class  b2ManifoldPoint */
#ifndef TOLUA_DISABLE_tolua_get_b2ManifoldPoint_localPoint
static int tolua_get_b2ManifoldPoint_localPoint(lua_State* tolua_S)
{
  b2ManifoldPoint* self = (b2ManifoldPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localPoint'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localPoint,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localPoint of class  b2ManifoldPoint */
#ifndef TOLUA_DISABLE_tolua_set_b2ManifoldPoint_localPoint
static int tolua_set_b2ManifoldPoint_localPoint(lua_State* tolua_S)
{
  b2ManifoldPoint* self = (b2ManifoldPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localPoint'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localPoint = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: normalImpulse of class  b2ManifoldPoint */
#ifndef TOLUA_DISABLE_tolua_get_b2ManifoldPoint_normalImpulse
static int tolua_get_b2ManifoldPoint_normalImpulse(lua_State* tolua_S)
{
  b2ManifoldPoint* self = (b2ManifoldPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normalImpulse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->normalImpulse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: normalImpulse of class  b2ManifoldPoint */
#ifndef TOLUA_DISABLE_tolua_set_b2ManifoldPoint_normalImpulse
static int tolua_set_b2ManifoldPoint_normalImpulse(lua_State* tolua_S)
{
  b2ManifoldPoint* self = (b2ManifoldPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normalImpulse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->normalImpulse = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tangentImpulse of class  b2ManifoldPoint */
#ifndef TOLUA_DISABLE_tolua_get_b2ManifoldPoint_tangentImpulse
static int tolua_get_b2ManifoldPoint_tangentImpulse(lua_State* tolua_S)
{
  b2ManifoldPoint* self = (b2ManifoldPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tangentImpulse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->tangentImpulse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tangentImpulse of class  b2ManifoldPoint */
#ifndef TOLUA_DISABLE_tolua_set_b2ManifoldPoint_tangentImpulse
static int tolua_set_b2ManifoldPoint_tangentImpulse(lua_State* tolua_S)
{
  b2ManifoldPoint* self = (b2ManifoldPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tangentImpulse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tangentImpulse = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: id of class  b2ManifoldPoint */
#ifndef TOLUA_DISABLE_tolua_get_b2ManifoldPoint_id
static int tolua_get_b2ManifoldPoint_id(lua_State* tolua_S)
{
  b2ManifoldPoint* self = (b2ManifoldPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'id'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->id,"b2ContactID");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: id of class  b2ManifoldPoint */
#ifndef TOLUA_DISABLE_tolua_set_b2ManifoldPoint_id
static int tolua_set_b2ManifoldPoint_id(lua_State* tolua_S)
{
  b2ManifoldPoint* self = (b2ManifoldPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'id'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2ContactID",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->id = *((b2ContactID*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: points of class  b2Manifold */
#ifndef TOLUA_DISABLE_tolua_get_LuaBox2D_b2Manifold_points
static int tolua_get_LuaBox2D_b2Manifold_points(lua_State* tolua_S)
{
 int tolua_index;
  b2Manifold* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2Manifold*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxManifoldPoints)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->points[tolua_index],"b2ManifoldPoint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: points of class  b2Manifold */
#ifndef TOLUA_DISABLE_tolua_set_LuaBox2D_b2Manifold_points
static int tolua_set_LuaBox2D_b2Manifold_points(lua_State* tolua_S)
{
 int tolua_index;
  b2Manifold* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2Manifold*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxManifoldPoints)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->points[tolua_index] = *((b2ManifoldPoint*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localNormal of class  b2Manifold */
#ifndef TOLUA_DISABLE_tolua_get_b2Manifold_localNormal
static int tolua_get_b2Manifold_localNormal(lua_State* tolua_S)
{
  b2Manifold* self = (b2Manifold*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localNormal'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localNormal,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localNormal of class  b2Manifold */
#ifndef TOLUA_DISABLE_tolua_set_b2Manifold_localNormal
static int tolua_set_b2Manifold_localNormal(lua_State* tolua_S)
{
  b2Manifold* self = (b2Manifold*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localNormal'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localNormal = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localPoint of class  b2Manifold */
#ifndef TOLUA_DISABLE_tolua_get_b2Manifold_localPoint
static int tolua_get_b2Manifold_localPoint(lua_State* tolua_S)
{
  b2Manifold* self = (b2Manifold*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localPoint'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localPoint,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localPoint of class  b2Manifold */
#ifndef TOLUA_DISABLE_tolua_set_b2Manifold_localPoint
static int tolua_set_b2Manifold_localPoint(lua_State* tolua_S)
{
  b2Manifold* self = (b2Manifold*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localPoint'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localPoint = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: type of class  b2Manifold */
#ifndef TOLUA_DISABLE_tolua_get_b2Manifold_type
static int tolua_get_b2Manifold_type(lua_State* tolua_S)
{
  b2Manifold* self = (b2Manifold*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: type of class  b2Manifold */
#ifndef TOLUA_DISABLE_tolua_set_b2Manifold_type
static int tolua_set_b2Manifold_type(lua_State* tolua_S)
{
  b2Manifold* self = (b2Manifold*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->type = ((b2Manifold::Type) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: pointCount of class  b2Manifold */
#ifndef TOLUA_DISABLE_tolua_get_b2Manifold_pointCount
static int tolua_get_b2Manifold_pointCount(lua_State* tolua_S)
{
  b2Manifold* self = (b2Manifold*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->pointCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: pointCount of class  b2Manifold */
#ifndef TOLUA_DISABLE_tolua_set_b2Manifold_pointCount
static int tolua_set_b2Manifold_pointCount(lua_State* tolua_S)
{
  b2Manifold* self = (b2Manifold*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->pointCount = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initialize of class  b2WorldManifold */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WorldManifold_Initialize00
static int tolua_LuaBox2D_b2WorldManifold_Initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WorldManifold",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2Manifold",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WorldManifold* self = (b2WorldManifold*)  tolua_tousertype(tolua_S,1,0);
  const b2Manifold* manifold = ((const b2Manifold*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  float32 radiusA = ((float32)  tolua_tonumber(tolua_S,4,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,5,0));
  float32 radiusB = ((float32)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initialize'", NULL);
#endif
  {
   self->Initialize(manifold,*xfA,radiusA,*xfB,radiusB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: normal of class  b2WorldManifold */
#ifndef TOLUA_DISABLE_tolua_get_b2WorldManifold_normal
static int tolua_get_b2WorldManifold_normal(lua_State* tolua_S)
{
  b2WorldManifold* self = (b2WorldManifold*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normal'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->normal,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: normal of class  b2WorldManifold */
#ifndef TOLUA_DISABLE_tolua_set_b2WorldManifold_normal
static int tolua_set_b2WorldManifold_normal(lua_State* tolua_S)
{
  b2WorldManifold* self = (b2WorldManifold*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normal'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->normal = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: points of class  b2WorldManifold */
#ifndef TOLUA_DISABLE_tolua_get_LuaBox2D_b2WorldManifold_points
static int tolua_get_LuaBox2D_b2WorldManifold_points(lua_State* tolua_S)
{
 int tolua_index;
  b2WorldManifold* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2WorldManifold*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxManifoldPoints)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->points[tolua_index],"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: points of class  b2WorldManifold */
#ifndef TOLUA_DISABLE_tolua_set_LuaBox2D_b2WorldManifold_points
static int tolua_set_LuaBox2D_b2WorldManifold_points(lua_State* tolua_S)
{
 int tolua_index;
  b2WorldManifold* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2WorldManifold*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxManifoldPoints)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->points[tolua_index] = *((b2Vec2*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: v of class  b2ClipVertex */
#ifndef TOLUA_DISABLE_tolua_get_b2ClipVertex_v
static int tolua_get_b2ClipVertex_v(lua_State* tolua_S)
{
  b2ClipVertex* self = (b2ClipVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'v'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->v,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: v of class  b2ClipVertex */
#ifndef TOLUA_DISABLE_tolua_set_b2ClipVertex_v
static int tolua_set_b2ClipVertex_v(lua_State* tolua_S)
{
  b2ClipVertex* self = (b2ClipVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'v'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->v = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: id of class  b2ClipVertex */
#ifndef TOLUA_DISABLE_tolua_get_b2ClipVertex_id
static int tolua_get_b2ClipVertex_id(lua_State* tolua_S)
{
  b2ClipVertex* self = (b2ClipVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'id'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->id,"b2ContactID");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: id of class  b2ClipVertex */
#ifndef TOLUA_DISABLE_tolua_set_b2ClipVertex_id
static int tolua_set_b2ClipVertex_id(lua_State* tolua_S)
{
  b2ClipVertex* self = (b2ClipVertex*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'id'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2ContactID",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->id = *((b2ContactID*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: p1 of class  b2RayCastInput */
#ifndef TOLUA_DISABLE_tolua_get_b2RayCastInput_p1
static int tolua_get_b2RayCastInput_p1(lua_State* tolua_S)
{
  b2RayCastInput* self = (b2RayCastInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'p1'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->p1,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: p1 of class  b2RayCastInput */
#ifndef TOLUA_DISABLE_tolua_set_b2RayCastInput_p1
static int tolua_set_b2RayCastInput_p1(lua_State* tolua_S)
{
  b2RayCastInput* self = (b2RayCastInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'p1'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->p1 = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: p2 of class  b2RayCastInput */
#ifndef TOLUA_DISABLE_tolua_get_b2RayCastInput_p2
static int tolua_get_b2RayCastInput_p2(lua_State* tolua_S)
{
  b2RayCastInput* self = (b2RayCastInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'p2'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->p2,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: p2 of class  b2RayCastInput */
#ifndef TOLUA_DISABLE_tolua_set_b2RayCastInput_p2
static int tolua_set_b2RayCastInput_p2(lua_State* tolua_S)
{
  b2RayCastInput* self = (b2RayCastInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'p2'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->p2 = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: maxFraction of class  b2RayCastInput */
#ifndef TOLUA_DISABLE_tolua_get_b2RayCastInput_maxFraction
static int tolua_get_b2RayCastInput_maxFraction(lua_State* tolua_S)
{
  b2RayCastInput* self = (b2RayCastInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxFraction'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->maxFraction);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: maxFraction of class  b2RayCastInput */
#ifndef TOLUA_DISABLE_tolua_set_b2RayCastInput_maxFraction
static int tolua_set_b2RayCastInput_maxFraction(lua_State* tolua_S)
{
  b2RayCastInput* self = (b2RayCastInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxFraction'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->maxFraction = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: normal of class  b2RayCastOutput */
#ifndef TOLUA_DISABLE_tolua_get_b2RayCastOutput_normal
static int tolua_get_b2RayCastOutput_normal(lua_State* tolua_S)
{
  b2RayCastOutput* self = (b2RayCastOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normal'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->normal,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: normal of class  b2RayCastOutput */
#ifndef TOLUA_DISABLE_tolua_set_b2RayCastOutput_normal
static int tolua_set_b2RayCastOutput_normal(lua_State* tolua_S)
{
  b2RayCastOutput* self = (b2RayCastOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normal'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->normal = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: fraction of class  b2RayCastOutput */
#ifndef TOLUA_DISABLE_tolua_get_b2RayCastOutput_fraction
static int tolua_get_b2RayCastOutput_fraction(lua_State* tolua_S)
{
  b2RayCastOutput* self = (b2RayCastOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'fraction'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->fraction);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: fraction of class  b2RayCastOutput */
#ifndef TOLUA_DISABLE_tolua_set_b2RayCastOutput_fraction
static int tolua_set_b2RayCastOutput_fraction(lua_State* tolua_S)
{
  b2RayCastOutput* self = (b2RayCastOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'fraction'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->fraction = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsValid of class  b2AABB */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2AABB_IsValid00
static int tolua_LuaBox2D_b2AABB_IsValid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2AABB",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2AABB* self = (b2AABB*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsValid'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsValid();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsValid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCenter of class  b2AABB */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2AABB_GetCenter00
static int tolua_LuaBox2D_b2AABB_GetCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2AABB",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2AABB* self = (b2AABB*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCenter'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetCenter();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetExtents of class  b2AABB */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2AABB_GetExtents00
static int tolua_LuaBox2D_b2AABB_GetExtents00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2AABB",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2AABB* self = (b2AABB*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetExtents'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetExtents();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetExtents'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPerimeter of class  b2AABB */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2AABB_GetPerimeter00
static int tolua_LuaBox2D_b2AABB_GetPerimeter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2AABB",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2AABB* self = (b2AABB*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPerimeter'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetPerimeter();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPerimeter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Combine of class  b2AABB */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2AABB_Combine00
static int tolua_LuaBox2D_b2AABB_Combine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2AABB",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2AABB",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2AABB* self = (b2AABB*)  tolua_tousertype(tolua_S,1,0);
  const b2AABB* aabb = ((const b2AABB*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Combine'", NULL);
#endif
  {
   self->Combine(*aabb);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Combine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Combine of class  b2AABB */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2AABB_Combine01
static int tolua_LuaBox2D_b2AABB_Combine01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2AABB",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2AABB",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2AABB",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2AABB* self = (b2AABB*)  tolua_tousertype(tolua_S,1,0);
  const b2AABB* aabb1 = ((const b2AABB*)  tolua_tousertype(tolua_S,2,0));
  const b2AABB* aabb2 = ((const b2AABB*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Combine'", NULL);
#endif
  {
   self->Combine(*aabb1,*aabb2);
  }
 }
 return 0;
tolua_lerror:
 return tolua_LuaBox2D_b2AABB_Combine00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Contains of class  b2AABB */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2AABB_Contains00
static int tolua_LuaBox2D_b2AABB_Contains00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2AABB",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2AABB",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2AABB* self = (b2AABB*)  tolua_tousertype(tolua_S,1,0);
  const b2AABB* aabb = ((const b2AABB*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Contains'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Contains(*aabb);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Contains'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RayCast of class  b2AABB */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2AABB_RayCast00
static int tolua_LuaBox2D_b2AABB_RayCast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2AABB",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2RayCastOutput",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2RayCastInput",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2AABB* self = (b2AABB*)  tolua_tousertype(tolua_S,1,0);
  b2RayCastOutput* output = ((b2RayCastOutput*)  tolua_tousertype(tolua_S,2,0));
  const b2RayCastInput* input = ((const b2RayCastInput*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RayCast'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RayCast(output,*input);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RayCast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: lowerBound of class  b2AABB */
#ifndef TOLUA_DISABLE_tolua_get_b2AABB_lowerBound
static int tolua_get_b2AABB_lowerBound(lua_State* tolua_S)
{
  b2AABB* self = (b2AABB*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'lowerBound'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->lowerBound,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: lowerBound of class  b2AABB */
#ifndef TOLUA_DISABLE_tolua_set_b2AABB_lowerBound
static int tolua_set_b2AABB_lowerBound(lua_State* tolua_S)
{
  b2AABB* self = (b2AABB*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'lowerBound'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->lowerBound = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: upperBound of class  b2AABB */
#ifndef TOLUA_DISABLE_tolua_get_b2AABB_upperBound
static int tolua_get_b2AABB_upperBound(lua_State* tolua_S)
{
  b2AABB* self = (b2AABB*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'upperBound'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->upperBound,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: upperBound of class  b2AABB */
#ifndef TOLUA_DISABLE_tolua_set_b2AABB_upperBound
static int tolua_set_b2AABB_upperBound(lua_State* tolua_S)
{
  b2AABB* self = (b2AABB*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'upperBound'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->upperBound = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: b2CollideCircles */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CollideCircles00
static int tolua_LuaBox2D_b2CollideCircles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Manifold",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2CircleShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,4,"const b2CircleShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Manifold* manifold = ((b2Manifold*)  tolua_tousertype(tolua_S,1,0));
  const b2CircleShape* circleA = ((const b2CircleShape*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  const b2CircleShape* circleB = ((const b2CircleShape*)  tolua_tousertype(tolua_S,4,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,5,0));
  {
   b2CollideCircles(manifold,circleA,*xfA,circleB,*xfB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'b2CollideCircles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: b2CollidePolygonAndCircle */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CollidePolygonAndCircle00
static int tolua_LuaBox2D_b2CollidePolygonAndCircle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Manifold",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2PolygonShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,4,"const b2CircleShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Manifold* manifold = ((b2Manifold*)  tolua_tousertype(tolua_S,1,0));
  const b2PolygonShape* polygonA = ((const b2PolygonShape*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  const b2CircleShape* circleB = ((const b2CircleShape*)  tolua_tousertype(tolua_S,4,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,5,0));
  {
   b2CollidePolygonAndCircle(manifold,polygonA,*xfA,circleB,*xfB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'b2CollidePolygonAndCircle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: b2CollidePolygons */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CollidePolygons00
static int tolua_LuaBox2D_b2CollidePolygons00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Manifold",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2PolygonShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,4,"const b2PolygonShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Manifold* manifold = ((b2Manifold*)  tolua_tousertype(tolua_S,1,0));
  const b2PolygonShape* polygonA = ((const b2PolygonShape*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  const b2PolygonShape* polygonB = ((const b2PolygonShape*)  tolua_tousertype(tolua_S,4,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,5,0));
  {
   b2CollidePolygons(manifold,polygonA,*xfA,polygonB,*xfB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'b2CollidePolygons'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: b2CollideEdgeAndCircle */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CollideEdgeAndCircle00
static int tolua_LuaBox2D_b2CollideEdgeAndCircle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Manifold",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2EdgeShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,4,"const b2CircleShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Manifold* manifold = ((b2Manifold*)  tolua_tousertype(tolua_S,1,0));
  const b2EdgeShape* polygonA = ((const b2EdgeShape*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  const b2CircleShape* circleB = ((const b2CircleShape*)  tolua_tousertype(tolua_S,4,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,5,0));
  {
   b2CollideEdgeAndCircle(manifold,polygonA,*xfA,circleB,*xfB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'b2CollideEdgeAndCircle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: b2CollideEdgeAndPolygon */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2CollideEdgeAndPolygon00
static int tolua_LuaBox2D_b2CollideEdgeAndPolygon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Manifold",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2EdgeShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,4,"const b2PolygonShape",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Manifold* manifold = ((b2Manifold*)  tolua_tousertype(tolua_S,1,0));
  const b2EdgeShape* edgeA = ((const b2EdgeShape*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  const b2PolygonShape* circleB = ((const b2PolygonShape*)  tolua_tousertype(tolua_S,4,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,5,0));
  {
   b2CollideEdgeAndPolygon(manifold,edgeA,*xfA,circleB,*xfB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'b2CollideEdgeAndPolygon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: b2ClipSegmentToLine */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ClipSegmentToLine00
static int tolua_LuaBox2D_b2ClipSegmentToLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_istable(tolua_S,1,0,&tolua_err) ||
     !tolua_istable(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ClipVertex vOut[2];
  b2ClipVertex vIn[2];
  const b2Vec2* normal = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
  float32 offset = ((float32)  tolua_tonumber(tolua_S,4,0));
  int32 vertexIndexA = ((int32)  tolua_tonumber(tolua_S,5,0));
  {
#ifndef TOLUA_RELEASE
   if (!tolua_isusertypearray(tolua_S,1,"b2ClipVertex",2,0,&tolua_err))
    goto tolua_lerror;
   else
#endif
   {
    int i;
    for(i=0; i<2;i++)
    vOut[i] = *((b2ClipVertex*)  tolua_tofieldusertype(tolua_S,1,i+1,0));
   }
  }
  {
#ifndef TOLUA_RELEASE
   if (!tolua_isusertypearray(tolua_S,2,"b2ClipVertex",2,0,&tolua_err))
    goto tolua_lerror;
   else
#endif
   {
    int i;
    for(i=0; i<2;i++)
    vIn[i] = *((b2ClipVertex*)  tolua_tofieldusertype(tolua_S,2,i+1,0));
   }
  }
  {
   int32 tolua_ret = (int32)  b2ClipSegmentToLine(vOut,vIn,*normal,offset,vertexIndexA);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
  {
   int i;
   for(i=0; i<2;i++)
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2ClipVertex)(vOut[i]));
    tolua_pushfieldusertype_and_takeownership(tolua_S,1,i+1,tolua_obj,"b2ClipVertex");
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)& vOut[i],sizeof(b2ClipVertex));
    tolua_pushfieldusertype(tolua_S,1,i+1,tolua_obj,"b2ClipVertex");
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'b2ClipSegmentToLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: b2TestOverlap */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2TestOverlap00
static int tolua_LuaBox2D_b2TestOverlap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2Shape",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"const b2Shape",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Shape* shapeA = ((const b2Shape*)  tolua_tousertype(tolua_S,1,0));
  int32 indexA = ((int32)  tolua_tonumber(tolua_S,2,0));
  const b2Shape* shapeB = ((const b2Shape*)  tolua_tousertype(tolua_S,3,0));
  int32 indexB = ((int32)  tolua_tonumber(tolua_S,4,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,5,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,6,0));
  {
   bool tolua_ret = (bool)  b2TestOverlap(shapeA,indexA,shapeB,indexB,*xfA,*xfB);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'b2TestOverlap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2StackAllocator */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2StackAllocator_new00
static int tolua_LuaBox2D_b2StackAllocator_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2StackAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2StackAllocator* tolua_ret = (b2StackAllocator*)  Mtolua_new((b2StackAllocator)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2StackAllocator");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2StackAllocator */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2StackAllocator_new00_local
static int tolua_LuaBox2D_b2StackAllocator_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2StackAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2StackAllocator* tolua_ret = (b2StackAllocator*)  Mtolua_new((b2StackAllocator)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2StackAllocator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2StackAllocator */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2StackAllocator_delete00
static int tolua_LuaBox2D_b2StackAllocator_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2StackAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2StackAllocator* self = (b2StackAllocator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Allocate of class  b2StackAllocator */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2StackAllocator_Allocate00
static int tolua_LuaBox2D_b2StackAllocator_Allocate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2StackAllocator",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2StackAllocator* self = (b2StackAllocator*)  tolua_tousertype(tolua_S,1,0);
  signed int size = (( signed int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Allocate'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->Allocate(size);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Allocate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Free of class  b2StackAllocator */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2StackAllocator_Free00
static int tolua_LuaBox2D_b2StackAllocator_Free00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2StackAllocator",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2StackAllocator* self = (b2StackAllocator*)  tolua_tousertype(tolua_S,1,0);
  void* p = ((void*)  tolua_touserdata(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Free'", NULL);
#endif
  {
   self->Free(p);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Free'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxAllocation of class  b2StackAllocator */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2StackAllocator_GetMaxAllocation00
static int tolua_LuaBox2D_b2StackAllocator_GetMaxAllocation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2StackAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2StackAllocator* self = (b2StackAllocator*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxAllocation'", NULL);
#endif
  {
   signed int tolua_ret = ( signed int)  self->GetMaxAllocation();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxAllocation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2ContactListener */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactListener_delete00
static int tolua_LuaBox2D_b2ContactListener_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactListener",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactListener* self = (b2ContactListener*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BeginContact of class  b2ContactListener */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactListener_BeginContact00
static int tolua_LuaBox2D_b2ContactListener_BeginContact00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactListener",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactListener* self = (b2ContactListener*)  tolua_tousertype(tolua_S,1,0);
  b2Contact* contact = ((b2Contact*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BeginContact'", NULL);
#endif
  {
   self->BeginContact(contact);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BeginContact'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EndContact of class  b2ContactListener */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactListener_EndContact00
static int tolua_LuaBox2D_b2ContactListener_EndContact00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactListener",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactListener* self = (b2ContactListener*)  tolua_tousertype(tolua_S,1,0);
  b2Contact* contact = ((b2Contact*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EndContact'", NULL);
#endif
  {
   self->EndContact(contact);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EndContact'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PreSolve of class  b2ContactListener */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactListener_PreSolve00
static int tolua_LuaBox2D_b2ContactListener_PreSolve00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactListener",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"const b2Manifold",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactListener* self = (b2ContactListener*)  tolua_tousertype(tolua_S,1,0);
  b2Contact* contact = ((b2Contact*)  tolua_tousertype(tolua_S,2,0));
  const b2Manifold* oldManifold = ((const b2Manifold*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PreSolve'", NULL);
#endif
  {
   self->PreSolve(contact,oldManifold);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PreSolve'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PostSolve of class  b2ContactListener */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactListener_PostSolve00
static int tolua_LuaBox2D_b2ContactListener_PostSolve00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactListener",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"const b2ContactImpulse",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactListener* self = (b2ContactListener*)  tolua_tousertype(tolua_S,1,0);
  b2Contact* contact = ((b2Contact*)  tolua_tousertype(tolua_S,2,0));
  const b2ContactImpulse* impulse = ((const b2ContactImpulse*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PostSolve'", NULL);
#endif
  {
   self->PostSolve(contact,impulse);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PostSolve'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: createFcn of class  b2ContactRegister */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactRegister_createFcn_ptr
static int tolua_get_b2ContactRegister_createFcn_ptr(lua_State* tolua_S)
{
  b2ContactRegister* self = (b2ContactRegister*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'createFcn'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->createFcn,"b2ContactCreateFcn");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: createFcn of class  b2ContactRegister */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactRegister_createFcn_ptr
static int tolua_set_b2ContactRegister_createFcn_ptr(lua_State* tolua_S)
{
  b2ContactRegister* self = (b2ContactRegister*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'createFcn'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2ContactCreateFcn",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->createFcn = ((b2ContactCreateFcn*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: destroyFcn of class  b2ContactRegister */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactRegister_destroyFcn_ptr
static int tolua_get_b2ContactRegister_destroyFcn_ptr(lua_State* tolua_S)
{
  b2ContactRegister* self = (b2ContactRegister*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'destroyFcn'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->destroyFcn,"b2ContactDestroyFcn");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: destroyFcn of class  b2ContactRegister */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactRegister_destroyFcn_ptr
static int tolua_set_b2ContactRegister_destroyFcn_ptr(lua_State* tolua_S)
{
  b2ContactRegister* self = (b2ContactRegister*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'destroyFcn'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2ContactDestroyFcn",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->destroyFcn = ((b2ContactDestroyFcn*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: primary of class  b2ContactRegister */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactRegister_primary
static int tolua_get_b2ContactRegister_primary(lua_State* tolua_S)
{
  b2ContactRegister* self = (b2ContactRegister*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'primary'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->primary);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: primary of class  b2ContactRegister */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactRegister_primary
static int tolua_set_b2ContactRegister_primary(lua_State* tolua_S)
{
  b2ContactRegister* self = (b2ContactRegister*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'primary'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->primary = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2ContactFilter */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactFilter_delete00
static int tolua_LuaBox2D_b2ContactFilter_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactFilter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactFilter* self = (b2ContactFilter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ShouldCollide of class  b2ContactFilter */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactFilter_ShouldCollide00
static int tolua_LuaBox2D_b2ContactFilter_ShouldCollide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactFilter",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactFilter* self = (b2ContactFilter*)  tolua_tousertype(tolua_S,1,0);
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ShouldCollide'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ShouldCollide(fixtureA,fixtureB);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ShouldCollide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactManager_new00
static int tolua_LuaBox2D_b2ContactManager_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ContactManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2ContactManager* tolua_ret = (b2ContactManager*)  Mtolua_new((b2ContactManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2ContactManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactManager_new00_local
static int tolua_LuaBox2D_b2ContactManager_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ContactManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2ContactManager* tolua_ret = (b2ContactManager*)  Mtolua_new((b2ContactManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2ContactManager");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddPair of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactManager_AddPair00
static int tolua_LuaBox2D_b2ContactManager_AddPair00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactManager",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
  void* proxyUserDataA = ((void*)  tolua_touserdata(tolua_S,2,0));
  void* proxyUserDataB = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddPair'", NULL);
#endif
  {
   self->AddPair(proxyUserDataA,proxyUserDataB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddPair'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: FindNewContacts of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactManager_FindNewContacts00
static int tolua_LuaBox2D_b2ContactManager_FindNewContacts00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'FindNewContacts'", NULL);
#endif
  {
   self->FindNewContacts();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'FindNewContacts'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Destroy of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactManager_Destroy00
static int tolua_LuaBox2D_b2ContactManager_Destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
  b2Contact* c = ((b2Contact*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Destroy'", NULL);
#endif
  {
   self->Destroy(c);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Collide of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactManager_Collide00
static int tolua_LuaBox2D_b2ContactManager_Collide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Collide'", NULL);
#endif
  {
   self->Collide();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Collide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_broadPhase of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactManager_m_broadPhase
static int tolua_get_b2ContactManager_m_broadPhase(lua_State* tolua_S)
{
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_broadPhase'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->m_broadPhase,"b2BroadPhase");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_broadPhase of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactManager_m_broadPhase
static int tolua_set_b2ContactManager_m_broadPhase(lua_State* tolua_S)
{
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_broadPhase'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2BroadPhase",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_broadPhase = *((b2BroadPhase*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_contactList of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactManager_m_contactList_ptr
static int tolua_get_b2ContactManager_m_contactList_ptr(lua_State* tolua_S)
{
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_contactList'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_contactList,"b2Contact");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_contactList of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactManager_m_contactList_ptr
static int tolua_set_b2ContactManager_m_contactList_ptr(lua_State* tolua_S)
{
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_contactList'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_contactList = ((b2Contact*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_contactCount of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactManager_m_contactCount
static int tolua_get_b2ContactManager_m_contactCount(lua_State* tolua_S)
{
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_contactCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_contactCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_contactCount of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactManager_m_contactCount
static int tolua_set_b2ContactManager_m_contactCount(lua_State* tolua_S)
{
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_contactCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_contactCount = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_contactFilter of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactManager_m_contactFilter_ptr
static int tolua_get_b2ContactManager_m_contactFilter_ptr(lua_State* tolua_S)
{
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_contactFilter'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_contactFilter,"b2ContactFilter");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_contactFilter of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactManager_m_contactFilter_ptr
static int tolua_set_b2ContactManager_m_contactFilter_ptr(lua_State* tolua_S)
{
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_contactFilter'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2ContactFilter",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_contactFilter = ((b2ContactFilter*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_contactListener of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactManager_m_contactListener_ptr
static int tolua_get_b2ContactManager_m_contactListener_ptr(lua_State* tolua_S)
{
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_contactListener'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_contactListener,"b2ContactListener");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_contactListener of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactManager_m_contactListener_ptr
static int tolua_set_b2ContactManager_m_contactListener_ptr(lua_State* tolua_S)
{
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_contactListener'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2ContactListener",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_contactListener = ((b2ContactListener*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_allocator of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactManager_m_allocator_ptr
static int tolua_get_b2ContactManager_m_allocator_ptr(lua_State* tolua_S)
{
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_allocator'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_allocator,"b2BlockAllocator");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_allocator of class  b2ContactManager */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactManager_m_allocator_ptr
static int tolua_set_b2ContactManager_m_allocator_ptr(lua_State* tolua_S)
{
  b2ContactManager* self = (b2ContactManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_allocator'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2BlockAllocator",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: rA of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_get_b2VelocityConstraintPoint_rA
static int tolua_get_b2VelocityConstraintPoint_rA(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'rA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->rA,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: rA of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_set_b2VelocityConstraintPoint_rA
static int tolua_set_b2VelocityConstraintPoint_rA(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'rA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->rA = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: rB of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_get_b2VelocityConstraintPoint_rB
static int tolua_get_b2VelocityConstraintPoint_rB(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'rB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->rB,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: rB of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_set_b2VelocityConstraintPoint_rB
static int tolua_set_b2VelocityConstraintPoint_rB(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'rB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->rB = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: normalImpulse of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_get_b2VelocityConstraintPoint_normalImpulse
static int tolua_get_b2VelocityConstraintPoint_normalImpulse(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normalImpulse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->normalImpulse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: normalImpulse of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_set_b2VelocityConstraintPoint_normalImpulse
static int tolua_set_b2VelocityConstraintPoint_normalImpulse(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normalImpulse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->normalImpulse = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tangentImpulse of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_get_b2VelocityConstraintPoint_tangentImpulse
static int tolua_get_b2VelocityConstraintPoint_tangentImpulse(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tangentImpulse'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->tangentImpulse);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tangentImpulse of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_set_b2VelocityConstraintPoint_tangentImpulse
static int tolua_set_b2VelocityConstraintPoint_tangentImpulse(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tangentImpulse'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tangentImpulse = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: normalMass of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_get_b2VelocityConstraintPoint_normalMass
static int tolua_get_b2VelocityConstraintPoint_normalMass(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normalMass'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->normalMass);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: normalMass of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_set_b2VelocityConstraintPoint_normalMass
static int tolua_set_b2VelocityConstraintPoint_normalMass(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normalMass'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->normalMass = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tangentMass of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_get_b2VelocityConstraintPoint_tangentMass
static int tolua_get_b2VelocityConstraintPoint_tangentMass(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tangentMass'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->tangentMass);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tangentMass of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_set_b2VelocityConstraintPoint_tangentMass
static int tolua_set_b2VelocityConstraintPoint_tangentMass(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tangentMass'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tangentMass = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: velocityBias of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_get_b2VelocityConstraintPoint_velocityBias
static int tolua_get_b2VelocityConstraintPoint_velocityBias(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'velocityBias'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->velocityBias);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: velocityBias of class  b2VelocityConstraintPoint */
#ifndef TOLUA_DISABLE_tolua_set_b2VelocityConstraintPoint_velocityBias
static int tolua_set_b2VelocityConstraintPoint_velocityBias(lua_State* tolua_S)
{
  b2VelocityConstraintPoint* self = (b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'velocityBias'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->velocityBias = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: points of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_LuaBox2D_b2ContactVelocityConstraint_points
static int tolua_get_LuaBox2D_b2ContactVelocityConstraint_points(lua_State* tolua_S)
{
 int tolua_index;
  b2ContactVelocityConstraint* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2ContactVelocityConstraint*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxManifoldPoints)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->points[tolua_index],"b2VelocityConstraintPoint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: points of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_LuaBox2D_b2ContactVelocityConstraint_points
static int tolua_set_LuaBox2D_b2ContactVelocityConstraint_points(lua_State* tolua_S)
{
 int tolua_index;
  b2ContactVelocityConstraint* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2ContactVelocityConstraint*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxManifoldPoints)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->points[tolua_index] = *((b2VelocityConstraintPoint*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: normal of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactVelocityConstraint_normal
static int tolua_get_b2ContactVelocityConstraint_normal(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normal'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->normal,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: normal of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactVelocityConstraint_normal
static int tolua_set_b2ContactVelocityConstraint_normal(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normal'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->normal = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: normalMass of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactVelocityConstraint_normalMass
static int tolua_get_b2ContactVelocityConstraint_normalMass(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normalMass'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->normalMass,"b2Mat22");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: normalMass of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactVelocityConstraint_normalMass
static int tolua_set_b2ContactVelocityConstraint_normalMass(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'normalMass'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Mat22",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->normalMass = *((b2Mat22*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: K of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactVelocityConstraint_K
static int tolua_get_b2ContactVelocityConstraint_K(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'K'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->K,"b2Mat22");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: K of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactVelocityConstraint_K
static int tolua_set_b2ContactVelocityConstraint_K(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'K'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Mat22",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->K = *((b2Mat22*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: indexA of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactVelocityConstraint_indexA
static int tolua_get_b2ContactVelocityConstraint_indexA(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'indexA'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->indexA);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: indexA of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactVelocityConstraint_indexA
static int tolua_set_b2ContactVelocityConstraint_indexA(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'indexA'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->indexA = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: indexB of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactVelocityConstraint_indexB
static int tolua_get_b2ContactVelocityConstraint_indexB(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'indexB'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->indexB);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: indexB of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactVelocityConstraint_indexB
static int tolua_set_b2ContactVelocityConstraint_indexB(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'indexB'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->indexB = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: invMassA of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactVelocityConstraint_invMassA
static int tolua_get_b2ContactVelocityConstraint_invMassA(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'invMassA'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->invMassA);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: invMassA of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactVelocityConstraint_invMassA
static int tolua_set_b2ContactVelocityConstraint_invMassA(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'invMassA'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->invMassA = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: invMassB of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactVelocityConstraint_invMassB
static int tolua_get_b2ContactVelocityConstraint_invMassB(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'invMassB'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->invMassB);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: invMassB of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactVelocityConstraint_invMassB
static int tolua_set_b2ContactVelocityConstraint_invMassB(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'invMassB'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->invMassB = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: invIA of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactVelocityConstraint_invIA
static int tolua_get_b2ContactVelocityConstraint_invIA(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'invIA'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->invIA);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: invIA of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactVelocityConstraint_invIA
static int tolua_set_b2ContactVelocityConstraint_invIA(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'invIA'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->invIA = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: invIB of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactVelocityConstraint_invIB
static int tolua_get_b2ContactVelocityConstraint_invIB(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'invIB'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->invIB);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: invIB of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactVelocityConstraint_invIB
static int tolua_set_b2ContactVelocityConstraint_invIB(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'invIB'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->invIB = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: friction of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactVelocityConstraint_friction
static int tolua_get_b2ContactVelocityConstraint_friction(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'friction'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->friction);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: friction of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactVelocityConstraint_friction
static int tolua_set_b2ContactVelocityConstraint_friction(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'friction'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->friction = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: restitution of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactVelocityConstraint_restitution
static int tolua_get_b2ContactVelocityConstraint_restitution(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'restitution'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->restitution);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: restitution of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactVelocityConstraint_restitution
static int tolua_set_b2ContactVelocityConstraint_restitution(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'restitution'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->restitution = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: pointCount of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactVelocityConstraint_pointCount
static int tolua_get_b2ContactVelocityConstraint_pointCount(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->pointCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: pointCount of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactVelocityConstraint_pointCount
static int tolua_set_b2ContactVelocityConstraint_pointCount(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->pointCount = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: contactIndex of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactVelocityConstraint_contactIndex
static int tolua_get_b2ContactVelocityConstraint_contactIndex(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'contactIndex'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->contactIndex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: contactIndex of class  b2ContactVelocityConstraint */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactVelocityConstraint_contactIndex
static int tolua_set_b2ContactVelocityConstraint_contactIndex(lua_State* tolua_S)
{
  b2ContactVelocityConstraint* self = (b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'contactIndex'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->contactIndex = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: step of class  b2ContactSolverDef */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactSolverDef_step
static int tolua_get_b2ContactSolverDef_step(lua_State* tolua_S)
{
  b2ContactSolverDef* self = (b2ContactSolverDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'step'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->step,"b2TimeStep");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: step of class  b2ContactSolverDef */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactSolverDef_step
static int tolua_set_b2ContactSolverDef_step(lua_State* tolua_S)
{
  b2ContactSolverDef* self = (b2ContactSolverDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'step'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2TimeStep",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->step = *((b2TimeStep*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: count of class  b2ContactSolverDef */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactSolverDef_count
static int tolua_get_b2ContactSolverDef_count(lua_State* tolua_S)
{
  b2ContactSolverDef* self = (b2ContactSolverDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'count'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->count);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: count of class  b2ContactSolverDef */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactSolverDef_count
static int tolua_set_b2ContactSolverDef_count(lua_State* tolua_S)
{
  b2ContactSolverDef* self = (b2ContactSolverDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'count'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->count = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: positions of class  b2ContactSolverDef */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactSolverDef_positions_ptr
static int tolua_get_b2ContactSolverDef_positions_ptr(lua_State* tolua_S)
{
  b2ContactSolverDef* self = (b2ContactSolverDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'positions'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->positions,"b2Position");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: positions of class  b2ContactSolverDef */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactSolverDef_positions_ptr
static int tolua_set_b2ContactSolverDef_positions_ptr(lua_State* tolua_S)
{
  b2ContactSolverDef* self = (b2ContactSolverDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'positions'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Position",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->positions = ((b2Position*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: velocities of class  b2ContactSolverDef */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactSolverDef_velocities_ptr
static int tolua_get_b2ContactSolverDef_velocities_ptr(lua_State* tolua_S)
{
  b2ContactSolverDef* self = (b2ContactSolverDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'velocities'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->velocities,"b2Velocity");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: velocities of class  b2ContactSolverDef */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactSolverDef_velocities_ptr
static int tolua_set_b2ContactSolverDef_velocities_ptr(lua_State* tolua_S)
{
  b2ContactSolverDef* self = (b2ContactSolverDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'velocities'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Velocity",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->velocities = ((b2Velocity*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: allocator of class  b2ContactSolverDef */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactSolverDef_allocator_ptr
static int tolua_get_b2ContactSolverDef_allocator_ptr(lua_State* tolua_S)
{
  b2ContactSolverDef* self = (b2ContactSolverDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'allocator'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->allocator,"b2StackAllocator");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: allocator of class  b2ContactSolverDef */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactSolverDef_allocator_ptr
static int tolua_set_b2ContactSolverDef_allocator_ptr(lua_State* tolua_S)
{
  b2ContactSolverDef* self = (b2ContactSolverDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'allocator'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2StackAllocator",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->allocator = ((b2StackAllocator*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactSolver_new00
static int tolua_LuaBox2D_b2ContactSolver_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ContactSolver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2ContactSolverDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactSolverDef* def = ((b2ContactSolverDef*)  tolua_tousertype(tolua_S,2,0));
  {
   b2ContactSolver* tolua_ret = (b2ContactSolver*)  Mtolua_new((b2ContactSolver)(def));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2ContactSolver");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactSolver_new00_local
static int tolua_LuaBox2D_b2ContactSolver_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2ContactSolver",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2ContactSolverDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactSolverDef* def = ((b2ContactSolverDef*)  tolua_tousertype(tolua_S,2,0));
  {
   b2ContactSolver* tolua_ret = (b2ContactSolver*)  Mtolua_new((b2ContactSolver)(def));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2ContactSolver");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactSolver_delete00
static int tolua_LuaBox2D_b2ContactSolver_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactSolver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: InitializeVelocityConstraints of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactSolver_InitializeVelocityConstraints00
static int tolua_LuaBox2D_b2ContactSolver_InitializeVelocityConstraints00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactSolver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'InitializeVelocityConstraints'", NULL);
#endif
  {
   self->InitializeVelocityConstraints();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'InitializeVelocityConstraints'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: WarmStart of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactSolver_WarmStart00
static int tolua_LuaBox2D_b2ContactSolver_WarmStart00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactSolver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'WarmStart'", NULL);
#endif
  {
   self->WarmStart();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'WarmStart'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SolveVelocityConstraints of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactSolver_SolveVelocityConstraints00
static int tolua_LuaBox2D_b2ContactSolver_SolveVelocityConstraints00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactSolver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SolveVelocityConstraints'", NULL);
#endif
  {
   self->SolveVelocityConstraints();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SolveVelocityConstraints'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StoreImpulses of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactSolver_StoreImpulses00
static int tolua_LuaBox2D_b2ContactSolver_StoreImpulses00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactSolver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'StoreImpulses'", NULL);
#endif
  {
   self->StoreImpulses();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StoreImpulses'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SolvePositionConstraints of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactSolver_SolvePositionConstraints00
static int tolua_LuaBox2D_b2ContactSolver_SolvePositionConstraints00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactSolver",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SolvePositionConstraints'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SolvePositionConstraints();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SolvePositionConstraints'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SolveTOIPositionConstraints of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2ContactSolver_SolveTOIPositionConstraints00
static int tolua_LuaBox2D_b2ContactSolver_SolveTOIPositionConstraints00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2ContactSolver",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
  int32 toiIndexA = ((int32)  tolua_tonumber(tolua_S,2,0));
  int32 toiIndexB = ((int32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SolveTOIPositionConstraints'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SolveTOIPositionConstraints(toiIndexA,toiIndexB);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SolveTOIPositionConstraints'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_step of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactSolver_m_step
static int tolua_get_b2ContactSolver_m_step(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_step'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->m_step,"b2TimeStep");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_step of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactSolver_m_step
static int tolua_set_b2ContactSolver_m_step(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_step'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2TimeStep",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_step = *((b2TimeStep*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_positions of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactSolver_m_positions_ptr
static int tolua_get_b2ContactSolver_m_positions_ptr(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_positions'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_positions,"b2Position");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_positions of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactSolver_m_positions_ptr
static int tolua_set_b2ContactSolver_m_positions_ptr(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_positions'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Position",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_positions = ((b2Position*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_velocities of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactSolver_m_velocities_ptr
static int tolua_get_b2ContactSolver_m_velocities_ptr(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_velocities'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_velocities,"b2Velocity");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_velocities of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactSolver_m_velocities_ptr
static int tolua_set_b2ContactSolver_m_velocities_ptr(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_velocities'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Velocity",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_velocities = ((b2Velocity*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_allocator of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactSolver_m_allocator_ptr
static int tolua_get_b2ContactSolver_m_allocator_ptr(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_allocator'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_allocator,"b2StackAllocator");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_allocator of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactSolver_m_allocator_ptr
static int tolua_set_b2ContactSolver_m_allocator_ptr(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_allocator'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2StackAllocator",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_allocator = ((b2StackAllocator*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_positionConstraints of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactSolver_m_positionConstraints_ptr
static int tolua_get_b2ContactSolver_m_positionConstraints_ptr(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_positionConstraints'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_positionConstraints,"b2ContactPositionConstraint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_positionConstraints of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactSolver_m_positionConstraints_ptr
static int tolua_set_b2ContactSolver_m_positionConstraints_ptr(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_positionConstraints'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2ContactPositionConstraint",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_positionConstraints = ((b2ContactPositionConstraint*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_velocityConstraints of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactSolver_m_velocityConstraints_ptr
static int tolua_get_b2ContactSolver_m_velocityConstraints_ptr(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_velocityConstraints'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_velocityConstraints,"b2ContactVelocityConstraint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_velocityConstraints of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactSolver_m_velocityConstraints_ptr
static int tolua_set_b2ContactSolver_m_velocityConstraints_ptr(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_velocityConstraints'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2ContactVelocityConstraint",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_velocityConstraints = ((b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_count of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactSolver_m_count
static int tolua_get_b2ContactSolver_m_count(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_count'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_count);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_count of class  b2ContactSolver */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactSolver_m_count
static int tolua_set_b2ContactSolver_m_count(lua_State* tolua_S)
{
  b2ContactSolver* self = (b2ContactSolver*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_count'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_count = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceProxy_new00
static int tolua_LuaBox2D_b2DistanceProxy_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2DistanceProxy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2DistanceProxy* tolua_ret = (b2DistanceProxy*)  Mtolua_new((b2DistanceProxy)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2DistanceProxy");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceProxy_new00_local
static int tolua_LuaBox2D_b2DistanceProxy_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2DistanceProxy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2DistanceProxy* tolua_ret = (b2DistanceProxy*)  Mtolua_new((b2DistanceProxy)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2DistanceProxy");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceProxy_Set00
static int tolua_LuaBox2D_b2DistanceProxy_Set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceProxy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2Shape",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceProxy* self = (b2DistanceProxy*)  tolua_tousertype(tolua_S,1,0);
  const b2Shape* shape = ((const b2Shape*)  tolua_tousertype(tolua_S,2,0));
  int32 index = ((int32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set'", NULL);
#endif
  {
   self->Set(shape,index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSupport of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceProxy_GetSupport00
static int tolua_LuaBox2D_b2DistanceProxy_GetSupport00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceProxy",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceProxy* self = (b2DistanceProxy*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* d = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSupport'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetSupport(*d);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSupport'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSupportVertex of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceProxy_GetSupportVertex00
static int tolua_LuaBox2D_b2DistanceProxy_GetSupportVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceProxy",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceProxy* self = (b2DistanceProxy*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* d = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSupportVertex'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetSupportVertex(*d);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSupportVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexCount of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceProxy_GetVertexCount00
static int tolua_LuaBox2D_b2DistanceProxy_GetVertexCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceProxy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceProxy* self = (b2DistanceProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexCount'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetVertexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertexCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertex of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceProxy_GetVertex00
static int tolua_LuaBox2D_b2DistanceProxy_GetVertex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceProxy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceProxy* self = (b2DistanceProxy*)  tolua_tousertype(tolua_S,1,0);
  int32 index = ((int32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertex'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetVertex(index);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_buffer of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_get_LuaBox2D_b2DistanceProxy_m_buffer
static int tolua_get_LuaBox2D_b2DistanceProxy_m_buffer(lua_State* tolua_S)
{
 int tolua_index;
  b2DistanceProxy* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2DistanceProxy*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=2)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  tolua_pushusertype(tolua_S,(void*)&self->m_buffer[tolua_index],"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_buffer of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_set_LuaBox2D_b2DistanceProxy_m_buffer
static int tolua_set_LuaBox2D_b2DistanceProxy_m_buffer(lua_State* tolua_S)
{
 int tolua_index;
  b2DistanceProxy* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2DistanceProxy*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=2)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->m_buffer[tolua_index] = *((b2Vec2*)  tolua_tousertype(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_vertices of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceProxy_m_vertices_ptr
static int tolua_get_b2DistanceProxy_m_vertices_ptr(lua_State* tolua_S)
{
  b2DistanceProxy* self = (b2DistanceProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_vertices'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_vertices,"const b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_count of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceProxy_m_count
static int tolua_get_b2DistanceProxy_m_count(lua_State* tolua_S)
{
  b2DistanceProxy* self = (b2DistanceProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_count'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_count);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_count of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceProxy_m_count
static int tolua_set_b2DistanceProxy_m_count(lua_State* tolua_S)
{
  b2DistanceProxy* self = (b2DistanceProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_count'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_count = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_radius of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceProxy_m_radius
static int tolua_get_b2DistanceProxy_m_radius(lua_State* tolua_S)
{
  b2DistanceProxy* self = (b2DistanceProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_radius'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_radius);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_radius of class  b2DistanceProxy */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceProxy_m_radius
static int tolua_set_b2DistanceProxy_m_radius(lua_State* tolua_S)
{
  b2DistanceProxy* self = (b2DistanceProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_radius'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_radius = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: metric of class  b2SimplexCache */
#ifndef TOLUA_DISABLE_tolua_get_b2SimplexCache_metric
static int tolua_get_b2SimplexCache_metric(lua_State* tolua_S)
{
  b2SimplexCache* self = (b2SimplexCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'metric'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->metric);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: metric of class  b2SimplexCache */
#ifndef TOLUA_DISABLE_tolua_set_b2SimplexCache_metric
static int tolua_set_b2SimplexCache_metric(lua_State* tolua_S)
{
  b2SimplexCache* self = (b2SimplexCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'metric'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->metric = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: count of class  b2SimplexCache */
#ifndef TOLUA_DISABLE_tolua_get_b2SimplexCache_count
static int tolua_get_b2SimplexCache_count(lua_State* tolua_S)
{
  b2SimplexCache* self = (b2SimplexCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'count'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->count);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: count of class  b2SimplexCache */
#ifndef TOLUA_DISABLE_tolua_set_b2SimplexCache_count
static int tolua_set_b2SimplexCache_count(lua_State* tolua_S)
{
  b2SimplexCache* self = (b2SimplexCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'count'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->count = ((uint16)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: indexA of class  b2SimplexCache */
#ifndef TOLUA_DISABLE_tolua_get_LuaBox2D_b2SimplexCache_indexA
static int tolua_get_LuaBox2D_b2SimplexCache_indexA(lua_State* tolua_S)
{
 int tolua_index;
  b2SimplexCache* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2SimplexCache*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=3)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->indexA[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: indexA of class  b2SimplexCache */
#ifndef TOLUA_DISABLE_tolua_set_LuaBox2D_b2SimplexCache_indexA
static int tolua_set_LuaBox2D_b2SimplexCache_indexA(lua_State* tolua_S)
{
 int tolua_index;
  b2SimplexCache* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2SimplexCache*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=3)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->indexA[tolua_index] = ((uint8)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: indexB of class  b2SimplexCache */
#ifndef TOLUA_DISABLE_tolua_get_LuaBox2D_b2SimplexCache_indexB
static int tolua_get_LuaBox2D_b2SimplexCache_indexB(lua_State* tolua_S)
{
 int tolua_index;
  b2SimplexCache* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2SimplexCache*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=3)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->indexB[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: indexB of class  b2SimplexCache */
#ifndef TOLUA_DISABLE_tolua_set_LuaBox2D_b2SimplexCache_indexB
static int tolua_set_LuaBox2D_b2SimplexCache_indexB(lua_State* tolua_S)
{
 int tolua_index;
  b2SimplexCache* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2SimplexCache*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=3)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->indexB[tolua_index] = ((uint8)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: proxyA of class  b2DistanceInput */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceInput_proxyA
static int tolua_get_b2DistanceInput_proxyA(lua_State* tolua_S)
{
  b2DistanceInput* self = (b2DistanceInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->proxyA,"b2DistanceProxy");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: proxyA of class  b2DistanceInput */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceInput_proxyA
static int tolua_set_b2DistanceInput_proxyA(lua_State* tolua_S)
{
  b2DistanceInput* self = (b2DistanceInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2DistanceProxy",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->proxyA = *((b2DistanceProxy*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: proxyB of class  b2DistanceInput */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceInput_proxyB
static int tolua_get_b2DistanceInput_proxyB(lua_State* tolua_S)
{
  b2DistanceInput* self = (b2DistanceInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->proxyB,"b2DistanceProxy");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: proxyB of class  b2DistanceInput */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceInput_proxyB
static int tolua_set_b2DistanceInput_proxyB(lua_State* tolua_S)
{
  b2DistanceInput* self = (b2DistanceInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2DistanceProxy",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->proxyB = *((b2DistanceProxy*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: transformA of class  b2DistanceInput */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceInput_transformA
static int tolua_get_b2DistanceInput_transformA(lua_State* tolua_S)
{
  b2DistanceInput* self = (b2DistanceInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'transformA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->transformA,"b2Transform");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: transformA of class  b2DistanceInput */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceInput_transformA
static int tolua_set_b2DistanceInput_transformA(lua_State* tolua_S)
{
  b2DistanceInput* self = (b2DistanceInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'transformA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Transform",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->transformA = *((b2Transform*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: transformB of class  b2DistanceInput */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceInput_transformB
static int tolua_get_b2DistanceInput_transformB(lua_State* tolua_S)
{
  b2DistanceInput* self = (b2DistanceInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'transformB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->transformB,"b2Transform");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: transformB of class  b2DistanceInput */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceInput_transformB
static int tolua_set_b2DistanceInput_transformB(lua_State* tolua_S)
{
  b2DistanceInput* self = (b2DistanceInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'transformB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Transform",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->transformB = *((b2Transform*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: useRadii of class  b2DistanceInput */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceInput_useRadii
static int tolua_get_b2DistanceInput_useRadii(lua_State* tolua_S)
{
  b2DistanceInput* self = (b2DistanceInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'useRadii'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->useRadii);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: useRadii of class  b2DistanceInput */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceInput_useRadii
static int tolua_set_b2DistanceInput_useRadii(lua_State* tolua_S)
{
  b2DistanceInput* self = (b2DistanceInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'useRadii'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->useRadii = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: pointA of class  b2DistanceOutput */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceOutput_pointA
static int tolua_get_b2DistanceOutput_pointA(lua_State* tolua_S)
{
  b2DistanceOutput* self = (b2DistanceOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->pointA,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: pointA of class  b2DistanceOutput */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceOutput_pointA
static int tolua_set_b2DistanceOutput_pointA(lua_State* tolua_S)
{
  b2DistanceOutput* self = (b2DistanceOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->pointA = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: pointB of class  b2DistanceOutput */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceOutput_pointB
static int tolua_get_b2DistanceOutput_pointB(lua_State* tolua_S)
{
  b2DistanceOutput* self = (b2DistanceOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->pointB,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: pointB of class  b2DistanceOutput */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceOutput_pointB
static int tolua_set_b2DistanceOutput_pointB(lua_State* tolua_S)
{
  b2DistanceOutput* self = (b2DistanceOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pointB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->pointB = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: distance of class  b2DistanceOutput */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceOutput_distance
static int tolua_get_b2DistanceOutput_distance(lua_State* tolua_S)
{
  b2DistanceOutput* self = (b2DistanceOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'distance'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->distance);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: distance of class  b2DistanceOutput */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceOutput_distance
static int tolua_set_b2DistanceOutput_distance(lua_State* tolua_S)
{
  b2DistanceOutput* self = (b2DistanceOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'distance'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->distance = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: iterations of class  b2DistanceOutput */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceOutput_iterations
static int tolua_get_b2DistanceOutput_iterations(lua_State* tolua_S)
{
  b2DistanceOutput* self = (b2DistanceOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'iterations'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->iterations);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: iterations of class  b2DistanceOutput */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceOutput_iterations
static int tolua_set_b2DistanceOutput_iterations(lua_State* tolua_S)
{
  b2DistanceOutput* self = (b2DistanceOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'iterations'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->iterations = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: b2Distance */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Distance00
static int tolua_LuaBox2D_b2Distance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceOutput",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2SimplexCache",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"const b2DistanceInput",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceOutput* output = ((b2DistanceOutput*)  tolua_tousertype(tolua_S,1,0));
  b2SimplexCache* cache = ((b2SimplexCache*)  tolua_tousertype(tolua_S,2,0));
  const b2DistanceInput* input = ((const b2DistanceInput*)  tolua_tousertype(tolua_S,3,0));
  {
   b2Distance(output,cache,input);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'b2Distance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2DistanceJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJointDef_new00
static int tolua_LuaBox2D_b2DistanceJointDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2DistanceJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2DistanceJointDef* tolua_ret = (b2DistanceJointDef*)  Mtolua_new((b2DistanceJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2DistanceJointDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2DistanceJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJointDef_new00_local
static int tolua_LuaBox2D_b2DistanceJointDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2DistanceJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2DistanceJointDef* tolua_ret = (b2DistanceJointDef*)  Mtolua_new((b2DistanceJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2DistanceJointDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initialize of class  b2DistanceJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJointDef_Initialize00
static int tolua_LuaBox2D_b2DistanceJointDef_Initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceJointDef",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Body",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceJointDef* self = (b2DistanceJointDef*)  tolua_tousertype(tolua_S,1,0);
  b2Body* bodyA = ((b2Body*)  tolua_tousertype(tolua_S,2,0));
  b2Body* bodyB = ((b2Body*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec2* anchorA = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
  const b2Vec2* anchorB = ((const b2Vec2*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initialize'", NULL);
#endif
  {
   self->Initialize(bodyA,bodyB,*anchorA,*anchorB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorA of class  b2DistanceJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceJointDef_localAnchorA
static int tolua_get_b2DistanceJointDef_localAnchorA(lua_State* tolua_S)
{
  b2DistanceJointDef* self = (b2DistanceJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorA,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorA of class  b2DistanceJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceJointDef_localAnchorA
static int tolua_set_b2DistanceJointDef_localAnchorA(lua_State* tolua_S)
{
  b2DistanceJointDef* self = (b2DistanceJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorA = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorB of class  b2DistanceJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceJointDef_localAnchorB
static int tolua_get_b2DistanceJointDef_localAnchorB(lua_State* tolua_S)
{
  b2DistanceJointDef* self = (b2DistanceJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorB,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorB of class  b2DistanceJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceJointDef_localAnchorB
static int tolua_set_b2DistanceJointDef_localAnchorB(lua_State* tolua_S)
{
  b2DistanceJointDef* self = (b2DistanceJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorB = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: length of class  b2DistanceJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceJointDef_length
static int tolua_get_b2DistanceJointDef_length(lua_State* tolua_S)
{
  b2DistanceJointDef* self = (b2DistanceJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'length'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->length);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: length of class  b2DistanceJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceJointDef_length
static int tolua_set_b2DistanceJointDef_length(lua_State* tolua_S)
{
  b2DistanceJointDef* self = (b2DistanceJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'length'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->length = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: frequencyHz of class  b2DistanceJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceJointDef_frequencyHz
static int tolua_get_b2DistanceJointDef_frequencyHz(lua_State* tolua_S)
{
  b2DistanceJointDef* self = (b2DistanceJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'frequencyHz'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->frequencyHz);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: frequencyHz of class  b2DistanceJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceJointDef_frequencyHz
static int tolua_set_b2DistanceJointDef_frequencyHz(lua_State* tolua_S)
{
  b2DistanceJointDef* self = (b2DistanceJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'frequencyHz'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->frequencyHz = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: dampingRatio of class  b2DistanceJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2DistanceJointDef_dampingRatio
static int tolua_get_b2DistanceJointDef_dampingRatio(lua_State* tolua_S)
{
  b2DistanceJointDef* self = (b2DistanceJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dampingRatio'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->dampingRatio);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: dampingRatio of class  b2DistanceJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2DistanceJointDef_dampingRatio
static int tolua_set_b2DistanceJointDef_dampingRatio(lua_State* tolua_S)
{
  b2DistanceJointDef* self = (b2DistanceJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dampingRatio'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->dampingRatio = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorA of class  b2DistanceJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJoint_GetAnchorA00
static int tolua_LuaBox2D_b2DistanceJoint_GetAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceJoint* self = (b2DistanceJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorA'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorA();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorB of class  b2DistanceJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJoint_GetAnchorB00
static int tolua_LuaBox2D_b2DistanceJoint_GetAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceJoint* self = (b2DistanceJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorB'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorB();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionForce of class  b2DistanceJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJoint_GetReactionForce00
static int tolua_LuaBox2D_b2DistanceJoint_GetReactionForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceJoint* self = (b2DistanceJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionForce'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetReactionForce(inv_dt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionTorque of class  b2DistanceJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJoint_GetReactionTorque00
static int tolua_LuaBox2D_b2DistanceJoint_GetReactionTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceJoint* self = (b2DistanceJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionTorque'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetReactionTorque(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorA of class  b2DistanceJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJoint_GetLocalAnchorA00
static int tolua_LuaBox2D_b2DistanceJoint_GetLocalAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2DistanceJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2DistanceJoint* self = (const b2DistanceJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorA'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorA();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorB of class  b2DistanceJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJoint_GetLocalAnchorB00
static int tolua_LuaBox2D_b2DistanceJoint_GetLocalAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2DistanceJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2DistanceJoint* self = (const b2DistanceJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorB'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorB();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLength of class  b2DistanceJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJoint_SetLength00
static int tolua_LuaBox2D_b2DistanceJoint_SetLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceJoint* self = (b2DistanceJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 length = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLength'", NULL);
#endif
  {
   self->SetLength(length);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLength of class  b2DistanceJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJoint_GetLength00
static int tolua_LuaBox2D_b2DistanceJoint_GetLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceJoint* self = (b2DistanceJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLength'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFrequency of class  b2DistanceJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJoint_SetFrequency00
static int tolua_LuaBox2D_b2DistanceJoint_SetFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceJoint* self = (b2DistanceJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 hz = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFrequency'", NULL);
#endif
  {
   self->SetFrequency(hz);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFrequency of class  b2DistanceJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJoint_GetFrequency00
static int tolua_LuaBox2D_b2DistanceJoint_GetFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceJoint* self = (b2DistanceJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFrequency'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetFrequency();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDampingRatio of class  b2DistanceJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJoint_SetDampingRatio00
static int tolua_LuaBox2D_b2DistanceJoint_SetDampingRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceJoint* self = (b2DistanceJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 ratio = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDampingRatio'", NULL);
#endif
  {
   self->SetDampingRatio(ratio);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDampingRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDampingRatio of class  b2DistanceJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJoint_GetDampingRatio00
static int tolua_LuaBox2D_b2DistanceJoint_GetDampingRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceJoint* self = (b2DistanceJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDampingRatio'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetDampingRatio();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDampingRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2DistanceJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DistanceJoint_Dump00
static int tolua_LuaBox2D_b2DistanceJoint_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DistanceJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DistanceJoint* self = (b2DistanceJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Color */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Color_new00
static int tolua_LuaBox2D_b2Color_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Color",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Color* tolua_ret = (b2Color*)  Mtolua_new((b2Color)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Color");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Color */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Color_new00_local
static int tolua_LuaBox2D_b2Color_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Color",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Color* tolua_ret = (b2Color*)  Mtolua_new((b2Color)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Color");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Color */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Color_new01
static int tolua_LuaBox2D_b2Color_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Color",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float32 r = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 g = ((float32)  tolua_tonumber(tolua_S,3,0));
  float32 b = ((float32)  tolua_tonumber(tolua_S,4,0));
  {
   b2Color* tolua_ret = (b2Color*)  Mtolua_new((b2Color)(r,g,b));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Color");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Color_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Color */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Color_new01_local
static int tolua_LuaBox2D_b2Color_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Color",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float32 r = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 g = ((float32)  tolua_tonumber(tolua_S,3,0));
  float32 b = ((float32)  tolua_tonumber(tolua_S,4,0));
  {
   b2Color* tolua_ret = (b2Color*)  Mtolua_new((b2Color)(r,g,b));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Color");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Color_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set of class  b2Color */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Color_Set00
static int tolua_LuaBox2D_b2Color_Set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Color",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Color* self = (b2Color*)  tolua_tousertype(tolua_S,1,0);
  float32 ri = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 gi = ((float32)  tolua_tonumber(tolua_S,3,0));
  float32 bi = ((float32)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set'", NULL);
#endif
  {
   self->Set(ri,gi,bi);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: r of class  b2Color */
#ifndef TOLUA_DISABLE_tolua_get_b2Color_r
static int tolua_get_b2Color_r(lua_State* tolua_S)
{
  b2Color* self = (b2Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->r);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: r of class  b2Color */
#ifndef TOLUA_DISABLE_tolua_set_b2Color_r
static int tolua_set_b2Color_r(lua_State* tolua_S)
{
  b2Color* self = (b2Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->r = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g of class  b2Color */
#ifndef TOLUA_DISABLE_tolua_get_b2Color_g
static int tolua_get_b2Color_g(lua_State* tolua_S)
{
  b2Color* self = (b2Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->g);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g of class  b2Color */
#ifndef TOLUA_DISABLE_tolua_set_b2Color_g
static int tolua_set_b2Color_g(lua_State* tolua_S)
{
  b2Color* self = (b2Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->g = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: b of class  b2Color */
#ifndef TOLUA_DISABLE_tolua_get_b2Color_b
static int tolua_get_b2Color_b(lua_State* tolua_S)
{
  b2Color* self = (b2Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->b);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: b of class  b2Color */
#ifndef TOLUA_DISABLE_tolua_set_b2Color_b
static int tolua_set_b2Color_b(lua_State* tolua_S)
{
  b2Color* self = (b2Color*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->b = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2Draw */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Draw_delete00
static int tolua_LuaBox2D_b2Draw_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Draw",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Draw* self = (b2Draw*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFlags of class  b2Draw */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Draw_SetFlags00
static int tolua_LuaBox2D_b2Draw_SetFlags00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Draw",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Draw* self = (b2Draw*)  tolua_tousertype(tolua_S,1,0);
  uint32 flags = ((uint32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFlags'", NULL);
#endif
  {
   self->SetFlags(flags);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFlags'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFlags of class  b2Draw */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Draw_GetFlags00
static int tolua_LuaBox2D_b2Draw_GetFlags00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Draw",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Draw* self = (b2Draw*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFlags'", NULL);
#endif
  {
   uint32 tolua_ret = (uint32)  self->GetFlags();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFlags'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AppendFlags of class  b2Draw */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Draw_AppendFlags00
static int tolua_LuaBox2D_b2Draw_AppendFlags00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Draw",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Draw* self = (b2Draw*)  tolua_tousertype(tolua_S,1,0);
  uint32 flags = ((uint32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AppendFlags'", NULL);
#endif
  {
   self->AppendFlags(flags);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AppendFlags'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearFlags of class  b2Draw */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Draw_ClearFlags00
static int tolua_LuaBox2D_b2Draw_ClearFlags00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Draw",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Draw* self = (b2Draw*)  tolua_tousertype(tolua_S,1,0);
  uint32 flags = ((uint32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearFlags'", NULL);
#endif
  {
   self->ClearFlags(flags);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearFlags'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DrawPolygon of class  b2Draw */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Draw_DrawPolygon00
static int tolua_LuaBox2D_b2Draw_DrawPolygon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Draw",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Draw* self = (b2Draw*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* vertices = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  int32 vertexCount = ((int32)  tolua_tonumber(tolua_S,3,0));
  const b2Color* color = ((const b2Color*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DrawPolygon'", NULL);
#endif
  {
   self->DrawPolygon(vertices,vertexCount,*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DrawPolygon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DrawSolidPolygon of class  b2Draw */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Draw_DrawSolidPolygon00
static int tolua_LuaBox2D_b2Draw_DrawSolidPolygon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Draw",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Draw* self = (b2Draw*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* vertices = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  int32 vertexCount = ((int32)  tolua_tonumber(tolua_S,3,0));
  const b2Color* color = ((const b2Color*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DrawSolidPolygon'", NULL);
#endif
  {
   self->DrawSolidPolygon(vertices,vertexCount,*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DrawSolidPolygon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DrawCircle of class  b2Draw */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Draw_DrawCircle00
static int tolua_LuaBox2D_b2Draw_DrawCircle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Draw",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Draw* self = (b2Draw*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* center = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  float32 radius = ((float32)  tolua_tonumber(tolua_S,3,0));
  const b2Color* color = ((const b2Color*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DrawCircle'", NULL);
#endif
  {
   self->DrawCircle(*center,radius,*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DrawCircle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DrawSolidCircle of class  b2Draw */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Draw_DrawSolidCircle00
static int tolua_LuaBox2D_b2Draw_DrawSolidCircle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Draw",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const b2Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Draw* self = (b2Draw*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* center = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  float32 radius = ((float32)  tolua_tonumber(tolua_S,3,0));
  const b2Vec2* axis = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
  const b2Color* color = ((const b2Color*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DrawSolidCircle'", NULL);
#endif
  {
   self->DrawSolidCircle(*center,radius,*axis,*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DrawSolidCircle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DrawSegment of class  b2Draw */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Draw_DrawSegment00
static int tolua_LuaBox2D_b2Draw_DrawSegment00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Draw",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Color",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Draw* self = (b2Draw*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* p1 = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* p2 = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
  const b2Color* color = ((const b2Color*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DrawSegment'", NULL);
#endif
  {
   self->DrawSegment(*p1,*p2,*color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DrawSegment'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DrawTransform of class  b2Draw */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Draw_DrawTransform00
static int tolua_LuaBox2D_b2Draw_DrawTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Draw",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Draw* self = (b2Draw*)  tolua_tousertype(tolua_S,1,0);
  const b2Transform* xf = ((const b2Transform*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DrawTransform'", NULL);
#endif
  {
   self->DrawTransform(*xf);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DrawTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsLeaf of class  b2TreeNode */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2TreeNode_IsLeaf00
static int tolua_LuaBox2D_b2TreeNode_IsLeaf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2TreeNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2TreeNode* self = (b2TreeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsLeaf'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsLeaf();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsLeaf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: aabb of class  b2TreeNode */
#ifndef TOLUA_DISABLE_tolua_get_b2TreeNode_aabb
static int tolua_get_b2TreeNode_aabb(lua_State* tolua_S)
{
  b2TreeNode* self = (b2TreeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'aabb'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->aabb,"b2AABB");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: aabb of class  b2TreeNode */
#ifndef TOLUA_DISABLE_tolua_set_b2TreeNode_aabb
static int tolua_set_b2TreeNode_aabb(lua_State* tolua_S)
{
  b2TreeNode* self = (b2TreeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'aabb'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2AABB",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->aabb = *((b2AABB*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: userData of class  b2TreeNode */
#ifndef TOLUA_DISABLE_tolua_get_b2TreeNode_userData
static int tolua_get_b2TreeNode_userData(lua_State* tolua_S)
{
  b2TreeNode* self = (b2TreeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'userData'",NULL);
#endif
  tolua_pushuserdata(tolua_S,(void*)self->userData);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: userData of class  b2TreeNode */
#ifndef TOLUA_DISABLE_tolua_set_b2TreeNode_userData
static int tolua_set_b2TreeNode_userData(lua_State* tolua_S)
{
  b2TreeNode* self = (b2TreeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'userData'",NULL);
  if (!tolua_isuserdata(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->userData = ((void*)  tolua_touserdata(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: child1 of class  b2TreeNode */
#ifndef TOLUA_DISABLE_tolua_get_b2TreeNode_child1
static int tolua_get_b2TreeNode_child1(lua_State* tolua_S)
{
  b2TreeNode* self = (b2TreeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'child1'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->child1);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: child1 of class  b2TreeNode */
#ifndef TOLUA_DISABLE_tolua_set_b2TreeNode_child1
static int tolua_set_b2TreeNode_child1(lua_State* tolua_S)
{
  b2TreeNode* self = (b2TreeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'child1'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->child1 = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: child2 of class  b2TreeNode */
#ifndef TOLUA_DISABLE_tolua_get_b2TreeNode_child2
static int tolua_get_b2TreeNode_child2(lua_State* tolua_S)
{
  b2TreeNode* self = (b2TreeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'child2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->child2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: child2 of class  b2TreeNode */
#ifndef TOLUA_DISABLE_tolua_set_b2TreeNode_child2
static int tolua_set_b2TreeNode_child2(lua_State* tolua_S)
{
  b2TreeNode* self = (b2TreeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'child2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->child2 = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: height of class  b2TreeNode */
#ifndef TOLUA_DISABLE_tolua_get_b2TreeNode_height
static int tolua_get_b2TreeNode_height(lua_State* tolua_S)
{
  b2TreeNode* self = (b2TreeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'height'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->height);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: height of class  b2TreeNode */
#ifndef TOLUA_DISABLE_tolua_set_b2TreeNode_height
static int tolua_set_b2TreeNode_height(lua_State* tolua_S)
{
  b2TreeNode* self = (b2TreeNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'height'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->height = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2DynamicTree */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DynamicTree_new00
static int tolua_LuaBox2D_b2DynamicTree_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2DynamicTree",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2DynamicTree* tolua_ret = (b2DynamicTree*)  Mtolua_new((b2DynamicTree)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2DynamicTree");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2DynamicTree */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DynamicTree_new00_local
static int tolua_LuaBox2D_b2DynamicTree_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2DynamicTree",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2DynamicTree* tolua_ret = (b2DynamicTree*)  Mtolua_new((b2DynamicTree)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2DynamicTree");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2DynamicTree */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DynamicTree_delete00
static int tolua_LuaBox2D_b2DynamicTree_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DynamicTree",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DynamicTree* self = (b2DynamicTree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateProxy of class  b2DynamicTree */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DynamicTree_CreateProxy00
static int tolua_LuaBox2D_b2DynamicTree_CreateProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DynamicTree",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2AABB",0,&tolua_err)) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DynamicTree* self = (b2DynamicTree*)  tolua_tousertype(tolua_S,1,0);
  const b2AABB* aabb = ((const b2AABB*)  tolua_tousertype(tolua_S,2,0));
  void* userData = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateProxy'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->CreateProxy(*aabb,userData);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DestroyProxy of class  b2DynamicTree */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DynamicTree_DestroyProxy00
static int tolua_LuaBox2D_b2DynamicTree_DestroyProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DynamicTree",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DynamicTree* self = (b2DynamicTree*)  tolua_tousertype(tolua_S,1,0);
  int32 proxyId = ((int32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DestroyProxy'", NULL);
#endif
  {
   self->DestroyProxy(proxyId);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DestroyProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MoveProxy of class  b2DynamicTree */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DynamicTree_MoveProxy00
static int tolua_LuaBox2D_b2DynamicTree_MoveProxy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DynamicTree",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2AABB",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DynamicTree* self = (b2DynamicTree*)  tolua_tousertype(tolua_S,1,0);
  int32 proxyId = ((int32)  tolua_tonumber(tolua_S,2,0));
  const b2AABB* aabb1 = ((const b2AABB*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec2* displacement = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MoveProxy'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->MoveProxy(proxyId,*aabb1,*displacement);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MoveProxy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUserData of class  b2DynamicTree */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DynamicTree_GetUserData00
static int tolua_LuaBox2D_b2DynamicTree_GetUserData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DynamicTree",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DynamicTree* self = (b2DynamicTree*)  tolua_tousertype(tolua_S,1,0);
  int32 proxyId = ((int32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUserData'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetUserData(proxyId);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUserData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFatAABB of class  b2DynamicTree */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DynamicTree_GetFatAABB00
static int tolua_LuaBox2D_b2DynamicTree_GetFatAABB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DynamicTree",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DynamicTree* self = (b2DynamicTree*)  tolua_tousertype(tolua_S,1,0);
  int32 proxyId = ((int32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFatAABB'", NULL);
#endif
  {
   const b2AABB& tolua_ret = (const b2AABB&)  self->GetFatAABB(proxyId);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2AABB");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFatAABB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Validate of class  b2DynamicTree */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DynamicTree_Validate00
static int tolua_LuaBox2D_b2DynamicTree_Validate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DynamicTree",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DynamicTree* self = (b2DynamicTree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Validate'", NULL);
#endif
  {
   self->Validate();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Validate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeight of class  b2DynamicTree */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DynamicTree_GetHeight00
static int tolua_LuaBox2D_b2DynamicTree_GetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DynamicTree",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DynamicTree* self = (b2DynamicTree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeight'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxBalance of class  b2DynamicTree */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DynamicTree_GetMaxBalance00
static int tolua_LuaBox2D_b2DynamicTree_GetMaxBalance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DynamicTree",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DynamicTree* self = (b2DynamicTree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxBalance'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetMaxBalance();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxBalance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAreaRatio of class  b2DynamicTree */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DynamicTree_GetAreaRatio00
static int tolua_LuaBox2D_b2DynamicTree_GetAreaRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DynamicTree",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DynamicTree* self = (b2DynamicTree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAreaRatio'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetAreaRatio();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAreaRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RebuildBottomUp of class  b2DynamicTree */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DynamicTree_RebuildBottomUp00
static int tolua_LuaBox2D_b2DynamicTree_RebuildBottomUp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DynamicTree",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DynamicTree* self = (b2DynamicTree*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RebuildBottomUp'", NULL);
#endif
  {
   self->RebuildBottomUp();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RebuildBottomUp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  b2EdgeAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeAndCircleContact_Create00
static int tolua_LuaBox2D_b2EdgeAndCircleContact_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2EdgeAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  int32 indexA = ((int32)  tolua_tonumber(tolua_S,3,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,4,0));
  int32 indexB = ((int32)  tolua_tonumber(tolua_S,5,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,6,0));
  {
   b2Contact* tolua_ret = (b2Contact*)  b2EdgeAndCircleContact::Create(fixtureA,indexA,fixtureB,indexB,allocator);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Contact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Destroy of class  b2EdgeAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeAndCircleContact_Destroy00
static int tolua_LuaBox2D_b2EdgeAndCircleContact_Destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2EdgeAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* contact = ((b2Contact*)  tolua_tousertype(tolua_S,2,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,3,0));
  {
   b2EdgeAndCircleContact::Destroy(contact,allocator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2EdgeAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeAndCircleContact_new00
static int tolua_LuaBox2D_b2EdgeAndCircleContact_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2EdgeAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,3,0));
  {
   b2EdgeAndCircleContact* tolua_ret = (b2EdgeAndCircleContact*)  Mtolua_new((b2EdgeAndCircleContact)(fixtureA,fixtureB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2EdgeAndCircleContact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2EdgeAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeAndCircleContact_new00_local
static int tolua_LuaBox2D_b2EdgeAndCircleContact_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2EdgeAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,3,0));
  {
   b2EdgeAndCircleContact* tolua_ret = (b2EdgeAndCircleContact*)  Mtolua_new((b2EdgeAndCircleContact)(fixtureA,fixtureB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2EdgeAndCircleContact");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2EdgeAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeAndCircleContact_delete00
static int tolua_LuaBox2D_b2EdgeAndCircleContact_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2EdgeAndCircleContact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2EdgeAndCircleContact* self = (b2EdgeAndCircleContact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Evaluate of class  b2EdgeAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeAndCircleContact_Evaluate00
static int tolua_LuaBox2D_b2EdgeAndCircleContact_Evaluate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2EdgeAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Manifold",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2EdgeAndCircleContact* self = (b2EdgeAndCircleContact*)  tolua_tousertype(tolua_S,1,0);
  b2Manifold* manifold = ((b2Manifold*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Evaluate'", NULL);
#endif
  {
   self->Evaluate(manifold,*xfA,*xfB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Evaluate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  b2EdgeAndPolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeAndPolygonContact_Create00
static int tolua_LuaBox2D_b2EdgeAndPolygonContact_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2EdgeAndPolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  int32 indexA = ((int32)  tolua_tonumber(tolua_S,3,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,4,0));
  int32 indexB = ((int32)  tolua_tonumber(tolua_S,5,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,6,0));
  {
   b2Contact* tolua_ret = (b2Contact*)  b2EdgeAndPolygonContact::Create(fixtureA,indexA,fixtureB,indexB,allocator);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Contact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Destroy of class  b2EdgeAndPolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeAndPolygonContact_Destroy00
static int tolua_LuaBox2D_b2EdgeAndPolygonContact_Destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2EdgeAndPolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* contact = ((b2Contact*)  tolua_tousertype(tolua_S,2,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,3,0));
  {
   b2EdgeAndPolygonContact::Destroy(contact,allocator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2EdgeAndPolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeAndPolygonContact_new00
static int tolua_LuaBox2D_b2EdgeAndPolygonContact_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2EdgeAndPolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,3,0));
  {
   b2EdgeAndPolygonContact* tolua_ret = (b2EdgeAndPolygonContact*)  Mtolua_new((b2EdgeAndPolygonContact)(fixtureA,fixtureB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2EdgeAndPolygonContact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2EdgeAndPolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeAndPolygonContact_new00_local
static int tolua_LuaBox2D_b2EdgeAndPolygonContact_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2EdgeAndPolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,3,0));
  {
   b2EdgeAndPolygonContact* tolua_ret = (b2EdgeAndPolygonContact*)  Mtolua_new((b2EdgeAndPolygonContact)(fixtureA,fixtureB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2EdgeAndPolygonContact");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2EdgeAndPolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeAndPolygonContact_delete00
static int tolua_LuaBox2D_b2EdgeAndPolygonContact_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2EdgeAndPolygonContact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2EdgeAndPolygonContact* self = (b2EdgeAndPolygonContact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Evaluate of class  b2EdgeAndPolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2EdgeAndPolygonContact_Evaluate00
static int tolua_LuaBox2D_b2EdgeAndPolygonContact_Evaluate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2EdgeAndPolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Manifold",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2EdgeAndPolygonContact* self = (b2EdgeAndPolygonContact*)  tolua_tousertype(tolua_S,1,0);
  b2Manifold* manifold = ((b2Manifold*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Evaluate'", NULL);
#endif
  {
   self->Evaluate(manifold,*xfA,*xfB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Evaluate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Filter */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Filter_new00
static int tolua_LuaBox2D_b2Filter_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Filter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Filter* tolua_ret = (b2Filter*)  Mtolua_new((b2Filter)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Filter");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Filter */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Filter_new00_local
static int tolua_LuaBox2D_b2Filter_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Filter",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Filter* tolua_ret = (b2Filter*)  Mtolua_new((b2Filter)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Filter");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: categoryBits of class  b2Filter */
#ifndef TOLUA_DISABLE_tolua_get_b2Filter_categoryBits
static int tolua_get_b2Filter_categoryBits(lua_State* tolua_S)
{
  b2Filter* self = (b2Filter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'categoryBits'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->categoryBits);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: categoryBits of class  b2Filter */
#ifndef TOLUA_DISABLE_tolua_set_b2Filter_categoryBits
static int tolua_set_b2Filter_categoryBits(lua_State* tolua_S)
{
  b2Filter* self = (b2Filter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'categoryBits'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->categoryBits = ((uint16)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: maskBits of class  b2Filter */
#ifndef TOLUA_DISABLE_tolua_get_b2Filter_maskBits
static int tolua_get_b2Filter_maskBits(lua_State* tolua_S)
{
  b2Filter* self = (b2Filter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maskBits'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->maskBits);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: maskBits of class  b2Filter */
#ifndef TOLUA_DISABLE_tolua_set_b2Filter_maskBits
static int tolua_set_b2Filter_maskBits(lua_State* tolua_S)
{
  b2Filter* self = (b2Filter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maskBits'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->maskBits = ((uint16)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: groupIndex of class  b2Filter */
#ifndef TOLUA_DISABLE_tolua_get_b2Filter_groupIndex
static int tolua_get_b2Filter_groupIndex(lua_State* tolua_S)
{
  b2Filter* self = (b2Filter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'groupIndex'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->groupIndex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: groupIndex of class  b2Filter */
#ifndef TOLUA_DISABLE_tolua_set_b2Filter_groupIndex
static int tolua_set_b2Filter_groupIndex(lua_State* tolua_S)
{
  b2Filter* self = (b2Filter*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'groupIndex'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->groupIndex = ((int16)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: aabb of class  b2FixtureProxy */
#ifndef TOLUA_DISABLE_tolua_get_b2FixtureProxy_aabb
static int tolua_get_b2FixtureProxy_aabb(lua_State* tolua_S)
{
  b2FixtureProxy* self = (b2FixtureProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'aabb'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->aabb,"b2AABB");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: aabb of class  b2FixtureProxy */
#ifndef TOLUA_DISABLE_tolua_set_b2FixtureProxy_aabb
static int tolua_set_b2FixtureProxy_aabb(lua_State* tolua_S)
{
  b2FixtureProxy* self = (b2FixtureProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'aabb'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2AABB",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->aabb = *((b2AABB*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: fixture of class  b2FixtureProxy */
#ifndef TOLUA_DISABLE_tolua_get_b2FixtureProxy_fixture_ptr
static int tolua_get_b2FixtureProxy_fixture_ptr(lua_State* tolua_S)
{
  b2FixtureProxy* self = (b2FixtureProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'fixture'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->fixture,"b2Fixture");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: fixture of class  b2FixtureProxy */
#ifndef TOLUA_DISABLE_tolua_set_b2FixtureProxy_fixture_ptr
static int tolua_set_b2FixtureProxy_fixture_ptr(lua_State* tolua_S)
{
  b2FixtureProxy* self = (b2FixtureProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'fixture'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->fixture = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: childIndex of class  b2FixtureProxy */
#ifndef TOLUA_DISABLE_tolua_get_b2FixtureProxy_childIndex
static int tolua_get_b2FixtureProxy_childIndex(lua_State* tolua_S)
{
  b2FixtureProxy* self = (b2FixtureProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'childIndex'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->childIndex);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: childIndex of class  b2FixtureProxy */
#ifndef TOLUA_DISABLE_tolua_set_b2FixtureProxy_childIndex
static int tolua_set_b2FixtureProxy_childIndex(lua_State* tolua_S)
{
  b2FixtureProxy* self = (b2FixtureProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'childIndex'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->childIndex = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: proxyId of class  b2FixtureProxy */
#ifndef TOLUA_DISABLE_tolua_get_b2FixtureProxy_proxyId
static int tolua_get_b2FixtureProxy_proxyId(lua_State* tolua_S)
{
  b2FixtureProxy* self = (b2FixtureProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyId'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->proxyId);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: proxyId of class  b2FixtureProxy */
#ifndef TOLUA_DISABLE_tolua_set_b2FixtureProxy_proxyId
static int tolua_set_b2FixtureProxy_proxyId(lua_State* tolua_S)
{
  b2FixtureProxy* self = (b2FixtureProxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyId'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->proxyId = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2FrictionJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJointDef_new00
static int tolua_LuaBox2D_b2FrictionJointDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2FrictionJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2FrictionJointDef* tolua_ret = (b2FrictionJointDef*)  Mtolua_new((b2FrictionJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2FrictionJointDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2FrictionJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJointDef_new00_local
static int tolua_LuaBox2D_b2FrictionJointDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2FrictionJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2FrictionJointDef* tolua_ret = (b2FrictionJointDef*)  Mtolua_new((b2FrictionJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2FrictionJointDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initialize of class  b2FrictionJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJointDef_Initialize00
static int tolua_LuaBox2D_b2FrictionJointDef_Initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2FrictionJointDef",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Body",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2FrictionJointDef* self = (b2FrictionJointDef*)  tolua_tousertype(tolua_S,1,0);
  b2Body* bodyA = ((b2Body*)  tolua_tousertype(tolua_S,2,0));
  b2Body* bodyB = ((b2Body*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec2* anchor = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initialize'", NULL);
#endif
  {
   self->Initialize(bodyA,bodyB,*anchor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorA of class  b2FrictionJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2FrictionJointDef_localAnchorA
static int tolua_get_b2FrictionJointDef_localAnchorA(lua_State* tolua_S)
{
  b2FrictionJointDef* self = (b2FrictionJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorA,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorA of class  b2FrictionJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2FrictionJointDef_localAnchorA
static int tolua_set_b2FrictionJointDef_localAnchorA(lua_State* tolua_S)
{
  b2FrictionJointDef* self = (b2FrictionJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorA = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorB of class  b2FrictionJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2FrictionJointDef_localAnchorB
static int tolua_get_b2FrictionJointDef_localAnchorB(lua_State* tolua_S)
{
  b2FrictionJointDef* self = (b2FrictionJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorB,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorB of class  b2FrictionJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2FrictionJointDef_localAnchorB
static int tolua_set_b2FrictionJointDef_localAnchorB(lua_State* tolua_S)
{
  b2FrictionJointDef* self = (b2FrictionJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorB = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: maxForce of class  b2FrictionJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2FrictionJointDef_maxForce
static int tolua_get_b2FrictionJointDef_maxForce(lua_State* tolua_S)
{
  b2FrictionJointDef* self = (b2FrictionJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxForce'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->maxForce);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: maxForce of class  b2FrictionJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2FrictionJointDef_maxForce
static int tolua_set_b2FrictionJointDef_maxForce(lua_State* tolua_S)
{
  b2FrictionJointDef* self = (b2FrictionJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxForce'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->maxForce = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: maxTorque of class  b2FrictionJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2FrictionJointDef_maxTorque
static int tolua_get_b2FrictionJointDef_maxTorque(lua_State* tolua_S)
{
  b2FrictionJointDef* self = (b2FrictionJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxTorque'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->maxTorque);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: maxTorque of class  b2FrictionJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2FrictionJointDef_maxTorque
static int tolua_set_b2FrictionJointDef_maxTorque(lua_State* tolua_S)
{
  b2FrictionJointDef* self = (b2FrictionJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxTorque'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->maxTorque = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorA of class  b2FrictionJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJoint_GetAnchorA00
static int tolua_LuaBox2D_b2FrictionJoint_GetAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2FrictionJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2FrictionJoint* self = (b2FrictionJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorA'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorA();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorB of class  b2FrictionJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJoint_GetAnchorB00
static int tolua_LuaBox2D_b2FrictionJoint_GetAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2FrictionJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2FrictionJoint* self = (b2FrictionJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorB'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorB();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionForce of class  b2FrictionJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJoint_GetReactionForce00
static int tolua_LuaBox2D_b2FrictionJoint_GetReactionForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2FrictionJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2FrictionJoint* self = (b2FrictionJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionForce'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetReactionForce(inv_dt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionTorque of class  b2FrictionJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJoint_GetReactionTorque00
static int tolua_LuaBox2D_b2FrictionJoint_GetReactionTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2FrictionJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2FrictionJoint* self = (b2FrictionJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionTorque'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetReactionTorque(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorA of class  b2FrictionJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJoint_GetLocalAnchorA00
static int tolua_LuaBox2D_b2FrictionJoint_GetLocalAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2FrictionJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2FrictionJoint* self = (b2FrictionJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorA'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorA();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorB of class  b2FrictionJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJoint_GetLocalAnchorB00
static int tolua_LuaBox2D_b2FrictionJoint_GetLocalAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2FrictionJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2FrictionJoint* self = (const b2FrictionJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorB'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorB();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaxForce of class  b2FrictionJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJoint_SetMaxForce00
static int tolua_LuaBox2D_b2FrictionJoint_SetMaxForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2FrictionJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2FrictionJoint* self = (b2FrictionJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 force = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaxForce'", NULL);
#endif
  {
   self->SetMaxForce(force);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaxForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxForce of class  b2FrictionJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJoint_GetMaxForce00
static int tolua_LuaBox2D_b2FrictionJoint_GetMaxForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2FrictionJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2FrictionJoint* self = (b2FrictionJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxForce'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetMaxForce();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaxTorque of class  b2FrictionJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJoint_SetMaxTorque00
static int tolua_LuaBox2D_b2FrictionJoint_SetMaxTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2FrictionJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2FrictionJoint* self = (b2FrictionJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 torque = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaxTorque'", NULL);
#endif
  {
   self->SetMaxTorque(torque);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaxTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxTorque of class  b2FrictionJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJoint_GetMaxTorque00
static int tolua_LuaBox2D_b2FrictionJoint_GetMaxTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2FrictionJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2FrictionJoint* self = (b2FrictionJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxTorque'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetMaxTorque();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2FrictionJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2FrictionJoint_Dump00
static int tolua_LuaBox2D_b2FrictionJoint_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2FrictionJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2FrictionJoint* self = (b2FrictionJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2GearJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2GearJointDef_new00
static int tolua_LuaBox2D_b2GearJointDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2GearJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2GearJointDef* tolua_ret = (b2GearJointDef*)  Mtolua_new((b2GearJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2GearJointDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2GearJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2GearJointDef_new00_local
static int tolua_LuaBox2D_b2GearJointDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2GearJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2GearJointDef* tolua_ret = (b2GearJointDef*)  Mtolua_new((b2GearJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2GearJointDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: joint1 of class  b2GearJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2GearJointDef_joint1_ptr
static int tolua_get_b2GearJointDef_joint1_ptr(lua_State* tolua_S)
{
  b2GearJointDef* self = (b2GearJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'joint1'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->joint1,"b2Joint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: joint1 of class  b2GearJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2GearJointDef_joint1_ptr
static int tolua_set_b2GearJointDef_joint1_ptr(lua_State* tolua_S)
{
  b2GearJointDef* self = (b2GearJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'joint1'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Joint",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->joint1 = ((b2Joint*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: joint2 of class  b2GearJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2GearJointDef_joint2_ptr
static int tolua_get_b2GearJointDef_joint2_ptr(lua_State* tolua_S)
{
  b2GearJointDef* self = (b2GearJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'joint2'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->joint2,"b2Joint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: joint2 of class  b2GearJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2GearJointDef_joint2_ptr
static int tolua_set_b2GearJointDef_joint2_ptr(lua_State* tolua_S)
{
  b2GearJointDef* self = (b2GearJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'joint2'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Joint",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->joint2 = ((b2Joint*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ratio of class  b2GearJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2GearJointDef_ratio
static int tolua_get_b2GearJointDef_ratio(lua_State* tolua_S)
{
  b2GearJointDef* self = (b2GearJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ratio'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ratio);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ratio of class  b2GearJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2GearJointDef_ratio
static int tolua_set_b2GearJointDef_ratio(lua_State* tolua_S)
{
  b2GearJointDef* self = (b2GearJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ratio'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ratio = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorA of class  b2GearJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2GearJoint_GetAnchorA00
static int tolua_LuaBox2D_b2GearJoint_GetAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2GearJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2GearJoint* self = (b2GearJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorA'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorA();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorB of class  b2GearJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2GearJoint_GetAnchorB00
static int tolua_LuaBox2D_b2GearJoint_GetAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2GearJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2GearJoint* self = (b2GearJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorB'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorB();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionForce of class  b2GearJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2GearJoint_GetReactionForce00
static int tolua_LuaBox2D_b2GearJoint_GetReactionForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2GearJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2GearJoint* self = (b2GearJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionForce'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetReactionForce(inv_dt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionTorque of class  b2GearJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2GearJoint_GetReactionTorque00
static int tolua_LuaBox2D_b2GearJoint_GetReactionTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2GearJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2GearJoint* self = (b2GearJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionTorque'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetReactionTorque(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetJoint1 of class  b2GearJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2GearJoint_GetJoint100
static int tolua_LuaBox2D_b2GearJoint_GetJoint100(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2GearJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2GearJoint* self = (b2GearJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetJoint1'", NULL);
#endif
  {
   b2Joint* tolua_ret = (b2Joint*)  self->GetJoint1();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Joint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetJoint1'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetJoint2 of class  b2GearJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2GearJoint_GetJoint200
static int tolua_LuaBox2D_b2GearJoint_GetJoint200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2GearJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2GearJoint* self = (b2GearJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetJoint2'", NULL);
#endif
  {
   b2Joint* tolua_ret = (b2Joint*)  self->GetJoint2();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Joint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetJoint2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRatio of class  b2GearJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2GearJoint_SetRatio00
static int tolua_LuaBox2D_b2GearJoint_SetRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2GearJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2GearJoint* self = (b2GearJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 ratio = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRatio'", NULL);
#endif
  {
   self->SetRatio(ratio);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRatio of class  b2GearJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2GearJoint_GetRatio00
static int tolua_LuaBox2D_b2GearJoint_GetRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2GearJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2GearJoint* self = (b2GearJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRatio'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetRatio();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2GearJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2GearJoint_Dump00
static int tolua_LuaBox2D_b2GearJoint_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2GearJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2GearJoint* self = (b2GearJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: step of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_get_b2Profile_step
static int tolua_get_b2Profile_step(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'step'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->step);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: step of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_set_b2Profile_step
static int tolua_set_b2Profile_step(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'step'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->step = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: collide of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_get_b2Profile_collide
static int tolua_get_b2Profile_collide(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'collide'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->collide);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: collide of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_set_b2Profile_collide
static int tolua_set_b2Profile_collide(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'collide'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->collide = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: solve of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_get_b2Profile_solve
static int tolua_get_b2Profile_solve(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'solve'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->solve);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: solve of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_set_b2Profile_solve
static int tolua_set_b2Profile_solve(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'solve'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->solve = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: solveInit of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_get_b2Profile_solveInit
static int tolua_get_b2Profile_solveInit(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'solveInit'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->solveInit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: solveInit of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_set_b2Profile_solveInit
static int tolua_set_b2Profile_solveInit(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'solveInit'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->solveInit = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: solveVelocity of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_get_b2Profile_solveVelocity
static int tolua_get_b2Profile_solveVelocity(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'solveVelocity'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->solveVelocity);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: solveVelocity of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_set_b2Profile_solveVelocity
static int tolua_set_b2Profile_solveVelocity(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'solveVelocity'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->solveVelocity = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: solvePosition of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_get_b2Profile_solvePosition
static int tolua_get_b2Profile_solvePosition(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'solvePosition'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->solvePosition);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: solvePosition of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_set_b2Profile_solvePosition
static int tolua_set_b2Profile_solvePosition(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'solvePosition'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->solvePosition = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: broadphase of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_get_b2Profile_broadphase
static int tolua_get_b2Profile_broadphase(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'broadphase'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->broadphase);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: broadphase of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_set_b2Profile_broadphase
static int tolua_set_b2Profile_broadphase(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'broadphase'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->broadphase = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: solveTOI of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_get_b2Profile_solveTOI
static int tolua_get_b2Profile_solveTOI(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'solveTOI'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->solveTOI);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: solveTOI of class  b2Profile */
#ifndef TOLUA_DISABLE_tolua_set_b2Profile_solveTOI
static int tolua_set_b2Profile_solveTOI(lua_State* tolua_S)
{
  b2Profile* self = (b2Profile*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'solveTOI'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->solveTOI = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Island_new00
static int tolua_LuaBox2D_b2Island_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Island",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"b2StackAllocator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"b2ContactListener",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int32 bodyCapacity = ((int32)  tolua_tonumber(tolua_S,2,0));
  int32 contactCapacity = ((int32)  tolua_tonumber(tolua_S,3,0));
  int32 jointCapacity = ((int32)  tolua_tonumber(tolua_S,4,0));
  b2StackAllocator* allocator = ((b2StackAllocator*)  tolua_tousertype(tolua_S,5,0));
  b2ContactListener* listener = ((b2ContactListener*)  tolua_tousertype(tolua_S,6,0));
  {
   b2Island* tolua_ret = (b2Island*)  Mtolua_new((b2Island)(bodyCapacity,contactCapacity,jointCapacity,allocator,listener));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Island");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Island_new00_local
static int tolua_LuaBox2D_b2Island_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Island",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"b2StackAllocator",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"b2ContactListener",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int32 bodyCapacity = ((int32)  tolua_tonumber(tolua_S,2,0));
  int32 contactCapacity = ((int32)  tolua_tonumber(tolua_S,3,0));
  int32 jointCapacity = ((int32)  tolua_tonumber(tolua_S,4,0));
  b2StackAllocator* allocator = ((b2StackAllocator*)  tolua_tousertype(tolua_S,5,0));
  b2ContactListener* listener = ((b2ContactListener*)  tolua_tousertype(tolua_S,6,0));
  {
   b2Island* tolua_ret = (b2Island*)  Mtolua_new((b2Island)(bodyCapacity,contactCapacity,jointCapacity,allocator,listener));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Island");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Island_delete00
static int tolua_LuaBox2D_b2Island_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Island",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Island_Clear00
static int tolua_LuaBox2D_b2Island_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Island",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Solve of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Island_Solve00
static int tolua_LuaBox2D_b2Island_Solve00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Island",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Profile",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2TimeStep",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
  b2Profile* profile = ((b2Profile*)  tolua_tousertype(tolua_S,2,0));
  const b2TimeStep* step = ((const b2TimeStep*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec2* gravity = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
  bool allowSleep = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Solve'", NULL);
#endif
  {
   self->Solve(profile,*step,*gravity,allowSleep);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Solve'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SolveTOI of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Island_SolveTOI00
static int tolua_LuaBox2D_b2Island_SolveTOI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Island",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2TimeStep",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
  const b2TimeStep* subStep = ((const b2TimeStep*)  tolua_tousertype(tolua_S,2,0));
  int32 toiIndexA = ((int32)  tolua_tonumber(tolua_S,3,0));
  int32 toiIndexB = ((int32)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SolveTOI'", NULL);
#endif
  {
   self->SolveTOI(*subStep,toiIndexA,toiIndexB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SolveTOI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Add of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Island_Add00
static int tolua_LuaBox2D_b2Island_Add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Island",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Body",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
  b2Body* body = ((b2Body*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Add'", NULL);
#endif
  {
   self->Add(body);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Add of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Island_Add01
static int tolua_LuaBox2D_b2Island_Add01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Island",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
  b2Contact* contact = ((b2Contact*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Add'", NULL);
#endif
  {
   self->Add(contact);
  }
 }
 return 0;
tolua_lerror:
 return tolua_LuaBox2D_b2Island_Add00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Add of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Island_Add02
static int tolua_LuaBox2D_b2Island_Add02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Island",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
  b2Joint* joint = ((b2Joint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Add'", NULL);
#endif
  {
   self->Add(joint);
  }
 }
 return 0;
tolua_lerror:
 return tolua_LuaBox2D_b2Island_Add01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Report of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Island_Report00
static int tolua_LuaBox2D_b2Island_Report00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Island",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2ContactVelocityConstraint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
  const b2ContactVelocityConstraint* constraints = ((const b2ContactVelocityConstraint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Report'", NULL);
#endif
  {
   self->Report(constraints);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Report'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_allocator of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_get_b2Island_m_allocator_ptr
static int tolua_get_b2Island_m_allocator_ptr(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_allocator'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_allocator,"b2StackAllocator");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_allocator of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_set_b2Island_m_allocator_ptr
static int tolua_set_b2Island_m_allocator_ptr(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_allocator'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2StackAllocator",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_allocator = ((b2StackAllocator*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_listener of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_get_b2Island_m_listener_ptr
static int tolua_get_b2Island_m_listener_ptr(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_listener'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_listener,"b2ContactListener");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_listener of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_set_b2Island_m_listener_ptr
static int tolua_set_b2Island_m_listener_ptr(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_listener'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2ContactListener",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_listener = ((b2ContactListener*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_positions of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_get_b2Island_m_positions_ptr
static int tolua_get_b2Island_m_positions_ptr(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_positions'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_positions,"b2Position");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_positions of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_set_b2Island_m_positions_ptr
static int tolua_set_b2Island_m_positions_ptr(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_positions'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Position",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_positions = ((b2Position*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_velocities of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_get_b2Island_m_velocities_ptr
static int tolua_get_b2Island_m_velocities_ptr(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_velocities'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->m_velocities,"b2Velocity");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_velocities of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_set_b2Island_m_velocities_ptr
static int tolua_set_b2Island_m_velocities_ptr(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_velocities'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Velocity",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_velocities = ((b2Velocity*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bodyCount of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_get_b2Island_m_bodyCount
static int tolua_get_b2Island_m_bodyCount(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bodyCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_bodyCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bodyCount of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_set_b2Island_m_bodyCount
static int tolua_set_b2Island_m_bodyCount(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bodyCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bodyCount = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_jointCount of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_get_b2Island_m_jointCount
static int tolua_get_b2Island_m_jointCount(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_jointCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_jointCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_jointCount of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_set_b2Island_m_jointCount
static int tolua_set_b2Island_m_jointCount(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_jointCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_jointCount = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_contactCount of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_get_b2Island_m_contactCount
static int tolua_get_b2Island_m_contactCount(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_contactCount'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_contactCount);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_contactCount of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_set_b2Island_m_contactCount
static int tolua_set_b2Island_m_contactCount(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_contactCount'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_contactCount = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_bodyCapacity of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_get_b2Island_m_bodyCapacity
static int tolua_get_b2Island_m_bodyCapacity(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bodyCapacity'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_bodyCapacity);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_bodyCapacity of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_set_b2Island_m_bodyCapacity
static int tolua_set_b2Island_m_bodyCapacity(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_bodyCapacity'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_bodyCapacity = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_contactCapacity of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_get_b2Island_m_contactCapacity
static int tolua_get_b2Island_m_contactCapacity(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_contactCapacity'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_contactCapacity);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_contactCapacity of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_set_b2Island_m_contactCapacity
static int tolua_set_b2Island_m_contactCapacity(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_contactCapacity'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_contactCapacity = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_jointCapacity of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_get_b2Island_m_jointCapacity
static int tolua_get_b2Island_m_jointCapacity(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_jointCapacity'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_jointCapacity);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_jointCapacity of class  b2Island */
#ifndef TOLUA_DISABLE_tolua_set_b2Island_m_jointCapacity
static int tolua_set_b2Island_m_jointCapacity(lua_State* tolua_S)
{
  b2Island* self = (b2Island*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_jointCapacity'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_jointCapacity = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: step of class  b2SolverData */
#ifndef TOLUA_DISABLE_tolua_get_b2SolverData_step
static int tolua_get_b2SolverData_step(lua_State* tolua_S)
{
  b2SolverData* self = (b2SolverData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'step'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->step,"b2TimeStep");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: step of class  b2SolverData */
#ifndef TOLUA_DISABLE_tolua_set_b2SolverData_step
static int tolua_set_b2SolverData_step(lua_State* tolua_S)
{
  b2SolverData* self = (b2SolverData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'step'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2TimeStep",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->step = *((b2TimeStep*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: positions of class  b2SolverData */
#ifndef TOLUA_DISABLE_tolua_get_b2SolverData_positions_ptr
static int tolua_get_b2SolverData_positions_ptr(lua_State* tolua_S)
{
  b2SolverData* self = (b2SolverData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'positions'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->positions,"b2Position");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: positions of class  b2SolverData */
#ifndef TOLUA_DISABLE_tolua_set_b2SolverData_positions_ptr
static int tolua_set_b2SolverData_positions_ptr(lua_State* tolua_S)
{
  b2SolverData* self = (b2SolverData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'positions'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Position",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->positions = ((b2Position*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: velocities of class  b2SolverData */
#ifndef TOLUA_DISABLE_tolua_get_b2SolverData_velocities_ptr
static int tolua_get_b2SolverData_velocities_ptr(lua_State* tolua_S)
{
  b2SolverData* self = (b2SolverData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'velocities'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->velocities,"b2Velocity");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: velocities of class  b2SolverData */
#ifndef TOLUA_DISABLE_tolua_set_b2SolverData_velocities_ptr
static int tolua_set_b2SolverData_velocities_ptr(lua_State* tolua_S)
{
  b2SolverData* self = (b2SolverData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'velocities'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Velocity",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->velocities = ((b2Velocity*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: linear of class  b2Jacobian */
#ifndef TOLUA_DISABLE_tolua_get_b2Jacobian_linear
static int tolua_get_b2Jacobian_linear(lua_State* tolua_S)
{
  b2Jacobian* self = (b2Jacobian*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'linear'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->linear,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: linear of class  b2Jacobian */
#ifndef TOLUA_DISABLE_tolua_set_b2Jacobian_linear
static int tolua_set_b2Jacobian_linear(lua_State* tolua_S)
{
  b2Jacobian* self = (b2Jacobian*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'linear'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->linear = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: angularA of class  b2Jacobian */
#ifndef TOLUA_DISABLE_tolua_get_b2Jacobian_angularA
static int tolua_get_b2Jacobian_angularA(lua_State* tolua_S)
{
  b2Jacobian* self = (b2Jacobian*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'angularA'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->angularA);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: angularA of class  b2Jacobian */
#ifndef TOLUA_DISABLE_tolua_set_b2Jacobian_angularA
static int tolua_set_b2Jacobian_angularA(lua_State* tolua_S)
{
  b2Jacobian* self = (b2Jacobian*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'angularA'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->angularA = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: angularB of class  b2Jacobian */
#ifndef TOLUA_DISABLE_tolua_get_b2Jacobian_angularB
static int tolua_get_b2Jacobian_angularB(lua_State* tolua_S)
{
  b2Jacobian* self = (b2Jacobian*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'angularB'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->angularB);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: angularB of class  b2Jacobian */
#ifndef TOLUA_DISABLE_tolua_set_b2Jacobian_angularB
static int tolua_set_b2Jacobian_angularB(lua_State* tolua_S)
{
  b2Jacobian* self = (b2Jacobian*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'angularB'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->angularB = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2JointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2JointDef_new00
static int tolua_LuaBox2D_b2JointDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2JointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2JointDef* tolua_ret = (b2JointDef*)  Mtolua_new((b2JointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2JointDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2JointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2JointDef_new00_local
static int tolua_LuaBox2D_b2JointDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2JointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2JointDef* tolua_ret = (b2JointDef*)  Mtolua_new((b2JointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2JointDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: type of class  b2JointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2JointDef_type
static int tolua_get_b2JointDef_type(lua_State* tolua_S)
{
  b2JointDef* self = (b2JointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: type of class  b2JointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2JointDef_type
static int tolua_set_b2JointDef_type(lua_State* tolua_S)
{
  b2JointDef* self = (b2JointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->type = ((b2JointType) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: userData of class  b2JointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2JointDef_userData
static int tolua_get_b2JointDef_userData(lua_State* tolua_S)
{
  b2JointDef* self = (b2JointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'userData'",NULL);
#endif
  tolua_pushuserdata(tolua_S,(void*)self->userData);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: userData of class  b2JointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2JointDef_userData
static int tolua_set_b2JointDef_userData(lua_State* tolua_S)
{
  b2JointDef* self = (b2JointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'userData'",NULL);
  if (!tolua_isuserdata(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->userData = ((void*)  tolua_touserdata(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: bodyA of class  b2JointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2JointDef_bodyA_ptr
static int tolua_get_b2JointDef_bodyA_ptr(lua_State* tolua_S)
{
  b2JointDef* self = (b2JointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bodyA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->bodyA,"b2Body");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: bodyA of class  b2JointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2JointDef_bodyA_ptr
static int tolua_set_b2JointDef_bodyA_ptr(lua_State* tolua_S)
{
  b2JointDef* self = (b2JointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bodyA'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Body",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->bodyA = ((b2Body*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: bodyB of class  b2JointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2JointDef_bodyB_ptr
static int tolua_get_b2JointDef_bodyB_ptr(lua_State* tolua_S)
{
  b2JointDef* self = (b2JointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bodyB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->bodyB,"b2Body");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: bodyB of class  b2JointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2JointDef_bodyB_ptr
static int tolua_set_b2JointDef_bodyB_ptr(lua_State* tolua_S)
{
  b2JointDef* self = (b2JointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bodyB'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Body",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->bodyB = ((b2Body*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: collideConnected of class  b2JointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2JointDef_collideConnected
static int tolua_get_b2JointDef_collideConnected(lua_State* tolua_S)
{
  b2JointDef* self = (b2JointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'collideConnected'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->collideConnected);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: collideConnected of class  b2JointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2JointDef_collideConnected
static int tolua_set_b2JointDef_collideConnected(lua_State* tolua_S)
{
  b2JointDef* self = (b2JointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'collideConnected'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->collideConnected = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec2_new00
static int tolua_LuaBox2D_b2Vec2_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Vec2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Vec2* tolua_ret = (b2Vec2*)  Mtolua_new((b2Vec2)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec2_new00_local
static int tolua_LuaBox2D_b2Vec2_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Vec2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Vec2* tolua_ret = (b2Vec2*)  Mtolua_new((b2Vec2)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec2_new01
static int tolua_LuaBox2D_b2Vec2_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Vec2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float32 x = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 y = ((float32)  tolua_tonumber(tolua_S,3,0));
  {
   b2Vec2* tolua_ret = (b2Vec2*)  Mtolua_new((b2Vec2)(x,y));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Vec2");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Vec2_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec2_new01_local
static int tolua_LuaBox2D_b2Vec2_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Vec2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float32 x = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 y = ((float32)  tolua_tonumber(tolua_S,3,0));
  {
   b2Vec2* tolua_ret = (b2Vec2*)  Mtolua_new((b2Vec2)(x,y));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Vec2_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetZero of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec2_SetZero00
static int tolua_LuaBox2D_b2Vec2_SetZero00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Vec2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Vec2* self = (b2Vec2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetZero'", NULL);
#endif
  {
   self->SetZero();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetZero'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec2_Set00
static int tolua_LuaBox2D_b2Vec2_Set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Vec2",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Vec2* self = (b2Vec2*)  tolua_tousertype(tolua_S,1,0);
  float32 x_ = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 y_ = ((float32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set'", NULL);
#endif
  {
   self->Set(x_,y_);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Length of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec2_Length00
static int tolua_LuaBox2D_b2Vec2_Length00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Vec2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Vec2* self = (b2Vec2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Length'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->Length();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Length'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LengthSquared of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec2_LengthSquared00
static int tolua_LuaBox2D_b2Vec2_LengthSquared00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Vec2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Vec2* self = (b2Vec2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LengthSquared'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->LengthSquared();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LengthSquared'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Normalize of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec2_Normalize00
static int tolua_LuaBox2D_b2Vec2_Normalize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Vec2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Vec2* self = (b2Vec2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Normalize'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->Normalize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Normalize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsValid of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec2_IsValid00
static int tolua_LuaBox2D_b2Vec2_IsValid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Vec2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Vec2* self = (b2Vec2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsValid'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsValid();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsValid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Skew of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec2_Skew00
static int tolua_LuaBox2D_b2Vec2_Skew00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Vec2",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Vec2* self = (b2Vec2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Skew'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->Skew();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Skew'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: x of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_get_b2Vec2_x
static int tolua_get_b2Vec2_x(lua_State* tolua_S)
{
  b2Vec2* self = (b2Vec2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: x of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_set_b2Vec2_x
static int tolua_set_b2Vec2_x(lua_State* tolua_S)
{
  b2Vec2* self = (b2Vec2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->x = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: y of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_get_b2Vec2_y
static int tolua_get_b2Vec2_y(lua_State* tolua_S)
{
  b2Vec2* self = (b2Vec2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: y of class  b2Vec2 */
#ifndef TOLUA_DISABLE_tolua_set_b2Vec2_y
static int tolua_set_b2Vec2_y(lua_State* tolua_S)
{
  b2Vec2* self = (b2Vec2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->y = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Vec3 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec3_new00
static int tolua_LuaBox2D_b2Vec3_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Vec3",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Vec3* tolua_ret = (b2Vec3*)  Mtolua_new((b2Vec3)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Vec3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Vec3 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec3_new00_local
static int tolua_LuaBox2D_b2Vec3_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Vec3",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Vec3* tolua_ret = (b2Vec3*)  Mtolua_new((b2Vec3)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Vec3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Vec3 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec3_new01
static int tolua_LuaBox2D_b2Vec3_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Vec3",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float32 x = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 y = ((float32)  tolua_tonumber(tolua_S,3,0));
  float32 z = ((float32)  tolua_tonumber(tolua_S,4,0));
  {
   b2Vec3* tolua_ret = (b2Vec3*)  Mtolua_new((b2Vec3)(x,y,z));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Vec3");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Vec3_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Vec3 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec3_new01_local
static int tolua_LuaBox2D_b2Vec3_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Vec3",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float32 x = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 y = ((float32)  tolua_tonumber(tolua_S,3,0));
  float32 z = ((float32)  tolua_tonumber(tolua_S,4,0));
  {
   b2Vec3* tolua_ret = (b2Vec3*)  Mtolua_new((b2Vec3)(x,y,z));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Vec3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Vec3_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetZero of class  b2Vec3 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec3_SetZero00
static int tolua_LuaBox2D_b2Vec3_SetZero00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Vec3",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Vec3* self = (b2Vec3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetZero'", NULL);
#endif
  {
   self->SetZero();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetZero'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set of class  b2Vec3 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Vec3_Set00
static int tolua_LuaBox2D_b2Vec3_Set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Vec3",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Vec3* self = (b2Vec3*)  tolua_tousertype(tolua_S,1,0);
  float32 x_ = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 y_ = ((float32)  tolua_tonumber(tolua_S,3,0));
  float32 z_ = ((float32)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set'", NULL);
#endif
  {
   self->Set(x_,y_,z_);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: x of class  b2Vec3 */
#ifndef TOLUA_DISABLE_tolua_get_b2Vec3_x
static int tolua_get_b2Vec3_x(lua_State* tolua_S)
{
  b2Vec3* self = (b2Vec3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: x of class  b2Vec3 */
#ifndef TOLUA_DISABLE_tolua_set_b2Vec3_x
static int tolua_set_b2Vec3_x(lua_State* tolua_S)
{
  b2Vec3* self = (b2Vec3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->x = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: y of class  b2Vec3 */
#ifndef TOLUA_DISABLE_tolua_get_b2Vec3_y
static int tolua_get_b2Vec3_y(lua_State* tolua_S)
{
  b2Vec3* self = (b2Vec3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: y of class  b2Vec3 */
#ifndef TOLUA_DISABLE_tolua_set_b2Vec3_y
static int tolua_set_b2Vec3_y(lua_State* tolua_S)
{
  b2Vec3* self = (b2Vec3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->y = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: z of class  b2Vec3 */
#ifndef TOLUA_DISABLE_tolua_get_b2Vec3_z
static int tolua_get_b2Vec3_z(lua_State* tolua_S)
{
  b2Vec3* self = (b2Vec3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->z);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: z of class  b2Vec3 */
#ifndef TOLUA_DISABLE_tolua_set_b2Vec3_z
static int tolua_set_b2Vec3_z(lua_State* tolua_S)
{
  b2Vec3* self = (b2Vec3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->z = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat22_new00
static int tolua_LuaBox2D_b2Mat22_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Mat22",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Mat22* tolua_ret = (b2Mat22*)  Mtolua_new((b2Mat22)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Mat22");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat22_new00_local
static int tolua_LuaBox2D_b2Mat22_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Mat22",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Mat22* tolua_ret = (b2Mat22*)  Mtolua_new((b2Mat22)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Mat22");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat22_new01
static int tolua_LuaBox2D_b2Mat22_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Mat22",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const b2Vec2* c1 = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* c2 = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
  {
   b2Mat22* tolua_ret = (b2Mat22*)  Mtolua_new((b2Mat22)(*c1,*c2));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Mat22");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Mat22_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat22_new01_local
static int tolua_LuaBox2D_b2Mat22_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Mat22",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const b2Vec2* c1 = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* c2 = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
  {
   b2Mat22* tolua_ret = (b2Mat22*)  Mtolua_new((b2Mat22)(*c1,*c2));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Mat22");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Mat22_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat22_new02
static int tolua_LuaBox2D_b2Mat22_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Mat22",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float32 a11 = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 a12 = ((float32)  tolua_tonumber(tolua_S,3,0));
  float32 a21 = ((float32)  tolua_tonumber(tolua_S,4,0));
  float32 a22 = ((float32)  tolua_tonumber(tolua_S,5,0));
  {
   b2Mat22* tolua_ret = (b2Mat22*)  Mtolua_new((b2Mat22)(a11,a12,a21,a22));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Mat22");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Mat22_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat22_new02_local
static int tolua_LuaBox2D_b2Mat22_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Mat22",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float32 a11 = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 a12 = ((float32)  tolua_tonumber(tolua_S,3,0));
  float32 a21 = ((float32)  tolua_tonumber(tolua_S,4,0));
  float32 a22 = ((float32)  tolua_tonumber(tolua_S,5,0));
  {
   b2Mat22* tolua_ret = (b2Mat22*)  Mtolua_new((b2Mat22)(a11,a12,a21,a22));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Mat22");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Mat22_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat22_Set00
static int tolua_LuaBox2D_b2Mat22_Set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Mat22",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Mat22* self = (b2Mat22*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* c1 = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* c2 = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set'", NULL);
#endif
  {
   self->Set(*c1,*c2);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetIdentity of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat22_SetIdentity00
static int tolua_LuaBox2D_b2Mat22_SetIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Mat22",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Mat22* self = (b2Mat22*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetIdentity'", NULL);
#endif
  {
   self->SetIdentity();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetZero of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat22_SetZero00
static int tolua_LuaBox2D_b2Mat22_SetZero00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Mat22",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Mat22* self = (b2Mat22*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetZero'", NULL);
#endif
  {
   self->SetZero();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetZero'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetInverse of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat22_GetInverse00
static int tolua_LuaBox2D_b2Mat22_GetInverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Mat22",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Mat22* self = (b2Mat22*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetInverse'", NULL);
#endif
  {
   b2Mat22 tolua_ret = (b2Mat22)  self->GetInverse();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Mat22)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Mat22");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Mat22));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Mat22");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetInverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Solve of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat22_Solve00
static int tolua_LuaBox2D_b2Mat22_Solve00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Mat22",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Mat22* self = (b2Mat22*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* b = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Solve'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->Solve(*b);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Solve'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ex of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_get_b2Mat22_ex
static int tolua_get_b2Mat22_ex(lua_State* tolua_S)
{
  b2Mat22* self = (b2Mat22*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ex'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->ex,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ex of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_set_b2Mat22_ex
static int tolua_set_b2Mat22_ex(lua_State* tolua_S)
{
  b2Mat22* self = (b2Mat22*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ex'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ex = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ey of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_get_b2Mat22_ey
static int tolua_get_b2Mat22_ey(lua_State* tolua_S)
{
  b2Mat22* self = (b2Mat22*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ey'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->ey,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ey of class  b2Mat22 */
#ifndef TOLUA_DISABLE_tolua_set_b2Mat22_ey
static int tolua_set_b2Mat22_ey(lua_State* tolua_S)
{
  b2Mat22* self = (b2Mat22*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ey'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ey = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat33_new00
static int tolua_LuaBox2D_b2Mat33_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Mat33",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Mat33* tolua_ret = (b2Mat33*)  Mtolua_new((b2Mat33)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Mat33");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat33_new00_local
static int tolua_LuaBox2D_b2Mat33_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Mat33",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Mat33* tolua_ret = (b2Mat33*)  Mtolua_new((b2Mat33)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Mat33");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat33_new01
static int tolua_LuaBox2D_b2Mat33_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Mat33",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const b2Vec3* c1 = ((const b2Vec3*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec3* c2 = ((const b2Vec3*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec3* c3 = ((const b2Vec3*)  tolua_tousertype(tolua_S,4,0));
  {
   b2Mat33* tolua_ret = (b2Mat33*)  Mtolua_new((b2Mat33)(*c1,*c2,*c3));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Mat33");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Mat33_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat33_new01_local
static int tolua_LuaBox2D_b2Mat33_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Mat33",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec3",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const b2Vec3* c1 = ((const b2Vec3*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec3* c2 = ((const b2Vec3*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec3* c3 = ((const b2Vec3*)  tolua_tousertype(tolua_S,4,0));
  {
   b2Mat33* tolua_ret = (b2Mat33*)  Mtolua_new((b2Mat33)(*c1,*c2,*c3));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Mat33");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Mat33_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetZero of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat33_SetZero00
static int tolua_LuaBox2D_b2Mat33_SetZero00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Mat33",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Mat33* self = (b2Mat33*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetZero'", NULL);
#endif
  {
   self->SetZero();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetZero'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Solve33 of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat33_Solve3300
static int tolua_LuaBox2D_b2Mat33_Solve3300(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Mat33",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Mat33* self = (b2Mat33*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec3* b = ((const b2Vec3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Solve33'", NULL);
#endif
  {
   b2Vec3 tolua_ret = (b2Vec3)  self->Solve33(*b);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec3));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Solve33'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Solve22 of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat33_Solve2200
static int tolua_LuaBox2D_b2Mat33_Solve2200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Mat33",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Mat33* self = (b2Mat33*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* b = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Solve22'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->Solve22(*b);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Solve22'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetInverse22 of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat33_GetInverse2200
static int tolua_LuaBox2D_b2Mat33_GetInverse2200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Mat33",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Mat33",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Mat33* self = (b2Mat33*)  tolua_tousertype(tolua_S,1,0);
  b2Mat33* M = ((b2Mat33*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetInverse22'", NULL);
#endif
  {
   self->GetInverse22(M);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetInverse22'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSymInverse33 of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Mat33_GetSymInverse3300
static int tolua_LuaBox2D_b2Mat33_GetSymInverse3300(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Mat33",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Mat33",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Mat33* self = (b2Mat33*)  tolua_tousertype(tolua_S,1,0);
  b2Mat33* M = ((b2Mat33*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSymInverse33'", NULL);
#endif
  {
   self->GetSymInverse33(M);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSymInverse33'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ex of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_get_b2Mat33_ex
static int tolua_get_b2Mat33_ex(lua_State* tolua_S)
{
  b2Mat33* self = (b2Mat33*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ex'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->ex,"b2Vec3");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ex of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_set_b2Mat33_ex
static int tolua_set_b2Mat33_ex(lua_State* tolua_S)
{
  b2Mat33* self = (b2Mat33*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ex'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec3",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ex = *((b2Vec3*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ey of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_get_b2Mat33_ey
static int tolua_get_b2Mat33_ey(lua_State* tolua_S)
{
  b2Mat33* self = (b2Mat33*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ey'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->ey,"b2Vec3");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ey of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_set_b2Mat33_ey
static int tolua_set_b2Mat33_ey(lua_State* tolua_S)
{
  b2Mat33* self = (b2Mat33*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ey'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec3",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ey = *((b2Vec3*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ez of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_get_b2Mat33_ez
static int tolua_get_b2Mat33_ez(lua_State* tolua_S)
{
  b2Mat33* self = (b2Mat33*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ez'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->ez,"b2Vec3");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ez of class  b2Mat33 */
#ifndef TOLUA_DISABLE_tolua_set_b2Mat33_ez
static int tolua_set_b2Mat33_ez(lua_State* tolua_S)
{
  b2Mat33* self = (b2Mat33*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ez'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec3",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ez = *((b2Vec3*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTransform of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Sweep_GetTransform00
static int tolua_LuaBox2D_b2Sweep_GetTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Sweep",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Transform",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
  b2Transform* xfb = ((b2Transform*)  tolua_tousertype(tolua_S,2,0));
  float32 beta = ((float32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTransform'", NULL);
#endif
  {
   self->GetTransform(xfb,beta);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Advance of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Sweep_Advance00
static int tolua_LuaBox2D_b2Sweep_Advance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Sweep",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
  float32 alpha = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Advance'", NULL);
#endif
  {
   self->Advance(alpha);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Advance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Normalize of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Sweep_Normalize00
static int tolua_LuaBox2D_b2Sweep_Normalize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Sweep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Normalize'", NULL);
#endif
  {
   self->Normalize();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Normalize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localCenter of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_get_b2Sweep_localCenter
static int tolua_get_b2Sweep_localCenter(lua_State* tolua_S)
{
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localCenter'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localCenter,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localCenter of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_set_b2Sweep_localCenter
static int tolua_set_b2Sweep_localCenter(lua_State* tolua_S)
{
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localCenter'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localCenter = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: c0 of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_get_b2Sweep_c0
static int tolua_get_b2Sweep_c0(lua_State* tolua_S)
{
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'c0'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->c0,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: c0 of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_set_b2Sweep_c0
static int tolua_set_b2Sweep_c0(lua_State* tolua_S)
{
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'c0'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->c0 = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: c of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_get_b2Sweep_c
static int tolua_get_b2Sweep_c(lua_State* tolua_S)
{
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'c'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->c,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: c of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_set_b2Sweep_c
static int tolua_set_b2Sweep_c(lua_State* tolua_S)
{
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'c'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->c = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: a0 of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_get_b2Sweep_a0
static int tolua_get_b2Sweep_a0(lua_State* tolua_S)
{
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a0'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->a0);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: a0 of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_set_b2Sweep_a0
static int tolua_set_b2Sweep_a0(lua_State* tolua_S)
{
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a0'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->a0 = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: a of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_get_b2Sweep_a
static int tolua_get_b2Sweep_a(lua_State* tolua_S)
{
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->a);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: a of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_set_b2Sweep_a
static int tolua_set_b2Sweep_a(lua_State* tolua_S)
{
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->a = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: alpha0 of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_get_b2Sweep_alpha0
static int tolua_get_b2Sweep_alpha0(lua_State* tolua_S)
{
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'alpha0'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->alpha0);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: alpha0 of class  b2Sweep */
#ifndef TOLUA_DISABLE_tolua_set_b2Sweep_alpha0
static int tolua_set_b2Sweep_alpha0(lua_State* tolua_S)
{
  b2Sweep* self = (b2Sweep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'alpha0'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->alpha0 = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Transform */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Transform_new00
static int tolua_LuaBox2D_b2Transform_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Transform* tolua_ret = (b2Transform*)  Mtolua_new((b2Transform)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Transform");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Transform */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Transform_new00_local
static int tolua_LuaBox2D_b2Transform_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Transform* tolua_ret = (b2Transform*)  Mtolua_new((b2Transform)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Transform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Transform */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Transform_new01
static int tolua_LuaBox2D_b2Transform_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Rot",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const b2Vec2* position = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  const b2Rot* rotation = ((const b2Rot*)  tolua_tousertype(tolua_S,3,0));
  {
   b2Transform* tolua_ret = (b2Transform*)  Mtolua_new((b2Transform)(*position,*rotation));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Transform");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Transform_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Transform */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Transform_new01_local
static int tolua_LuaBox2D_b2Transform_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Rot",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const b2Vec2* position = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  const b2Rot* rotation = ((const b2Rot*)  tolua_tousertype(tolua_S,3,0));
  {
   b2Transform* tolua_ret = (b2Transform*)  Mtolua_new((b2Transform)(*position,*rotation));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Transform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Transform_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetIdentity of class  b2Transform */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Transform_SetIdentity00
static int tolua_LuaBox2D_b2Transform_SetIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Transform* self = (b2Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetIdentity'", NULL);
#endif
  {
   self->SetIdentity();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set of class  b2Transform */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Transform_Set00
static int tolua_LuaBox2D_b2Transform_Set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Transform* self = (b2Transform*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* position = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
  float32 angle = ((float32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set'", NULL);
#endif
  {
   self->Set(*position,angle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: p of class  b2Transform */
#ifndef TOLUA_DISABLE_tolua_get_b2Transform_p
static int tolua_get_b2Transform_p(lua_State* tolua_S)
{
  b2Transform* self = (b2Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'p'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->p,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: p of class  b2Transform */
#ifndef TOLUA_DISABLE_tolua_set_b2Transform_p
static int tolua_set_b2Transform_p(lua_State* tolua_S)
{
  b2Transform* self = (b2Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'p'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->p = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: q of class  b2Transform */
#ifndef TOLUA_DISABLE_tolua_get_b2Transform_q
static int tolua_get_b2Transform_q(lua_State* tolua_S)
{
  b2Transform* self = (b2Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'q'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->q,"b2Rot");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: q of class  b2Transform */
#ifndef TOLUA_DISABLE_tolua_set_b2Transform_q
static int tolua_set_b2Transform_q(lua_State* tolua_S)
{
  b2Transform* self = (b2Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'q'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Rot",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->q = *((b2Rot*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Rot */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rot_new00
static int tolua_LuaBox2D_b2Rot_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Rot",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Rot* tolua_ret = (b2Rot*)  Mtolua_new((b2Rot)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Rot");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Rot */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rot_new00_local
static int tolua_LuaBox2D_b2Rot_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Rot",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Rot* tolua_ret = (b2Rot*)  Mtolua_new((b2Rot)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Rot");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Rot */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rot_new01
static int tolua_LuaBox2D_b2Rot_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Rot",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float32 angle = ((float32)  tolua_tonumber(tolua_S,2,0));
  {
   b2Rot* tolua_ret = (b2Rot*)  Mtolua_new((b2Rot)(angle));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Rot");
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Rot_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Rot */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rot_new01_local
static int tolua_LuaBox2D_b2Rot_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Rot",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float32 angle = ((float32)  tolua_tonumber(tolua_S,2,0));
  {
   b2Rot* tolua_ret = (b2Rot*)  Mtolua_new((b2Rot)(angle));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Rot");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_LuaBox2D_b2Rot_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Set of class  b2Rot */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rot_Set00
static int tolua_LuaBox2D_b2Rot_Set00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Rot",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Rot* self = (b2Rot*)  tolua_tousertype(tolua_S,1,0);
  float32 angle = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Set'", NULL);
#endif
  {
   self->Set(angle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Set'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetIdentity of class  b2Rot */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rot_SetIdentity00
static int tolua_LuaBox2D_b2Rot_SetIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Rot",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Rot* self = (b2Rot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetIdentity'", NULL);
#endif
  {
   self->SetIdentity();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAngle of class  b2Rot */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rot_GetAngle00
static int tolua_LuaBox2D_b2Rot_GetAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Rot",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Rot* self = (b2Rot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAngle'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetAngle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetXAxis of class  b2Rot */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rot_GetXAxis00
static int tolua_LuaBox2D_b2Rot_GetXAxis00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Rot",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Rot* self = (b2Rot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetXAxis'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetXAxis();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetXAxis'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetYAxis of class  b2Rot */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rot_GetYAxis00
static int tolua_LuaBox2D_b2Rot_GetYAxis00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Rot",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Rot* self = (b2Rot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetYAxis'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetYAxis();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetYAxis'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: s of class  b2Rot */
#ifndef TOLUA_DISABLE_tolua_get_b2Rot_s
static int tolua_get_b2Rot_s(lua_State* tolua_S)
{
  b2Rot* self = (b2Rot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 's'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->s);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: s of class  b2Rot */
#ifndef TOLUA_DISABLE_tolua_set_b2Rot_s
static int tolua_set_b2Rot_s(lua_State* tolua_S)
{
  b2Rot* self = (b2Rot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 's'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->s = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: c of class  b2Rot */
#ifndef TOLUA_DISABLE_tolua_get_b2Rot_c
static int tolua_get_b2Rot_c(lua_State* tolua_S)
{
  b2Rot* self = (b2Rot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'c'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->c);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: c of class  b2Rot */
#ifndef TOLUA_DISABLE_tolua_set_b2Rot_c
static int tolua_set_b2Rot_c(lua_State* tolua_S)
{
  b2Rot* self = (b2Rot*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'c'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->c = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2MouseJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJointDef_new00
static int tolua_LuaBox2D_b2MouseJointDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2MouseJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2MouseJointDef* tolua_ret = (b2MouseJointDef*)  Mtolua_new((b2MouseJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2MouseJointDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2MouseJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJointDef_new00_local
static int tolua_LuaBox2D_b2MouseJointDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2MouseJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2MouseJointDef* tolua_ret = (b2MouseJointDef*)  Mtolua_new((b2MouseJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2MouseJointDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: target of class  b2MouseJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2MouseJointDef_target
static int tolua_get_b2MouseJointDef_target(lua_State* tolua_S)
{
  b2MouseJointDef* self = (b2MouseJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'target'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->target,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: target of class  b2MouseJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2MouseJointDef_target
static int tolua_set_b2MouseJointDef_target(lua_State* tolua_S)
{
  b2MouseJointDef* self = (b2MouseJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'target'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->target = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: maxForce of class  b2MouseJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2MouseJointDef_maxForce
static int tolua_get_b2MouseJointDef_maxForce(lua_State* tolua_S)
{
  b2MouseJointDef* self = (b2MouseJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxForce'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->maxForce);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: maxForce of class  b2MouseJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2MouseJointDef_maxForce
static int tolua_set_b2MouseJointDef_maxForce(lua_State* tolua_S)
{
  b2MouseJointDef* self = (b2MouseJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxForce'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->maxForce = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: frequencyHz of class  b2MouseJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2MouseJointDef_frequencyHz
static int tolua_get_b2MouseJointDef_frequencyHz(lua_State* tolua_S)
{
  b2MouseJointDef* self = (b2MouseJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'frequencyHz'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->frequencyHz);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: frequencyHz of class  b2MouseJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2MouseJointDef_frequencyHz
static int tolua_set_b2MouseJointDef_frequencyHz(lua_State* tolua_S)
{
  b2MouseJointDef* self = (b2MouseJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'frequencyHz'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->frequencyHz = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: dampingRatio of class  b2MouseJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2MouseJointDef_dampingRatio
static int tolua_get_b2MouseJointDef_dampingRatio(lua_State* tolua_S)
{
  b2MouseJointDef* self = (b2MouseJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dampingRatio'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->dampingRatio);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: dampingRatio of class  b2MouseJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2MouseJointDef_dampingRatio
static int tolua_set_b2MouseJointDef_dampingRatio(lua_State* tolua_S)
{
  b2MouseJointDef* self = (b2MouseJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dampingRatio'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->dampingRatio = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorA of class  b2MouseJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJoint_GetAnchorA00
static int tolua_LuaBox2D_b2MouseJoint_GetAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2MouseJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2MouseJoint* self = (b2MouseJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorA'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorA();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorB of class  b2MouseJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJoint_GetAnchorB00
static int tolua_LuaBox2D_b2MouseJoint_GetAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2MouseJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2MouseJoint* self = (b2MouseJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorB'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorB();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionForce of class  b2MouseJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJoint_GetReactionForce00
static int tolua_LuaBox2D_b2MouseJoint_GetReactionForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2MouseJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2MouseJoint* self = (b2MouseJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionForce'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetReactionForce(inv_dt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionTorque of class  b2MouseJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJoint_GetReactionTorque00
static int tolua_LuaBox2D_b2MouseJoint_GetReactionTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2MouseJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2MouseJoint* self = (b2MouseJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionTorque'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetReactionTorque(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTarget of class  b2MouseJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJoint_SetTarget00
static int tolua_LuaBox2D_b2MouseJoint_SetTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2MouseJoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2MouseJoint* self = (b2MouseJoint*)  tolua_tousertype(tolua_S,1,0);
  const b2Vec2* target = ((const b2Vec2*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTarget'", NULL);
#endif
  {
   self->SetTarget(*target);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTarget of class  b2MouseJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJoint_GetTarget00
static int tolua_LuaBox2D_b2MouseJoint_GetTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2MouseJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2MouseJoint* self = (b2MouseJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTarget'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetTarget();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaxForce of class  b2MouseJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJoint_SetMaxForce00
static int tolua_LuaBox2D_b2MouseJoint_SetMaxForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2MouseJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2MouseJoint* self = (b2MouseJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 force = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaxForce'", NULL);
#endif
  {
   self->SetMaxForce(force);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaxForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxForce of class  b2MouseJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJoint_GetMaxForce00
static int tolua_LuaBox2D_b2MouseJoint_GetMaxForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2MouseJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2MouseJoint* self = (b2MouseJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxForce'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetMaxForce();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFrequency of class  b2MouseJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJoint_SetFrequency00
static int tolua_LuaBox2D_b2MouseJoint_SetFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2MouseJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2MouseJoint* self = (b2MouseJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 hz = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFrequency'", NULL);
#endif
  {
   self->SetFrequency(hz);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFrequency of class  b2MouseJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJoint_GetFrequency00
static int tolua_LuaBox2D_b2MouseJoint_GetFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2MouseJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2MouseJoint* self = (b2MouseJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFrequency'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetFrequency();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDampingRatio of class  b2MouseJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJoint_SetDampingRatio00
static int tolua_LuaBox2D_b2MouseJoint_SetDampingRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2MouseJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2MouseJoint* self = (b2MouseJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 ratio = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDampingRatio'", NULL);
#endif
  {
   self->SetDampingRatio(ratio);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDampingRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDampingRatio of class  b2MouseJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJoint_GetDampingRatio00
static int tolua_LuaBox2D_b2MouseJoint_GetDampingRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2MouseJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2MouseJoint* self = (b2MouseJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDampingRatio'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetDampingRatio();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDampingRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2MouseJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2MouseJoint_Dump00
static int tolua_LuaBox2D_b2MouseJoint_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2MouseJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2MouseJoint* self = (b2MouseJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  b2PolygonAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonAndCircleContact_Create00
static int tolua_LuaBox2D_b2PolygonAndCircleContact_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PolygonAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  int32 indexA = ((int32)  tolua_tonumber(tolua_S,3,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,4,0));
  int32 indexB = ((int32)  tolua_tonumber(tolua_S,5,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,6,0));
  {
   b2Contact* tolua_ret = (b2Contact*)  b2PolygonAndCircleContact::Create(fixtureA,indexA,fixtureB,indexB,allocator);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Contact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Destroy of class  b2PolygonAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonAndCircleContact_Destroy00
static int tolua_LuaBox2D_b2PolygonAndCircleContact_Destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PolygonAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* contact = ((b2Contact*)  tolua_tousertype(tolua_S,2,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,3,0));
  {
   b2PolygonAndCircleContact::Destroy(contact,allocator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2PolygonAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonAndCircleContact_new00
static int tolua_LuaBox2D_b2PolygonAndCircleContact_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PolygonAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,3,0));
  {
   b2PolygonAndCircleContact* tolua_ret = (b2PolygonAndCircleContact*)  Mtolua_new((b2PolygonAndCircleContact)(fixtureA,fixtureB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2PolygonAndCircleContact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2PolygonAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonAndCircleContact_new00_local
static int tolua_LuaBox2D_b2PolygonAndCircleContact_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PolygonAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,3,0));
  {
   b2PolygonAndCircleContact* tolua_ret = (b2PolygonAndCircleContact*)  Mtolua_new((b2PolygonAndCircleContact)(fixtureA,fixtureB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2PolygonAndCircleContact");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2PolygonAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonAndCircleContact_delete00
static int tolua_LuaBox2D_b2PolygonAndCircleContact_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonAndCircleContact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PolygonAndCircleContact* self = (b2PolygonAndCircleContact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Evaluate of class  b2PolygonAndCircleContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonAndCircleContact_Evaluate00
static int tolua_LuaBox2D_b2PolygonAndCircleContact_Evaluate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonAndCircleContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Manifold",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PolygonAndCircleContact* self = (b2PolygonAndCircleContact*)  tolua_tousertype(tolua_S,1,0);
  b2Manifold* manifold = ((b2Manifold*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Evaluate'", NULL);
#endif
  {
   self->Evaluate(manifold,*xfA,*xfB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Evaluate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  b2PolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonContact_Create00
static int tolua_LuaBox2D_b2PolygonContact_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"b2Fixture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,6,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  int32 indexA = ((int32)  tolua_tonumber(tolua_S,3,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,4,0));
  int32 indexB = ((int32)  tolua_tonumber(tolua_S,5,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,6,0));
  {
   b2Contact* tolua_ret = (b2Contact*)  b2PolygonContact::Create(fixtureA,indexA,fixtureB,indexB,allocator);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Contact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Destroy of class  b2PolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonContact_Destroy00
static int tolua_LuaBox2D_b2PolygonContact_Destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Contact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2BlockAllocator",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Contact* contact = ((b2Contact*)  tolua_tousertype(tolua_S,2,0));
  b2BlockAllocator* allocator = ((b2BlockAllocator*)  tolua_tousertype(tolua_S,3,0));
  {
   b2PolygonContact::Destroy(contact,allocator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2PolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonContact_new00
static int tolua_LuaBox2D_b2PolygonContact_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,3,0));
  {
   b2PolygonContact* tolua_ret = (b2PolygonContact*)  Mtolua_new((b2PolygonContact)(fixtureA,fixtureB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2PolygonContact");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2PolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonContact_new00_local
static int tolua_LuaBox2D_b2PolygonContact_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Fixture* fixtureA = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  b2Fixture* fixtureB = ((b2Fixture*)  tolua_tousertype(tolua_S,3,0));
  {
   b2PolygonContact* tolua_ret = (b2PolygonContact*)  Mtolua_new((b2PolygonContact)(fixtureA,fixtureB));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2PolygonContact");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2PolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonContact_delete00
static int tolua_LuaBox2D_b2PolygonContact_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonContact",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PolygonContact* self = (b2PolygonContact*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Evaluate of class  b2PolygonContact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PolygonContact_Evaluate00
static int tolua_LuaBox2D_b2PolygonContact_Evaluate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PolygonContact",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Manifold",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Transform",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PolygonContact* self = (b2PolygonContact*)  tolua_tousertype(tolua_S,1,0);
  b2Manifold* manifold = ((b2Manifold*)  tolua_tousertype(tolua_S,2,0));
  const b2Transform* xfA = ((const b2Transform*)  tolua_tousertype(tolua_S,3,0));
  const b2Transform* xfB = ((const b2Transform*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Evaluate'", NULL);
#endif
  {
   self->Evaluate(manifold,*xfA,*xfB);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Evaluate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJointDef_new00
static int tolua_LuaBox2D_b2PrismaticJointDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PrismaticJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2PrismaticJointDef* tolua_ret = (b2PrismaticJointDef*)  Mtolua_new((b2PrismaticJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2PrismaticJointDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJointDef_new00_local
static int tolua_LuaBox2D_b2PrismaticJointDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PrismaticJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2PrismaticJointDef* tolua_ret = (b2PrismaticJointDef*)  Mtolua_new((b2PrismaticJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2PrismaticJointDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initialize of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJointDef_Initialize00
static int tolua_LuaBox2D_b2PrismaticJointDef_Initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJointDef",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Body",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
  b2Body* bodyA = ((b2Body*)  tolua_tousertype(tolua_S,2,0));
  b2Body* bodyB = ((b2Body*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec2* anchor = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
  const b2Vec2* axis = ((const b2Vec2*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initialize'", NULL);
#endif
  {
   self->Initialize(bodyA,bodyB,*anchor,*axis);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorA of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PrismaticJointDef_localAnchorA
static int tolua_get_b2PrismaticJointDef_localAnchorA(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorA,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorA of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PrismaticJointDef_localAnchorA
static int tolua_set_b2PrismaticJointDef_localAnchorA(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorA = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorB of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PrismaticJointDef_localAnchorB
static int tolua_get_b2PrismaticJointDef_localAnchorB(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorB,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorB of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PrismaticJointDef_localAnchorB
static int tolua_set_b2PrismaticJointDef_localAnchorB(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorB = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAxisA of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PrismaticJointDef_localAxisA
static int tolua_get_b2PrismaticJointDef_localAxisA(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAxisA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAxisA,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAxisA of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PrismaticJointDef_localAxisA
static int tolua_set_b2PrismaticJointDef_localAxisA(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAxisA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAxisA = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: referenceAngle of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PrismaticJointDef_referenceAngle
static int tolua_get_b2PrismaticJointDef_referenceAngle(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'referenceAngle'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->referenceAngle);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: referenceAngle of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PrismaticJointDef_referenceAngle
static int tolua_set_b2PrismaticJointDef_referenceAngle(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'referenceAngle'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->referenceAngle = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: enableLimit of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PrismaticJointDef_enableLimit
static int tolua_get_b2PrismaticJointDef_enableLimit(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'enableLimit'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->enableLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: enableLimit of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PrismaticJointDef_enableLimit
static int tolua_set_b2PrismaticJointDef_enableLimit(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'enableLimit'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->enableLimit = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: lowerTranslation of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PrismaticJointDef_lowerTranslation
static int tolua_get_b2PrismaticJointDef_lowerTranslation(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'lowerTranslation'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->lowerTranslation);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: lowerTranslation of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PrismaticJointDef_lowerTranslation
static int tolua_set_b2PrismaticJointDef_lowerTranslation(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'lowerTranslation'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->lowerTranslation = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: upperTranslation of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PrismaticJointDef_upperTranslation
static int tolua_get_b2PrismaticJointDef_upperTranslation(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'upperTranslation'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->upperTranslation);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: upperTranslation of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PrismaticJointDef_upperTranslation
static int tolua_set_b2PrismaticJointDef_upperTranslation(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'upperTranslation'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->upperTranslation = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: enableMotor of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PrismaticJointDef_enableMotor
static int tolua_get_b2PrismaticJointDef_enableMotor(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'enableMotor'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->enableMotor);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: enableMotor of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PrismaticJointDef_enableMotor
static int tolua_set_b2PrismaticJointDef_enableMotor(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'enableMotor'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->enableMotor = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: maxMotorForce of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PrismaticJointDef_maxMotorForce
static int tolua_get_b2PrismaticJointDef_maxMotorForce(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxMotorForce'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->maxMotorForce);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: maxMotorForce of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PrismaticJointDef_maxMotorForce
static int tolua_set_b2PrismaticJointDef_maxMotorForce(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxMotorForce'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->maxMotorForce = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: motorSpeed of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PrismaticJointDef_motorSpeed
static int tolua_get_b2PrismaticJointDef_motorSpeed(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'motorSpeed'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->motorSpeed);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: motorSpeed of class  b2PrismaticJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PrismaticJointDef_motorSpeed
static int tolua_set_b2PrismaticJointDef_motorSpeed(lua_State* tolua_S)
{
  b2PrismaticJointDef* self = (b2PrismaticJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'motorSpeed'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->motorSpeed = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorA of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetAnchorA00
static int tolua_LuaBox2D_b2PrismaticJoint_GetAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorA'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorA();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorB of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetAnchorB00
static int tolua_LuaBox2D_b2PrismaticJoint_GetAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorB'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorB();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionForce of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetReactionForce00
static int tolua_LuaBox2D_b2PrismaticJoint_GetReactionForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionForce'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetReactionForce(inv_dt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionTorque of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetReactionTorque00
static int tolua_LuaBox2D_b2PrismaticJoint_GetReactionTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionTorque'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetReactionTorque(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorA of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetLocalAnchorA00
static int tolua_LuaBox2D_b2PrismaticJoint_GetLocalAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorA'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorA();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorB of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetLocalAnchorB00
static int tolua_LuaBox2D_b2PrismaticJoint_GetLocalAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2PrismaticJoint* self = (const b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorB'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorB();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAxisA of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetLocalAxisA00
static int tolua_LuaBox2D_b2PrismaticJoint_GetLocalAxisA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2PrismaticJoint* self = (const b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAxisA'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAxisA();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAxisA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReferenceAngle of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetReferenceAngle00
static int tolua_LuaBox2D_b2PrismaticJoint_GetReferenceAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2PrismaticJoint* self = (const b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReferenceAngle'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetReferenceAngle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReferenceAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetJointTranslation of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetJointTranslation00
static int tolua_LuaBox2D_b2PrismaticJoint_GetJointTranslation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetJointTranslation'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetJointTranslation();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetJointTranslation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetJointSpeed of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetJointSpeed00
static int tolua_LuaBox2D_b2PrismaticJoint_GetJointSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetJointSpeed'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetJointSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetJointSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsLimitEnabled of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_IsLimitEnabled00
static int tolua_LuaBox2D_b2PrismaticJoint_IsLimitEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsLimitEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsLimitEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsLimitEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EnableLimit of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_EnableLimit00
static int tolua_LuaBox2D_b2PrismaticJoint_EnableLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EnableLimit'", NULL);
#endif
  {
   self->EnableLimit(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EnableLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLowerLimit of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetLowerLimit00
static int tolua_LuaBox2D_b2PrismaticJoint_GetLowerLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLowerLimit'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetLowerLimit();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLowerLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUpperLimit of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetUpperLimit00
static int tolua_LuaBox2D_b2PrismaticJoint_GetUpperLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUpperLimit'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetUpperLimit();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUpperLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLimits of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_SetLimits00
static int tolua_LuaBox2D_b2PrismaticJoint_SetLimits00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 lower = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 upper = ((float32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLimits'", NULL);
#endif
  {
   self->SetLimits(lower,upper);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLimits'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsMotorEnabled of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_IsMotorEnabled00
static int tolua_LuaBox2D_b2PrismaticJoint_IsMotorEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsMotorEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsMotorEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsMotorEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EnableMotor of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_EnableMotor00
static int tolua_LuaBox2D_b2PrismaticJoint_EnableMotor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EnableMotor'", NULL);
#endif
  {
   self->EnableMotor(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EnableMotor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMotorSpeed of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_SetMotorSpeed00
static int tolua_LuaBox2D_b2PrismaticJoint_SetMotorSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 speed = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMotorSpeed'", NULL);
#endif
  {
   self->SetMotorSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMotorSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMotorSpeed of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetMotorSpeed00
static int tolua_LuaBox2D_b2PrismaticJoint_GetMotorSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMotorSpeed'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetMotorSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMotorSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaxMotorForce of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_SetMaxMotorForce00
static int tolua_LuaBox2D_b2PrismaticJoint_SetMaxMotorForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 force = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaxMotorForce'", NULL);
#endif
  {
   self->SetMaxMotorForce(force);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaxMotorForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxMotorForce of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetMaxMotorForce00
static int tolua_LuaBox2D_b2PrismaticJoint_GetMaxMotorForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2PrismaticJoint* self = (const b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxMotorForce'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetMaxMotorForce();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxMotorForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMotorForce of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_GetMotorForce00
static int tolua_LuaBox2D_b2PrismaticJoint_GetMotorForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMotorForce'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetMotorForce(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMotorForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2PrismaticJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PrismaticJoint_Dump00
static int tolua_LuaBox2D_b2PrismaticJoint_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PrismaticJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PrismaticJoint* self = (b2PrismaticJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PulleyJointDef_new00
static int tolua_LuaBox2D_b2PulleyJointDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PulleyJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2PulleyJointDef* tolua_ret = (b2PulleyJointDef*)  Mtolua_new((b2PulleyJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2PulleyJointDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PulleyJointDef_new00_local
static int tolua_LuaBox2D_b2PulleyJointDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2PulleyJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2PulleyJointDef* tolua_ret = (b2PulleyJointDef*)  Mtolua_new((b2PulleyJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2PulleyJointDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initialize of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PulleyJointDef_Initialize00
static int tolua_LuaBox2D_b2PulleyJointDef_Initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PulleyJointDef",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Body",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,7,&tolua_err) || !tolua_isusertype(tolua_S,7,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
  b2Body* bodyA = ((b2Body*)  tolua_tousertype(tolua_S,2,0));
  b2Body* bodyB = ((b2Body*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec2* groundAnchorA = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
  const b2Vec2* groundAnchorB = ((const b2Vec2*)  tolua_tousertype(tolua_S,5,0));
  const b2Vec2* anchorA = ((const b2Vec2*)  tolua_tousertype(tolua_S,6,0));
  const b2Vec2* anchorB = ((const b2Vec2*)  tolua_tousertype(tolua_S,7,0));
  float32 ratio = ((float32)  tolua_tonumber(tolua_S,8,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initialize'", NULL);
#endif
  {
   self->Initialize(bodyA,bodyB,*groundAnchorA,*groundAnchorB,*anchorA,*anchorB,ratio);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: groundAnchorA of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PulleyJointDef_groundAnchorA
static int tolua_get_b2PulleyJointDef_groundAnchorA(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'groundAnchorA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->groundAnchorA,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: groundAnchorA of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PulleyJointDef_groundAnchorA
static int tolua_set_b2PulleyJointDef_groundAnchorA(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'groundAnchorA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->groundAnchorA = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: groundAnchorB of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PulleyJointDef_groundAnchorB
static int tolua_get_b2PulleyJointDef_groundAnchorB(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'groundAnchorB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->groundAnchorB,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: groundAnchorB of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PulleyJointDef_groundAnchorB
static int tolua_set_b2PulleyJointDef_groundAnchorB(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'groundAnchorB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->groundAnchorB = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorA of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PulleyJointDef_localAnchorA
static int tolua_get_b2PulleyJointDef_localAnchorA(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorA,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorA of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PulleyJointDef_localAnchorA
static int tolua_set_b2PulleyJointDef_localAnchorA(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorA = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorB of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PulleyJointDef_localAnchorB
static int tolua_get_b2PulleyJointDef_localAnchorB(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorB,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorB of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PulleyJointDef_localAnchorB
static int tolua_set_b2PulleyJointDef_localAnchorB(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorB = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: lengthA of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PulleyJointDef_lengthA
static int tolua_get_b2PulleyJointDef_lengthA(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'lengthA'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->lengthA);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: lengthA of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PulleyJointDef_lengthA
static int tolua_set_b2PulleyJointDef_lengthA(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'lengthA'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->lengthA = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: lengthB of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PulleyJointDef_lengthB
static int tolua_get_b2PulleyJointDef_lengthB(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'lengthB'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->lengthB);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: lengthB of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PulleyJointDef_lengthB
static int tolua_set_b2PulleyJointDef_lengthB(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'lengthB'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->lengthB = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ratio of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2PulleyJointDef_ratio
static int tolua_get_b2PulleyJointDef_ratio(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ratio'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ratio);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ratio of class  b2PulleyJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2PulleyJointDef_ratio
static int tolua_set_b2PulleyJointDef_ratio(lua_State* tolua_S)
{
  b2PulleyJointDef* self = (b2PulleyJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ratio'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ratio = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorA of class  b2PulleyJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PulleyJoint_GetAnchorA00
static int tolua_LuaBox2D_b2PulleyJoint_GetAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PulleyJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PulleyJoint* self = (b2PulleyJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorA'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorA();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorB of class  b2PulleyJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PulleyJoint_GetAnchorB00
static int tolua_LuaBox2D_b2PulleyJoint_GetAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PulleyJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PulleyJoint* self = (b2PulleyJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorB'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorB();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionForce of class  b2PulleyJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PulleyJoint_GetReactionForce00
static int tolua_LuaBox2D_b2PulleyJoint_GetReactionForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PulleyJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PulleyJoint* self = (b2PulleyJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionForce'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetReactionForce(inv_dt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionTorque of class  b2PulleyJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PulleyJoint_GetReactionTorque00
static int tolua_LuaBox2D_b2PulleyJoint_GetReactionTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PulleyJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PulleyJoint* self = (b2PulleyJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionTorque'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetReactionTorque(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetGroundAnchorA of class  b2PulleyJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PulleyJoint_GetGroundAnchorA00
static int tolua_LuaBox2D_b2PulleyJoint_GetGroundAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PulleyJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PulleyJoint* self = (b2PulleyJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetGroundAnchorA'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetGroundAnchorA();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetGroundAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetGroundAnchorB of class  b2PulleyJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PulleyJoint_GetGroundAnchorB00
static int tolua_LuaBox2D_b2PulleyJoint_GetGroundAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PulleyJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PulleyJoint* self = (b2PulleyJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetGroundAnchorB'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetGroundAnchorB();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetGroundAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLengthA of class  b2PulleyJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PulleyJoint_GetLengthA00
static int tolua_LuaBox2D_b2PulleyJoint_GetLengthA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PulleyJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PulleyJoint* self = (b2PulleyJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLengthA'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetLengthA();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLengthA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLengthB of class  b2PulleyJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PulleyJoint_GetLengthB00
static int tolua_LuaBox2D_b2PulleyJoint_GetLengthB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PulleyJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PulleyJoint* self = (b2PulleyJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLengthB'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetLengthB();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLengthB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRatio of class  b2PulleyJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PulleyJoint_GetRatio00
static int tolua_LuaBox2D_b2PulleyJoint_GetRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PulleyJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PulleyJoint* self = (b2PulleyJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRatio'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetRatio();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2PulleyJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2PulleyJoint_Dump00
static int tolua_LuaBox2D_b2PulleyJoint_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2PulleyJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2PulleyJoint* self = (b2PulleyJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJointDef_new00
static int tolua_LuaBox2D_b2RevoluteJointDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2RevoluteJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2RevoluteJointDef* tolua_ret = (b2RevoluteJointDef*)  Mtolua_new((b2RevoluteJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2RevoluteJointDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJointDef_new00_local
static int tolua_LuaBox2D_b2RevoluteJointDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2RevoluteJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2RevoluteJointDef* tolua_ret = (b2RevoluteJointDef*)  Mtolua_new((b2RevoluteJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2RevoluteJointDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initialize of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJointDef_Initialize00
static int tolua_LuaBox2D_b2RevoluteJointDef_Initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJointDef",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Body",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
  b2Body* bodyA = ((b2Body*)  tolua_tousertype(tolua_S,2,0));
  b2Body* bodyB = ((b2Body*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec2* anchor = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initialize'", NULL);
#endif
  {
   self->Initialize(bodyA,bodyB,*anchor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorA of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RevoluteJointDef_localAnchorA
static int tolua_get_b2RevoluteJointDef_localAnchorA(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorA,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorA of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RevoluteJointDef_localAnchorA
static int tolua_set_b2RevoluteJointDef_localAnchorA(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorA = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorB of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RevoluteJointDef_localAnchorB
static int tolua_get_b2RevoluteJointDef_localAnchorB(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorB,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorB of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RevoluteJointDef_localAnchorB
static int tolua_set_b2RevoluteJointDef_localAnchorB(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorB = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: referenceAngle of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RevoluteJointDef_referenceAngle
static int tolua_get_b2RevoluteJointDef_referenceAngle(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'referenceAngle'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->referenceAngle);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: referenceAngle of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RevoluteJointDef_referenceAngle
static int tolua_set_b2RevoluteJointDef_referenceAngle(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'referenceAngle'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->referenceAngle = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: enableLimit of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RevoluteJointDef_enableLimit
static int tolua_get_b2RevoluteJointDef_enableLimit(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'enableLimit'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->enableLimit);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: enableLimit of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RevoluteJointDef_enableLimit
static int tolua_set_b2RevoluteJointDef_enableLimit(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'enableLimit'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->enableLimit = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: lowerAngle of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RevoluteJointDef_lowerAngle
static int tolua_get_b2RevoluteJointDef_lowerAngle(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'lowerAngle'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->lowerAngle);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: lowerAngle of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RevoluteJointDef_lowerAngle
static int tolua_set_b2RevoluteJointDef_lowerAngle(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'lowerAngle'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->lowerAngle = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: upperAngle of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RevoluteJointDef_upperAngle
static int tolua_get_b2RevoluteJointDef_upperAngle(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'upperAngle'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->upperAngle);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: upperAngle of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RevoluteJointDef_upperAngle
static int tolua_set_b2RevoluteJointDef_upperAngle(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'upperAngle'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->upperAngle = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: enableMotor of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RevoluteJointDef_enableMotor
static int tolua_get_b2RevoluteJointDef_enableMotor(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'enableMotor'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->enableMotor);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: enableMotor of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RevoluteJointDef_enableMotor
static int tolua_set_b2RevoluteJointDef_enableMotor(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'enableMotor'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->enableMotor = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: motorSpeed of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RevoluteJointDef_motorSpeed
static int tolua_get_b2RevoluteJointDef_motorSpeed(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'motorSpeed'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->motorSpeed);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: motorSpeed of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RevoluteJointDef_motorSpeed
static int tolua_set_b2RevoluteJointDef_motorSpeed(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'motorSpeed'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->motorSpeed = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: maxMotorTorque of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RevoluteJointDef_maxMotorTorque
static int tolua_get_b2RevoluteJointDef_maxMotorTorque(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxMotorTorque'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->maxMotorTorque);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: maxMotorTorque of class  b2RevoluteJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RevoluteJointDef_maxMotorTorque
static int tolua_set_b2RevoluteJointDef_maxMotorTorque(lua_State* tolua_S)
{
  b2RevoluteJointDef* self = (b2RevoluteJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxMotorTorque'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->maxMotorTorque = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorA of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetAnchorA00
static int tolua_LuaBox2D_b2RevoluteJoint_GetAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorA'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorA();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorB of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetAnchorB00
static int tolua_LuaBox2D_b2RevoluteJoint_GetAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorB'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorB();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorA of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetLocalAnchorA00
static int tolua_LuaBox2D_b2RevoluteJoint_GetLocalAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2RevoluteJoint* self = (const b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorA'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorA();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorB of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetLocalAnchorB00
static int tolua_LuaBox2D_b2RevoluteJoint_GetLocalAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2RevoluteJoint* self = (const b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorB'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorB();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReferenceAngle of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetReferenceAngle00
static int tolua_LuaBox2D_b2RevoluteJoint_GetReferenceAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2RevoluteJoint* self = (const b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReferenceAngle'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetReferenceAngle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReferenceAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetJointAngle of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetJointAngle00
static int tolua_LuaBox2D_b2RevoluteJoint_GetJointAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetJointAngle'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetJointAngle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetJointAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetJointSpeed of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetJointSpeed00
static int tolua_LuaBox2D_b2RevoluteJoint_GetJointSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetJointSpeed'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetJointSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetJointSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsLimitEnabled of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_IsLimitEnabled00
static int tolua_LuaBox2D_b2RevoluteJoint_IsLimitEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsLimitEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsLimitEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsLimitEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EnableLimit of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_EnableLimit00
static int tolua_LuaBox2D_b2RevoluteJoint_EnableLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EnableLimit'", NULL);
#endif
  {
   self->EnableLimit(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EnableLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLowerLimit of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetLowerLimit00
static int tolua_LuaBox2D_b2RevoluteJoint_GetLowerLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLowerLimit'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetLowerLimit();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLowerLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUpperLimit of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetUpperLimit00
static int tolua_LuaBox2D_b2RevoluteJoint_GetUpperLimit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUpperLimit'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetUpperLimit();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUpperLimit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLimits of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_SetLimits00
static int tolua_LuaBox2D_b2RevoluteJoint_SetLimits00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 lower = ((float32)  tolua_tonumber(tolua_S,2,0));
  float32 upper = ((float32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLimits'", NULL);
#endif
  {
   self->SetLimits(lower,upper);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLimits'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsMotorEnabled of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_IsMotorEnabled00
static int tolua_LuaBox2D_b2RevoluteJoint_IsMotorEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsMotorEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsMotorEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsMotorEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EnableMotor of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_EnableMotor00
static int tolua_LuaBox2D_b2RevoluteJoint_EnableMotor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EnableMotor'", NULL);
#endif
  {
   self->EnableMotor(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EnableMotor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMotorSpeed of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_SetMotorSpeed00
static int tolua_LuaBox2D_b2RevoluteJoint_SetMotorSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 speed = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMotorSpeed'", NULL);
#endif
  {
   self->SetMotorSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMotorSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMotorSpeed of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetMotorSpeed00
static int tolua_LuaBox2D_b2RevoluteJoint_GetMotorSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMotorSpeed'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetMotorSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMotorSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaxMotorTorque of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_SetMaxMotorTorque00
static int tolua_LuaBox2D_b2RevoluteJoint_SetMaxMotorTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 torque = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaxMotorTorque'", NULL);
#endif
  {
   self->SetMaxMotorTorque(torque);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaxMotorTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxMotorTorque of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetMaxMotorTorque00
static int tolua_LuaBox2D_b2RevoluteJoint_GetMaxMotorTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2RevoluteJoint* self = (const b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxMotorTorque'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetMaxMotorTorque();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxMotorTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionForce of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetReactionForce00
static int tolua_LuaBox2D_b2RevoluteJoint_GetReactionForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionForce'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetReactionForce(inv_dt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionTorque of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetReactionTorque00
static int tolua_LuaBox2D_b2RevoluteJoint_GetReactionTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionTorque'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetReactionTorque(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMotorTorque of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_GetMotorTorque00
static int tolua_LuaBox2D_b2RevoluteJoint_GetMotorTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMotorTorque'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetMotorTorque(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMotorTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2RevoluteJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RevoluteJoint_Dump00
static int tolua_LuaBox2D_b2RevoluteJoint_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RevoluteJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RevoluteJoint* self = (b2RevoluteJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeDef_new00
static int tolua_LuaBox2D_b2RopeDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2RopeDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2RopeDef* tolua_ret = (b2RopeDef*)  Mtolua_new((b2RopeDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2RopeDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeDef_new00_local
static int tolua_LuaBox2D_b2RopeDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2RopeDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2RopeDef* tolua_ret = (b2RopeDef*)  Mtolua_new((b2RopeDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2RopeDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: vertices of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RopeDef_vertices_ptr
static int tolua_get_b2RopeDef_vertices_ptr(lua_State* tolua_S)
{
  b2RopeDef* self = (b2RopeDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'vertices'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->vertices,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: vertices of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RopeDef_vertices_ptr
static int tolua_set_b2RopeDef_vertices_ptr(lua_State* tolua_S)
{
  b2RopeDef* self = (b2RopeDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'vertices'",NULL);
  if (!tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->vertices = ((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: count of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RopeDef_count
static int tolua_get_b2RopeDef_count(lua_State* tolua_S)
{
  b2RopeDef* self = (b2RopeDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'count'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->count);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: count of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RopeDef_count
static int tolua_set_b2RopeDef_count(lua_State* tolua_S)
{
  b2RopeDef* self = (b2RopeDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'count'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->count = ((int32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: gravity of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RopeDef_gravity
static int tolua_get_b2RopeDef_gravity(lua_State* tolua_S)
{
  b2RopeDef* self = (b2RopeDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'gravity'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->gravity,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: gravity of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RopeDef_gravity
static int tolua_set_b2RopeDef_gravity(lua_State* tolua_S)
{
  b2RopeDef* self = (b2RopeDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'gravity'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->gravity = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: damping of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RopeDef_damping
static int tolua_get_b2RopeDef_damping(lua_State* tolua_S)
{
  b2RopeDef* self = (b2RopeDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'damping'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->damping);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: damping of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RopeDef_damping
static int tolua_set_b2RopeDef_damping(lua_State* tolua_S)
{
  b2RopeDef* self = (b2RopeDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'damping'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->damping = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: k2 of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RopeDef_k2
static int tolua_get_b2RopeDef_k2(lua_State* tolua_S)
{
  b2RopeDef* self = (b2RopeDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'k2'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->k2);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: k2 of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RopeDef_k2
static int tolua_set_b2RopeDef_k2(lua_State* tolua_S)
{
  b2RopeDef* self = (b2RopeDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'k2'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->k2 = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: k3 of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RopeDef_k3
static int tolua_get_b2RopeDef_k3(lua_State* tolua_S)
{
  b2RopeDef* self = (b2RopeDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'k3'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->k3);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: k3 of class  b2RopeDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RopeDef_k3
static int tolua_set_b2RopeDef_k3(lua_State* tolua_S)
{
  b2RopeDef* self = (b2RopeDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'k3'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->k3 = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Rope */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rope_new00
static int tolua_LuaBox2D_b2Rope_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Rope",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Rope* tolua_ret = (b2Rope*)  Mtolua_new((b2Rope)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Rope");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Rope */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rope_new00_local
static int tolua_LuaBox2D_b2Rope_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Rope",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Rope* tolua_ret = (b2Rope*)  Mtolua_new((b2Rope)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Rope");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2Rope */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rope_delete00
static int tolua_LuaBox2D_b2Rope_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Rope",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Rope* self = (b2Rope*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initialize of class  b2Rope */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rope_Initialize00
static int tolua_LuaBox2D_b2Rope_Initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Rope",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2RopeDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Rope* self = (b2Rope*)  tolua_tousertype(tolua_S,1,0);
  const b2RopeDef* def = ((const b2RopeDef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initialize'", NULL);
#endif
  {
   self->Initialize(def);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Step of class  b2Rope */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rope_Step00
static int tolua_LuaBox2D_b2Rope_Step00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Rope",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Rope* self = (b2Rope*)  tolua_tousertype(tolua_S,1,0);
  float32 timeStep = ((float32)  tolua_tonumber(tolua_S,2,0));
  int32 iterations = ((int32)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Step'", NULL);
#endif
  {
   self->Step(timeStep,iterations);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Step'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexCount of class  b2Rope */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rope_GetVertexCount00
static int tolua_LuaBox2D_b2Rope_GetVertexCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2Rope",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Rope* self = (const b2Rope*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexCount'", NULL);
#endif
  {
   int32 tolua_ret = (int32)  self->GetVertexCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertexCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertices of class  b2Rope */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rope_GetVertices00
static int tolua_LuaBox2D_b2Rope_GetVertices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2Rope",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2Rope* self = (const b2Rope*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertices'", NULL);
#endif
  {
   const b2Vec2* tolua_ret = (const b2Vec2*)  self->GetVertices();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Draw of class  b2Rope */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rope_Draw00
static int tolua_LuaBox2D_b2Rope_Draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Rope",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Draw",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Rope* self = (b2Rope*)  tolua_tousertype(tolua_S,1,0);
  b2Draw* draw = ((b2Draw*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Draw'", NULL);
#endif
  {
   self->Draw(draw);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAngle of class  b2Rope */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Rope_SetAngle00
static int tolua_LuaBox2D_b2Rope_SetAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Rope",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Rope* self = (b2Rope*)  tolua_tousertype(tolua_S,1,0);
  float32 angle = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAngle'", NULL);
#endif
  {
   self->SetAngle(angle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2RopeJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeJointDef_new00
static int tolua_LuaBox2D_b2RopeJointDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2RopeJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2RopeJointDef* tolua_ret = (b2RopeJointDef*)  Mtolua_new((b2RopeJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2RopeJointDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2RopeJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeJointDef_new00_local
static int tolua_LuaBox2D_b2RopeJointDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2RopeJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2RopeJointDef* tolua_ret = (b2RopeJointDef*)  Mtolua_new((b2RopeJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2RopeJointDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorA of class  b2RopeJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RopeJointDef_localAnchorA
static int tolua_get_b2RopeJointDef_localAnchorA(lua_State* tolua_S)
{
  b2RopeJointDef* self = (b2RopeJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorA,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorA of class  b2RopeJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RopeJointDef_localAnchorA
static int tolua_set_b2RopeJointDef_localAnchorA(lua_State* tolua_S)
{
  b2RopeJointDef* self = (b2RopeJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorA = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorB of class  b2RopeJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RopeJointDef_localAnchorB
static int tolua_get_b2RopeJointDef_localAnchorB(lua_State* tolua_S)
{
  b2RopeJointDef* self = (b2RopeJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorB,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorB of class  b2RopeJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RopeJointDef_localAnchorB
static int tolua_set_b2RopeJointDef_localAnchorB(lua_State* tolua_S)
{
  b2RopeJointDef* self = (b2RopeJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorB = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: maxLength of class  b2RopeJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2RopeJointDef_maxLength
static int tolua_get_b2RopeJointDef_maxLength(lua_State* tolua_S)
{
  b2RopeJointDef* self = (b2RopeJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxLength'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->maxLength);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: maxLength of class  b2RopeJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2RopeJointDef_maxLength
static int tolua_set_b2RopeJointDef_maxLength(lua_State* tolua_S)
{
  b2RopeJointDef* self = (b2RopeJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxLength'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->maxLength = ((float32)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorA of class  b2RopeJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeJoint_GetAnchorA00
static int tolua_LuaBox2D_b2RopeJoint_GetAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RopeJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RopeJoint* self = (b2RopeJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorA'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorA();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorB of class  b2RopeJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeJoint_GetAnchorB00
static int tolua_LuaBox2D_b2RopeJoint_GetAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RopeJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RopeJoint* self = (b2RopeJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorB'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorB();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionForce of class  b2RopeJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeJoint_GetReactionForce00
static int tolua_LuaBox2D_b2RopeJoint_GetReactionForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RopeJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RopeJoint* self = (b2RopeJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionForce'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetReactionForce(inv_dt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionTorque of class  b2RopeJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeJoint_GetReactionTorque00
static int tolua_LuaBox2D_b2RopeJoint_GetReactionTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RopeJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RopeJoint* self = (b2RopeJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 inv_dt = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionTorque'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetReactionTorque(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorA of class  b2RopeJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeJoint_GetLocalAnchorA00
static int tolua_LuaBox2D_b2RopeJoint_GetLocalAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2RopeJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2RopeJoint* self = (const b2RopeJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorA'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorA();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorB of class  b2RopeJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeJoint_GetLocalAnchorB00
static int tolua_LuaBox2D_b2RopeJoint_GetLocalAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2RopeJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2RopeJoint* self = (const b2RopeJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorB'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorB();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaxLength of class  b2RopeJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeJoint_SetMaxLength00
static int tolua_LuaBox2D_b2RopeJoint_SetMaxLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RopeJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RopeJoint* self = (b2RopeJoint*)  tolua_tousertype(tolua_S,1,0);
  float32 length = ((float32)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaxLength'", NULL);
#endif
  {
   self->SetMaxLength(length);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaxLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxLength of class  b2RopeJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeJoint_GetMaxLength00
static int tolua_LuaBox2D_b2RopeJoint_GetMaxLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RopeJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RopeJoint* self = (b2RopeJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxLength'", NULL);
#endif
  {
   float32 tolua_ret = (float32)  self->GetMaxLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLimitState of class  b2RopeJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeJoint_GetLimitState00
static int tolua_LuaBox2D_b2RopeJoint_GetLimitState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RopeJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RopeJoint* self = (b2RopeJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLimitState'", NULL);
#endif
  {
   b2LimitState tolua_ret = (b2LimitState)  self->GetLimitState();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLimitState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2RopeJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RopeJoint_Dump00
static int tolua_LuaBox2D_b2RopeJoint_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RopeJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RopeJoint* self = (b2RopeJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: b2Alloc */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Alloc00
static int tolua_LuaBox2D_b2Alloc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  signed int size = (( signed int)  tolua_tonumber(tolua_S,1,0));
  {
   void* tolua_ret = (void*)  b2Alloc(size);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'b2Alloc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: b2Free */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Free00
static int tolua_LuaBox2D_b2Free00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isuserdata(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  void* mem = ((void*)  tolua_touserdata(tolua_S,1,0));
  {
   b2Free(mem);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'b2Free'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: major of class  b2Version */
#ifndef TOLUA_DISABLE_tolua_get_b2Version_major
static int tolua_get_b2Version_major(lua_State* tolua_S)
{
  b2Version* self = (b2Version*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'major'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->major);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: major of class  b2Version */
#ifndef TOLUA_DISABLE_tolua_set_b2Version_major
static int tolua_set_b2Version_major(lua_State* tolua_S)
{
  b2Version* self = (b2Version*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'major'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->major = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: minor of class  b2Version */
#ifndef TOLUA_DISABLE_tolua_get_b2Version_minor
static int tolua_get_b2Version_minor(lua_State* tolua_S)
{
  b2Version* self = (b2Version*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'minor'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->minor);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: minor of class  b2Version */
#ifndef TOLUA_DISABLE_tolua_set_b2Version_minor
static int tolua_set_b2Version_minor(lua_State* tolua_S)
{
  b2Version* self = (b2Version*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'minor'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->minor = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: revision of class  b2Version */
#ifndef TOLUA_DISABLE_tolua_get_b2Version_revision
static int tolua_get_b2Version_revision(lua_State* tolua_S)
{
  b2Version* self = (b2Version*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'revision'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->revision);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: revision of class  b2Version */
#ifndef TOLUA_DISABLE_tolua_set_b2Version_revision
static int tolua_set_b2Version_revision(lua_State* tolua_S)
{
  b2Version* self = (b2Version*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'revision'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->revision = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: b2_version */
#ifndef TOLUA_DISABLE_tolua_get_b2_version
static int tolua_get_b2_version(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&b2_version,"b2Version");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: b2_version */
#ifndef TOLUA_DISABLE_tolua_set_b2_version
static int tolua_set_b2_version(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Version",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  b2_version = *((b2Version*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: mass of class  b2MassData */
#ifndef TOLUA_DISABLE_tolua_get_b2MassData_mass
static int tolua_get_b2MassData_mass(lua_State* tolua_S)
{
  b2MassData* self = (b2MassData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'mass'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->mass);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: mass of class  b2MassData */
#ifndef TOLUA_DISABLE_tolua_set_b2MassData_mass
static int tolua_set_b2MassData_mass(lua_State* tolua_S)
{
  b2MassData* self = (b2MassData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'mass'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->mass = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: center of class  b2MassData */
#ifndef TOLUA_DISABLE_tolua_get_b2MassData_center
static int tolua_get_b2MassData_center(lua_State* tolua_S)
{
  b2MassData* self = (b2MassData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'center'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->center,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: center of class  b2MassData */
#ifndef TOLUA_DISABLE_tolua_set_b2MassData_center
static int tolua_set_b2MassData_center(lua_State* tolua_S)
{
  b2MassData* self = (b2MassData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'center'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->center = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: I of class  b2MassData */
#ifndef TOLUA_DISABLE_tolua_get_b2MassData_I
static int tolua_get_b2MassData_I(lua_State* tolua_S)
{
  b2MassData* self = (b2MassData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'I'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->I);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: I of class  b2MassData */
#ifndef TOLUA_DISABLE_tolua_set_b2MassData_I
static int tolua_set_b2MassData_I(lua_State* tolua_S)
{
  b2MassData* self = (b2MassData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'I'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->I = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: data of class  b2StackEntry */
#ifndef TOLUA_DISABLE_tolua_get_b2StackEntry_data
static int tolua_get_b2StackEntry_data(lua_State* tolua_S)
{
  b2StackEntry* self = (b2StackEntry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'data'",NULL);
#endif
  tolua_pushstring(tolua_S,(const char*)self->data);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: data of class  b2StackEntry */
#ifndef TOLUA_DISABLE_tolua_set_b2StackEntry_data
static int tolua_set_b2StackEntry_data(lua_State* tolua_S)
{
  b2StackEntry* self = (b2StackEntry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'data'",NULL);
  if (!tolua_isstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->data = ((char*)  tolua_tostring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: size of class  b2StackEntry */
#ifndef TOLUA_DISABLE_tolua_get_b2StackEntry_size
static int tolua_get_b2StackEntry_size(lua_State* tolua_S)
{
  b2StackEntry* self = (b2StackEntry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'size'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->size);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: size of class  b2StackEntry */
#ifndef TOLUA_DISABLE_tolua_set_b2StackEntry_size
static int tolua_set_b2StackEntry_size(lua_State* tolua_S)
{
  b2StackEntry* self = (b2StackEntry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'size'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->size = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: usedMalloc of class  b2StackEntry */
#ifndef TOLUA_DISABLE_tolua_get_b2StackEntry_usedMalloc
static int tolua_get_b2StackEntry_usedMalloc(lua_State* tolua_S)
{
  b2StackEntry* self = (b2StackEntry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'usedMalloc'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->usedMalloc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: usedMalloc of class  b2StackEntry */
#ifndef TOLUA_DISABLE_tolua_set_b2StackEntry_usedMalloc
static int tolua_set_b2StackEntry_usedMalloc(lua_State* tolua_S)
{
  b2StackEntry* self = (b2StackEntry*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'usedMalloc'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->usedMalloc = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: proxyA of class  b2TOIInput */
#ifndef TOLUA_DISABLE_tolua_get_b2TOIInput_proxyA
static int tolua_get_b2TOIInput_proxyA(lua_State* tolua_S)
{
  b2TOIInput* self = (b2TOIInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->proxyA,"b2DistanceProxy");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: proxyA of class  b2TOIInput */
#ifndef TOLUA_DISABLE_tolua_set_b2TOIInput_proxyA
static int tolua_set_b2TOIInput_proxyA(lua_State* tolua_S)
{
  b2TOIInput* self = (b2TOIInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2DistanceProxy",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->proxyA = *((b2DistanceProxy*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: proxyB of class  b2TOIInput */
#ifndef TOLUA_DISABLE_tolua_get_b2TOIInput_proxyB
static int tolua_get_b2TOIInput_proxyB(lua_State* tolua_S)
{
  b2TOIInput* self = (b2TOIInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->proxyB,"b2DistanceProxy");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: proxyB of class  b2TOIInput */
#ifndef TOLUA_DISABLE_tolua_set_b2TOIInput_proxyB
static int tolua_set_b2TOIInput_proxyB(lua_State* tolua_S)
{
  b2TOIInput* self = (b2TOIInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'proxyB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2DistanceProxy",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->proxyB = *((b2DistanceProxy*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: sweepA of class  b2TOIInput */
#ifndef TOLUA_DISABLE_tolua_get_b2TOIInput_sweepA
static int tolua_get_b2TOIInput_sweepA(lua_State* tolua_S)
{
  b2TOIInput* self = (b2TOIInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'sweepA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->sweepA,"b2Sweep");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: sweepA of class  b2TOIInput */
#ifndef TOLUA_DISABLE_tolua_set_b2TOIInput_sweepA
static int tolua_set_b2TOIInput_sweepA(lua_State* tolua_S)
{
  b2TOIInput* self = (b2TOIInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'sweepA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Sweep",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->sweepA = *((b2Sweep*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: sweepB of class  b2TOIInput */
#ifndef TOLUA_DISABLE_tolua_get_b2TOIInput_sweepB
static int tolua_get_b2TOIInput_sweepB(lua_State* tolua_S)
{
  b2TOIInput* self = (b2TOIInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'sweepB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->sweepB,"b2Sweep");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: sweepB of class  b2TOIInput */
#ifndef TOLUA_DISABLE_tolua_set_b2TOIInput_sweepB
static int tolua_set_b2TOIInput_sweepB(lua_State* tolua_S)
{
  b2TOIInput* self = (b2TOIInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'sweepB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Sweep",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->sweepB = *((b2Sweep*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tMax of class  b2TOIInput */
#ifndef TOLUA_DISABLE_tolua_get_b2TOIInput_tMax
static int tolua_get_b2TOIInput_tMax(lua_State* tolua_S)
{
  b2TOIInput* self = (b2TOIInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tMax'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->tMax);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tMax of class  b2TOIInput */
#ifndef TOLUA_DISABLE_tolua_set_b2TOIInput_tMax
static int tolua_set_b2TOIInput_tMax(lua_State* tolua_S)
{
  b2TOIInput* self = (b2TOIInput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tMax'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tMax = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: state of class  b2TOIOutput */
#ifndef TOLUA_DISABLE_tolua_get_b2TOIOutput_state
static int tolua_get_b2TOIOutput_state(lua_State* tolua_S)
{
  b2TOIOutput* self = (b2TOIOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'state'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->state);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: state of class  b2TOIOutput */
#ifndef TOLUA_DISABLE_tolua_set_b2TOIOutput_state
static int tolua_set_b2TOIOutput_state(lua_State* tolua_S)
{
  b2TOIOutput* self = (b2TOIOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'state'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->state = ((b2TOIOutput::State) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: t of class  b2TOIOutput */
#ifndef TOLUA_DISABLE_tolua_get_b2TOIOutput_t
static int tolua_get_b2TOIOutput_t(lua_State* tolua_S)
{
  b2TOIOutput* self = (b2TOIOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 't'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->t);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: t of class  b2TOIOutput */
#ifndef TOLUA_DISABLE_tolua_set_b2TOIOutput_t
static int tolua_set_b2TOIOutput_t(lua_State* tolua_S)
{
  b2TOIOutput* self = (b2TOIOutput*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 't'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->t = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: b2TimeOfImpact */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2TimeOfImpact00
static int tolua_LuaBox2D_b2TimeOfImpact00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2TOIOutput",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const b2TOIInput",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2TOIOutput* output = ((b2TOIOutput*)  tolua_tousertype(tolua_S,1,0));
  const b2TOIInput* input = ((const b2TOIInput*)  tolua_tousertype(tolua_S,2,0));
  {
   b2TimeOfImpact(output,input);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'b2TimeOfImpact'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2Timer */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Timer_new00
static int tolua_LuaBox2D_b2Timer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Timer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Timer* tolua_ret = (b2Timer*)  Mtolua_new((b2Timer)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Timer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2Timer */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Timer_new00_local
static int tolua_LuaBox2D_b2Timer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2Timer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2Timer* tolua_ret = (b2Timer*)  Mtolua_new((b2Timer)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2Timer");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Reset of class  b2Timer */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Timer_Reset00
static int tolua_LuaBox2D_b2Timer_Reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Timer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Timer* self = (b2Timer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Reset'", NULL);
#endif
  {
   self->Reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMilliseconds of class  b2Timer */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2Timer_GetMilliseconds00
static int tolua_LuaBox2D_b2Timer_GetMilliseconds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2Timer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2Timer* self = (b2Timer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMilliseconds'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetMilliseconds();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMilliseconds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: dt of class  b2TimeStep */
#ifndef TOLUA_DISABLE_tolua_get_b2TimeStep_dt
static int tolua_get_b2TimeStep_dt(lua_State* tolua_S)
{
  b2TimeStep* self = (b2TimeStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dt'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->dt);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: dt of class  b2TimeStep */
#ifndef TOLUA_DISABLE_tolua_set_b2TimeStep_dt
static int tolua_set_b2TimeStep_dt(lua_State* tolua_S)
{
  b2TimeStep* self = (b2TimeStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dt'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->dt = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: inv_dt of class  b2TimeStep */
#ifndef TOLUA_DISABLE_tolua_get_b2TimeStep_inv_dt
static int tolua_get_b2TimeStep_inv_dt(lua_State* tolua_S)
{
  b2TimeStep* self = (b2TimeStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'inv_dt'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->inv_dt);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: inv_dt of class  b2TimeStep */
#ifndef TOLUA_DISABLE_tolua_set_b2TimeStep_inv_dt
static int tolua_set_b2TimeStep_inv_dt(lua_State* tolua_S)
{
  b2TimeStep* self = (b2TimeStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'inv_dt'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->inv_dt = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: dtRatio of class  b2TimeStep */
#ifndef TOLUA_DISABLE_tolua_get_b2TimeStep_dtRatio
static int tolua_get_b2TimeStep_dtRatio(lua_State* tolua_S)
{
  b2TimeStep* self = (b2TimeStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dtRatio'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->dtRatio);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: dtRatio of class  b2TimeStep */
#ifndef TOLUA_DISABLE_tolua_set_b2TimeStep_dtRatio
static int tolua_set_b2TimeStep_dtRatio(lua_State* tolua_S)
{
  b2TimeStep* self = (b2TimeStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dtRatio'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->dtRatio = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: velocityIterations of class  b2TimeStep */
#ifndef TOLUA_DISABLE_tolua_get_b2TimeStep_velocityIterations
static int tolua_get_b2TimeStep_velocityIterations(lua_State* tolua_S)
{
  b2TimeStep* self = (b2TimeStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'velocityIterations'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->velocityIterations);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: velocityIterations of class  b2TimeStep */
#ifndef TOLUA_DISABLE_tolua_set_b2TimeStep_velocityIterations
static int tolua_set_b2TimeStep_velocityIterations(lua_State* tolua_S)
{
  b2TimeStep* self = (b2TimeStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'velocityIterations'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->velocityIterations = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: positionIterations of class  b2TimeStep */
#ifndef TOLUA_DISABLE_tolua_get_b2TimeStep_positionIterations
static int tolua_get_b2TimeStep_positionIterations(lua_State* tolua_S)
{
  b2TimeStep* self = (b2TimeStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'positionIterations'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->positionIterations);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: positionIterations of class  b2TimeStep */
#ifndef TOLUA_DISABLE_tolua_set_b2TimeStep_positionIterations
static int tolua_set_b2TimeStep_positionIterations(lua_State* tolua_S)
{
  b2TimeStep* self = (b2TimeStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'positionIterations'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->positionIterations = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: warmStarting of class  b2TimeStep */
#ifndef TOLUA_DISABLE_tolua_get_b2TimeStep_warmStarting
static int tolua_get_b2TimeStep_warmStarting(lua_State* tolua_S)
{
  b2TimeStep* self = (b2TimeStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'warmStarting'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->warmStarting);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: warmStarting of class  b2TimeStep */
#ifndef TOLUA_DISABLE_tolua_set_b2TimeStep_warmStarting
static int tolua_set_b2TimeStep_warmStarting(lua_State* tolua_S)
{
  b2TimeStep* self = (b2TimeStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'warmStarting'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->warmStarting = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: c of class  b2Position */
#ifndef TOLUA_DISABLE_tolua_get_b2Position_c
static int tolua_get_b2Position_c(lua_State* tolua_S)
{
  b2Position* self = (b2Position*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'c'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->c,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: c of class  b2Position */
#ifndef TOLUA_DISABLE_tolua_set_b2Position_c
static int tolua_set_b2Position_c(lua_State* tolua_S)
{
  b2Position* self = (b2Position*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'c'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->c = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: a of class  b2Position */
#ifndef TOLUA_DISABLE_tolua_get_b2Position_a
static int tolua_get_b2Position_a(lua_State* tolua_S)
{
  b2Position* self = (b2Position*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->a);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: a of class  b2Position */
#ifndef TOLUA_DISABLE_tolua_set_b2Position_a
static int tolua_set_b2Position_a(lua_State* tolua_S)
{
  b2Position* self = (b2Position*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->a = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: v of class  b2Velocity */
#ifndef TOLUA_DISABLE_tolua_get_b2Velocity_v
static int tolua_get_b2Velocity_v(lua_State* tolua_S)
{
  b2Velocity* self = (b2Velocity*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'v'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->v,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: v of class  b2Velocity */
#ifndef TOLUA_DISABLE_tolua_set_b2Velocity_v
static int tolua_set_b2Velocity_v(lua_State* tolua_S)
{
  b2Velocity* self = (b2Velocity*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'v'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->v = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: w of class  b2Velocity */
#ifndef TOLUA_DISABLE_tolua_get_b2Velocity_w
static int tolua_get_b2Velocity_w(lua_State* tolua_S)
{
  b2Velocity* self = (b2Velocity*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'w'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->w);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: w of class  b2Velocity */
#ifndef TOLUA_DISABLE_tolua_set_b2Velocity_w
static int tolua_set_b2Velocity_w(lua_State* tolua_S)
{
  b2Velocity* self = (b2Velocity*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'w'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->w = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2WeldJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJointDef_new00
static int tolua_LuaBox2D_b2WeldJointDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2WeldJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2WeldJointDef* tolua_ret = (b2WeldJointDef*)  Mtolua_new((b2WeldJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2WeldJointDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2WeldJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJointDef_new00_local
static int tolua_LuaBox2D_b2WeldJointDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2WeldJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2WeldJointDef* tolua_ret = (b2WeldJointDef*)  Mtolua_new((b2WeldJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2WeldJointDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initialize of class  b2WeldJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJointDef_Initialize00
static int tolua_LuaBox2D_b2WeldJointDef_Initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WeldJointDef",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Body",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WeldJointDef* self = (b2WeldJointDef*)  tolua_tousertype(tolua_S,1,0);
  b2Body* bodyA = ((b2Body*)  tolua_tousertype(tolua_S,2,0));
  b2Body* bodyB = ((b2Body*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec2* anchor = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initialize'", NULL);
#endif
  {
   self->Initialize(bodyA,bodyB,*anchor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorA of class  b2WeldJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2WeldJointDef_localAnchorA
static int tolua_get_b2WeldJointDef_localAnchorA(lua_State* tolua_S)
{
  b2WeldJointDef* self = (b2WeldJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorA,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorA of class  b2WeldJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2WeldJointDef_localAnchorA
static int tolua_set_b2WeldJointDef_localAnchorA(lua_State* tolua_S)
{
  b2WeldJointDef* self = (b2WeldJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorA = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorB of class  b2WeldJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2WeldJointDef_localAnchorB
static int tolua_get_b2WeldJointDef_localAnchorB(lua_State* tolua_S)
{
  b2WeldJointDef* self = (b2WeldJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorB,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorB of class  b2WeldJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2WeldJointDef_localAnchorB
static int tolua_set_b2WeldJointDef_localAnchorB(lua_State* tolua_S)
{
  b2WeldJointDef* self = (b2WeldJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorB = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: referenceAngle of class  b2WeldJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2WeldJointDef_referenceAngle
static int tolua_get_b2WeldJointDef_referenceAngle(lua_State* tolua_S)
{
  b2WeldJointDef* self = (b2WeldJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'referenceAngle'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->referenceAngle);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: referenceAngle of class  b2WeldJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2WeldJointDef_referenceAngle
static int tolua_set_b2WeldJointDef_referenceAngle(lua_State* tolua_S)
{
  b2WeldJointDef* self = (b2WeldJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'referenceAngle'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->referenceAngle = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: frequencyHz of class  b2WeldJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2WeldJointDef_frequencyHz
static int tolua_get_b2WeldJointDef_frequencyHz(lua_State* tolua_S)
{
  b2WeldJointDef* self = (b2WeldJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'frequencyHz'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->frequencyHz);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: frequencyHz of class  b2WeldJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2WeldJointDef_frequencyHz
static int tolua_set_b2WeldJointDef_frequencyHz(lua_State* tolua_S)
{
  b2WeldJointDef* self = (b2WeldJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'frequencyHz'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->frequencyHz = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: dampingRatio of class  b2WeldJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2WeldJointDef_dampingRatio
static int tolua_get_b2WeldJointDef_dampingRatio(lua_State* tolua_S)
{
  b2WeldJointDef* self = (b2WeldJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dampingRatio'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->dampingRatio);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: dampingRatio of class  b2WeldJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2WeldJointDef_dampingRatio
static int tolua_set_b2WeldJointDef_dampingRatio(lua_State* tolua_S)
{
  b2WeldJointDef* self = (b2WeldJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dampingRatio'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->dampingRatio = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorA of class  b2WeldJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJoint_GetAnchorA00
static int tolua_LuaBox2D_b2WeldJoint_GetAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WeldJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WeldJoint* self = (b2WeldJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorA'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorA();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorB of class  b2WeldJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJoint_GetAnchorB00
static int tolua_LuaBox2D_b2WeldJoint_GetAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WeldJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WeldJoint* self = (b2WeldJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorB'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorB();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionForce of class  b2WeldJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJoint_GetReactionForce00
static int tolua_LuaBox2D_b2WeldJoint_GetReactionForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WeldJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WeldJoint* self = (b2WeldJoint*)  tolua_tousertype(tolua_S,1,0);
   float inv_dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionForce'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetReactionForce(inv_dt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionTorque of class  b2WeldJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJoint_GetReactionTorque00
static int tolua_LuaBox2D_b2WeldJoint_GetReactionTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WeldJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WeldJoint* self = (b2WeldJoint*)  tolua_tousertype(tolua_S,1,0);
   float inv_dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionTorque'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetReactionTorque(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorA of class  b2WeldJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJoint_GetLocalAnchorA00
static int tolua_LuaBox2D_b2WeldJoint_GetLocalAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2WeldJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2WeldJoint* self = (const b2WeldJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorA'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorA();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorB of class  b2WeldJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJoint_GetLocalAnchorB00
static int tolua_LuaBox2D_b2WeldJoint_GetLocalAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2WeldJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2WeldJoint* self = (const b2WeldJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorB'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorB();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReferenceAngle of class  b2WeldJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJoint_GetReferenceAngle00
static int tolua_LuaBox2D_b2WeldJoint_GetReferenceAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2WeldJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2WeldJoint* self = (const b2WeldJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReferenceAngle'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetReferenceAngle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReferenceAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFrequency of class  b2WeldJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJoint_SetFrequency00
static int tolua_LuaBox2D_b2WeldJoint_SetFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WeldJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WeldJoint* self = (b2WeldJoint*)  tolua_tousertype(tolua_S,1,0);
   float hz = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFrequency'", NULL);
#endif
  {
   self->SetFrequency(hz);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFrequency of class  b2WeldJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJoint_GetFrequency00
static int tolua_LuaBox2D_b2WeldJoint_GetFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2WeldJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2WeldJoint* self = (const b2WeldJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFrequency'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetFrequency();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDampingRatio of class  b2WeldJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJoint_SetDampingRatio00
static int tolua_LuaBox2D_b2WeldJoint_SetDampingRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WeldJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WeldJoint* self = (b2WeldJoint*)  tolua_tousertype(tolua_S,1,0);
   float ratio = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDampingRatio'", NULL);
#endif
  {
   self->SetDampingRatio(ratio);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDampingRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDampingRatio of class  b2WeldJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJoint_GetDampingRatio00
static int tolua_LuaBox2D_b2WeldJoint_GetDampingRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2WeldJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2WeldJoint* self = (const b2WeldJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDampingRatio'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetDampingRatio();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDampingRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2WeldJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WeldJoint_Dump00
static int tolua_LuaBox2D_b2WeldJoint_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WeldJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WeldJoint* self = (b2WeldJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJointDef_new00
static int tolua_LuaBox2D_b2WheelJointDef_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2WheelJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2WheelJointDef* tolua_ret = (b2WheelJointDef*)  Mtolua_new((b2WheelJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2WheelJointDef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJointDef_new00_local
static int tolua_LuaBox2D_b2WheelJointDef_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"b2WheelJointDef",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   b2WheelJointDef* tolua_ret = (b2WheelJointDef*)  Mtolua_new((b2WheelJointDef)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"b2WheelJointDef");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initialize of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJointDef_Initialize00
static int tolua_LuaBox2D_b2WheelJointDef_Initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJointDef",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Body",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"b2Body",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
  b2Body* bodyA = ((b2Body*)  tolua_tousertype(tolua_S,2,0));
  b2Body* bodyB = ((b2Body*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec2* anchor = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
  const b2Vec2* axis = ((const b2Vec2*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initialize'", NULL);
#endif
  {
   self->Initialize(bodyA,bodyB,*anchor,*axis);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorA of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2WheelJointDef_localAnchorA
static int tolua_get_b2WheelJointDef_localAnchorA(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorA,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorA of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2WheelJointDef_localAnchorA
static int tolua_set_b2WheelJointDef_localAnchorA(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorA = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAnchorB of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2WheelJointDef_localAnchorB
static int tolua_get_b2WheelJointDef_localAnchorB(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAnchorB,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAnchorB of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2WheelJointDef_localAnchorB
static int tolua_set_b2WheelJointDef_localAnchorB(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAnchorB'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAnchorB = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: localAxisA of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2WheelJointDef_localAxisA
static int tolua_get_b2WheelJointDef_localAxisA(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAxisA'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->localAxisA,"b2Vec2");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: localAxisA of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2WheelJointDef_localAxisA
static int tolua_set_b2WheelJointDef_localAxisA(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'localAxisA'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"b2Vec2",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->localAxisA = *((b2Vec2*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: enableMotor of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2WheelJointDef_enableMotor
static int tolua_get_b2WheelJointDef_enableMotor(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'enableMotor'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->enableMotor);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: enableMotor of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2WheelJointDef_enableMotor
static int tolua_set_b2WheelJointDef_enableMotor(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'enableMotor'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->enableMotor = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: maxMotorTorque of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2WheelJointDef_maxMotorTorque
static int tolua_get_b2WheelJointDef_maxMotorTorque(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxMotorTorque'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->maxMotorTorque);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: maxMotorTorque of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2WheelJointDef_maxMotorTorque
static int tolua_set_b2WheelJointDef_maxMotorTorque(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'maxMotorTorque'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->maxMotorTorque = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: motorSpeed of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2WheelJointDef_motorSpeed
static int tolua_get_b2WheelJointDef_motorSpeed(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'motorSpeed'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->motorSpeed);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: motorSpeed of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2WheelJointDef_motorSpeed
static int tolua_set_b2WheelJointDef_motorSpeed(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'motorSpeed'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->motorSpeed = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: frequencyHz of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2WheelJointDef_frequencyHz
static int tolua_get_b2WheelJointDef_frequencyHz(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'frequencyHz'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->frequencyHz);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: frequencyHz of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2WheelJointDef_frequencyHz
static int tolua_set_b2WheelJointDef_frequencyHz(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'frequencyHz'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->frequencyHz = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: dampingRatio of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_get_b2WheelJointDef_dampingRatio
static int tolua_get_b2WheelJointDef_dampingRatio(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dampingRatio'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->dampingRatio);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: dampingRatio of class  b2WheelJointDef */
#ifndef TOLUA_DISABLE_tolua_set_b2WheelJointDef_dampingRatio
static int tolua_set_b2WheelJointDef_dampingRatio(lua_State* tolua_S)
{
  b2WheelJointDef* self = (b2WheelJointDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dampingRatio'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->dampingRatio = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorA of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetAnchorA00
static int tolua_LuaBox2D_b2WheelJoint_GetAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorA'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorA();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchorB of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetAnchorB00
static int tolua_LuaBox2D_b2WheelJoint_GetAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchorB'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetAnchorB();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionForce of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetReactionForce00
static int tolua_LuaBox2D_b2WheelJoint_GetReactionForce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
   float inv_dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionForce'", NULL);
#endif
  {
   b2Vec2 tolua_ret = (b2Vec2)  self->GetReactionForce(inv_dt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((b2Vec2)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(b2Vec2));
     tolua_pushusertype(tolua_S,tolua_obj,"b2Vec2");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionForce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReactionTorque of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetReactionTorque00
static int tolua_LuaBox2D_b2WheelJoint_GetReactionTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
   float inv_dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReactionTorque'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetReactionTorque(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReactionTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorA of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetLocalAnchorA00
static int tolua_LuaBox2D_b2WheelJoint_GetLocalAnchorA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorA'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorA();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAnchorB of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetLocalAnchorB00
static int tolua_LuaBox2D_b2WheelJoint_GetLocalAnchorB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2WheelJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2WheelJoint* self = (const b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAnchorB'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAnchorB();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAnchorB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLocalAxisA of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetLocalAxisA00
static int tolua_LuaBox2D_b2WheelJoint_GetLocalAxisA00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const b2WheelJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const b2WheelJoint* self = (const b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLocalAxisA'", NULL);
#endif
  {
   const b2Vec2& tolua_ret = (const b2Vec2&)  self->GetLocalAxisA();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const b2Vec2");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLocalAxisA'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetJointTranslation of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetJointTranslation00
static int tolua_LuaBox2D_b2WheelJoint_GetJointTranslation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetJointTranslation'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetJointTranslation();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetJointTranslation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetJointSpeed of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetJointSpeed00
static int tolua_LuaBox2D_b2WheelJoint_GetJointSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetJointSpeed'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetJointSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetJointSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsMotorEnabled of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_IsMotorEnabled00
static int tolua_LuaBox2D_b2WheelJoint_IsMotorEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsMotorEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsMotorEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsMotorEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EnableMotor of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_EnableMotor00
static int tolua_LuaBox2D_b2WheelJoint_EnableMotor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
  bool flag = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EnableMotor'", NULL);
#endif
  {
   self->EnableMotor(flag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EnableMotor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMotorSpeed of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_SetMotorSpeed00
static int tolua_LuaBox2D_b2WheelJoint_SetMotorSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
   float speed = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMotorSpeed'", NULL);
#endif
  {
   self->SetMotorSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMotorSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMotorSpeed of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetMotorSpeed00
static int tolua_LuaBox2D_b2WheelJoint_GetMotorSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMotorSpeed'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetMotorSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMotorSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaxMotorTorque of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_SetMaxMotorTorque00
static int tolua_LuaBox2D_b2WheelJoint_SetMaxMotorTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
   float torque = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaxMotorTorque'", NULL);
#endif
  {
   self->SetMaxMotorTorque(torque);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaxMotorTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxMotorTorque of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetMaxMotorTorque00
static int tolua_LuaBox2D_b2WheelJoint_GetMaxMotorTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxMotorTorque'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetMaxMotorTorque();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxMotorTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMotorTorque of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetMotorTorque00
static int tolua_LuaBox2D_b2WheelJoint_GetMotorTorque00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
   float inv_dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMotorTorque'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetMotorTorque(inv_dt);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMotorTorque'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSpringFrequencyHz of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_SetSpringFrequencyHz00
static int tolua_LuaBox2D_b2WheelJoint_SetSpringFrequencyHz00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
   float hz = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSpringFrequencyHz'", NULL);
#endif
  {
   self->SetSpringFrequencyHz(hz);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSpringFrequencyHz'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSpringFrequencyHz of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetSpringFrequencyHz00
static int tolua_LuaBox2D_b2WheelJoint_GetSpringFrequencyHz00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSpringFrequencyHz'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetSpringFrequencyHz();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSpringFrequencyHz'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSpringDampingRatio of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_SetSpringDampingRatio00
static int tolua_LuaBox2D_b2WheelJoint_SetSpringDampingRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
   float ratio = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSpringDampingRatio'", NULL);
#endif
  {
   self->SetSpringDampingRatio(ratio);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSpringDampingRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSpringDampingRatio of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_GetSpringDampingRatio00
static int tolua_LuaBox2D_b2WheelJoint_GetSpringDampingRatio00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSpringDampingRatio'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->GetSpringDampingRatio();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSpringDampingRatio'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dump of class  b2WheelJoint */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2WheelJoint_Dump00
static int tolua_LuaBox2D_b2WheelJoint_Dump00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2WheelJoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2WheelJoint* self = (b2WheelJoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dump'", NULL);
#endif
  {
   self->Dump();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dump'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2DestructionListener */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DestructionListener_delete00
static int tolua_LuaBox2D_b2DestructionListener_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DestructionListener",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DestructionListener* self = (b2DestructionListener*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SayGoodbye of class  b2DestructionListener */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DestructionListener_SayGoodbye00
static int tolua_LuaBox2D_b2DestructionListener_SayGoodbye00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DestructionListener",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Joint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2DestructionListener* self = (b2DestructionListener*)  tolua_tousertype(tolua_S,1,0);
  b2Joint* joint = ((b2Joint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SayGoodbye'", NULL);
#endif
  {
   self->SayGoodbye(joint);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SayGoodbye'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SayGoodbye of class  b2DestructionListener */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2DestructionListener_SayGoodbye01
static int tolua_LuaBox2D_b2DestructionListener_SayGoodbye01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2DestructionListener",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  b2DestructionListener* self = (b2DestructionListener*)  tolua_tousertype(tolua_S,1,0);
  b2Fixture* fixture = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SayGoodbye'", NULL);
#endif
  {
   self->SayGoodbye(fixture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_LuaBox2D_b2DestructionListener_SayGoodbye00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* get function: normalImpulses of class  b2ContactImpulse */
#ifndef TOLUA_DISABLE_tolua_get_LuaBox2D_b2ContactImpulse_normalImpulses
static int tolua_get_LuaBox2D_b2ContactImpulse_normalImpulses(lua_State* tolua_S)
{
 int tolua_index;
  b2ContactImpulse* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2ContactImpulse*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxManifoldPoints)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->normalImpulses[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: normalImpulses of class  b2ContactImpulse */
#ifndef TOLUA_DISABLE_tolua_set_LuaBox2D_b2ContactImpulse_normalImpulses
static int tolua_set_LuaBox2D_b2ContactImpulse_normalImpulses(lua_State* tolua_S)
{
 int tolua_index;
  b2ContactImpulse* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2ContactImpulse*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxManifoldPoints)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->normalImpulses[tolua_index] = ((  float)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tangentImpulses of class  b2ContactImpulse */
#ifndef TOLUA_DISABLE_tolua_get_LuaBox2D_b2ContactImpulse_tangentImpulses
static int tolua_get_LuaBox2D_b2ContactImpulse_tangentImpulses(lua_State* tolua_S)
{
 int tolua_index;
  b2ContactImpulse* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2ContactImpulse*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxManifoldPoints)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
 tolua_pushnumber(tolua_S,(lua_Number)self->tangentImpulses[tolua_index]);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tangentImpulses of class  b2ContactImpulse */
#ifndef TOLUA_DISABLE_tolua_set_LuaBox2D_b2ContactImpulse_tangentImpulses
static int tolua_set_LuaBox2D_b2ContactImpulse_tangentImpulses(lua_State* tolua_S)
{
 int tolua_index;
  b2ContactImpulse* self;
 lua_pushstring(tolua_S,".self");
 lua_rawget(tolua_S,1);
 self = (b2ContactImpulse*)  lua_touserdata(tolua_S,-1);
#ifndef TOLUA_RELEASE
 {
  tolua_Error tolua_err;
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in array indexing.",&tolua_err);
 }
#endif
 tolua_index = (int)tolua_tonumber(tolua_S,2,0);
#ifndef TOLUA_RELEASE
 if (tolua_index<0 || tolua_index>=b2_maxManifoldPoints)
  tolua_error(tolua_S,"array indexing out of range.",NULL);
#endif
  self->tangentImpulses[tolua_index] = ((  float)  tolua_tonumber(tolua_S,3,0));
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: count of class  b2ContactImpulse */
#ifndef TOLUA_DISABLE_tolua_get_b2ContactImpulse_count
static int tolua_get_b2ContactImpulse_count(lua_State* tolua_S)
{
  b2ContactImpulse* self = (b2ContactImpulse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'count'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->count);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: count of class  b2ContactImpulse */
#ifndef TOLUA_DISABLE_tolua_set_b2ContactImpulse_count
static int tolua_set_b2ContactImpulse_count(lua_State* tolua_S)
{
  b2ContactImpulse* self = (b2ContactImpulse*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'count'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->count = (( signed int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2QueryCallback */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2QueryCallback_delete00
static int tolua_LuaBox2D_b2QueryCallback_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2QueryCallback",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2QueryCallback* self = (b2QueryCallback*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ReportFixture of class  b2QueryCallback */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2QueryCallback_ReportFixture00
static int tolua_LuaBox2D_b2QueryCallback_ReportFixture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2QueryCallback",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2QueryCallback* self = (b2QueryCallback*)  tolua_tousertype(tolua_S,1,0);
  b2Fixture* fixture = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ReportFixture'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ReportFixture(fixture);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ReportFixture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  b2RayCastCallback */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RayCastCallback_delete00
static int tolua_LuaBox2D_b2RayCastCallback_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RayCastCallback",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RayCastCallback* self = (b2RayCastCallback*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ReportFixture of class  b2RayCastCallback */
#ifndef TOLUA_DISABLE_tolua_LuaBox2D_b2RayCastCallback_ReportFixture00
static int tolua_LuaBox2D_b2RayCastCallback_ReportFixture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"b2RayCastCallback",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"b2Fixture",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const b2Vec2",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const b2Vec2",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  b2RayCastCallback* self = (b2RayCastCallback*)  tolua_tousertype(tolua_S,1,0);
  b2Fixture* fixture = ((b2Fixture*)  tolua_tousertype(tolua_S,2,0));
  const b2Vec2* point = ((const b2Vec2*)  tolua_tousertype(tolua_S,3,0));
  const b2Vec2* normal = ((const b2Vec2*)  tolua_tousertype(tolua_S,4,0));
   float fraction = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ReportFixture'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->ReportFixture(fixture,*point,*normal,fraction);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ReportFixture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* Open function */
TOLUA_API int tolua_LuaBox2D_open (lua_State* tolua_S)
{
 tolua_open(tolua_S);
 tolua_reg_types(tolua_S);
 tolua_module(tolua_S,NULL,1);
 tolua_beginmodule(tolua_S,NULL);
  tolua_cclass(tolua_S,"b2Block","b2Block","",NULL);
  tolua_beginmodule(tolua_S,"b2Block");
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2Chunk","b2Chunk","",NULL);
  tolua_beginmodule(tolua_S,"b2Chunk");
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2BlockAllocator","b2BlockAllocator","",tolua_collect_b2BlockAllocator);
  #else
  tolua_cclass(tolua_S,"b2BlockAllocator","b2BlockAllocator","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2BlockAllocator");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2BlockAllocator_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2BlockAllocator_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2BlockAllocator_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2BlockAllocator_delete00);
   tolua_function(tolua_S,"Allocate",tolua_LuaBox2D_b2BlockAllocator_Allocate00);
   tolua_function(tolua_S,"Free",tolua_LuaBox2D_b2BlockAllocator_Free00);
   tolua_function(tolua_S,"Clear",tolua_LuaBox2D_b2BlockAllocator_Clear00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2Fixture","b2Fixture","",NULL);
  tolua_beginmodule(tolua_S,"b2Fixture");
   tolua_function(tolua_S,"GetType",tolua_LuaBox2D_b2Fixture_GetType00);
   tolua_function(tolua_S,"GetShape",tolua_LuaBox2D_b2Fixture_GetShape00);
   tolua_function(tolua_S,"GetShape",tolua_LuaBox2D_b2Fixture_GetShape01);
   tolua_function(tolua_S,"SetSensor",tolua_LuaBox2D_b2Fixture_SetSensor00);
   tolua_function(tolua_S,"IsSensor",tolua_LuaBox2D_b2Fixture_IsSensor00);
   tolua_function(tolua_S,"SetFilterData",tolua_LuaBox2D_b2Fixture_SetFilterData00);
   tolua_function(tolua_S,"GetFilterData",tolua_LuaBox2D_b2Fixture_GetFilterData00);
   tolua_function(tolua_S,"Refilter",tolua_LuaBox2D_b2Fixture_Refilter00);
   tolua_function(tolua_S,"GetBody",tolua_LuaBox2D_b2Fixture_GetBody00);
   tolua_function(tolua_S,"GetBody",tolua_LuaBox2D_b2Fixture_GetBody01);
   tolua_function(tolua_S,"GetNext",tolua_LuaBox2D_b2Fixture_GetNext00);
   tolua_function(tolua_S,"GetNext",tolua_LuaBox2D_b2Fixture_GetNext01);
   tolua_function(tolua_S,"GetUserData",tolua_LuaBox2D_b2Fixture_GetUserData00);
   tolua_function(tolua_S,"SetUserData",tolua_LuaBox2D_b2Fixture_SetUserData00);
   tolua_function(tolua_S,"TestPoint",tolua_LuaBox2D_b2Fixture_TestPoint00);
   tolua_function(tolua_S,"RayCast",tolua_LuaBox2D_b2Fixture_RayCast00);
   tolua_function(tolua_S,"GetMassData",tolua_LuaBox2D_b2Fixture_GetMassData00);
   tolua_function(tolua_S,"SetDensity",tolua_LuaBox2D_b2Fixture_SetDensity00);
   tolua_function(tolua_S,"GetDensity",tolua_LuaBox2D_b2Fixture_GetDensity00);
   tolua_function(tolua_S,"GetFriction",tolua_LuaBox2D_b2Fixture_GetFriction00);
   tolua_function(tolua_S,"SetFriction",tolua_LuaBox2D_b2Fixture_SetFriction00);
   tolua_function(tolua_S,"GetRestitution",tolua_LuaBox2D_b2Fixture_GetRestitution00);
   tolua_function(tolua_S,"SetRestitution",tolua_LuaBox2D_b2Fixture_SetRestitution00);
   tolua_function(tolua_S,"GetAABB",tolua_LuaBox2D_b2Fixture_GetAABB00);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2Fixture_Dump00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2Joint","b2Joint","",NULL);
  tolua_beginmodule(tolua_S,"b2Joint");
   tolua_function(tolua_S,"GetType",tolua_LuaBox2D_b2Joint_GetType00);
   tolua_function(tolua_S,"GetBodyA",tolua_LuaBox2D_b2Joint_GetBodyA00);
   tolua_function(tolua_S,"GetBodyB",tolua_LuaBox2D_b2Joint_GetBodyB00);
   tolua_function(tolua_S,"GetAnchorA",tolua_LuaBox2D_b2Joint_GetAnchorA00);
   tolua_function(tolua_S,"GetAnchorB",tolua_LuaBox2D_b2Joint_GetAnchorB00);
   tolua_function(tolua_S,"GetReactionForce",tolua_LuaBox2D_b2Joint_GetReactionForce00);
   tolua_function(tolua_S,"GetReactionTorque",tolua_LuaBox2D_b2Joint_GetReactionTorque00);
   tolua_function(tolua_S,"GetNext",tolua_LuaBox2D_b2Joint_GetNext00);
   tolua_function(tolua_S,"GetNext",tolua_LuaBox2D_b2Joint_GetNext01);
   tolua_function(tolua_S,"GetUserData",tolua_LuaBox2D_b2Joint_GetUserData00);
   tolua_function(tolua_S,"SetUserData",tolua_LuaBox2D_b2Joint_SetUserData00);
   tolua_function(tolua_S,"IsActive",tolua_LuaBox2D_b2Joint_IsActive00);
   tolua_function(tolua_S,"GetCollideConnected",tolua_LuaBox2D_b2Joint_GetCollideConnected00);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2Joint_Dump00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2Contact","b2Contact","",NULL);
  tolua_beginmodule(tolua_S,"b2Contact");
   tolua_function(tolua_S,"GetManifold",tolua_LuaBox2D_b2Contact_GetManifold00);
   tolua_function(tolua_S,"GetManifold",tolua_LuaBox2D_b2Contact_GetManifold01);
   tolua_function(tolua_S,"GetWorldManifold",tolua_LuaBox2D_b2Contact_GetWorldManifold00);
   tolua_function(tolua_S,"IsTouching",tolua_LuaBox2D_b2Contact_IsTouching00);
   tolua_function(tolua_S,"SetEnabled",tolua_LuaBox2D_b2Contact_SetEnabled00);
   tolua_function(tolua_S,"IsEnabled",tolua_LuaBox2D_b2Contact_IsEnabled00);
   tolua_function(tolua_S,"GetNext",tolua_LuaBox2D_b2Contact_GetNext00);
   tolua_function(tolua_S,"GetNext",tolua_LuaBox2D_b2Contact_GetNext01);
   tolua_function(tolua_S,"GetFixtureA",tolua_LuaBox2D_b2Contact_GetFixtureA00);
   tolua_function(tolua_S,"GetFixtureA",tolua_LuaBox2D_b2Contact_GetFixtureA01);
   tolua_function(tolua_S,"GetChildIndexA",tolua_LuaBox2D_b2Contact_GetChildIndexA00);
   tolua_function(tolua_S,"GetFixtureB",tolua_LuaBox2D_b2Contact_GetFixtureB00);
   tolua_function(tolua_S,"GetFixtureB",tolua_LuaBox2D_b2Contact_GetFixtureB01);
   tolua_function(tolua_S,"GetChildIndexB",tolua_LuaBox2D_b2Contact_GetChildIndexB00);
   tolua_function(tolua_S,"SetFriction",tolua_LuaBox2D_b2Contact_SetFriction00);
   tolua_function(tolua_S,"GetFriction",tolua_LuaBox2D_b2Contact_GetFriction00);
   tolua_function(tolua_S,"ResetFriction",tolua_LuaBox2D_b2Contact_ResetFriction00);
   tolua_function(tolua_S,"SetRestitution",tolua_LuaBox2D_b2Contact_SetRestitution00);
   tolua_function(tolua_S,"GetRestitution",tolua_LuaBox2D_b2Contact_GetRestitution00);
   tolua_function(tolua_S,"ResetRestitution",tolua_LuaBox2D_b2Contact_ResetRestitution00);
   tolua_function(tolua_S,"Evaluate",tolua_LuaBox2D_b2Contact_Evaluate00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2Controller","b2Controller","",NULL);
  tolua_beginmodule(tolua_S,"b2Controller");
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2World","b2World","",tolua_collect_b2World);
  #else
  tolua_cclass(tolua_S,"b2World","b2World","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2World");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2World_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2World_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2World_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2World_delete00);
   tolua_function(tolua_S,"SetDestructionListener",tolua_LuaBox2D_b2World_SetDestructionListener00);
   tolua_function(tolua_S,"SetContactFilter",tolua_LuaBox2D_b2World_SetContactFilter00);
   tolua_function(tolua_S,"SetContactListener",tolua_LuaBox2D_b2World_SetContactListener00);
   tolua_function(tolua_S,"SetDebugDraw",tolua_LuaBox2D_b2World_SetDebugDraw00);
   tolua_function(tolua_S,"CreateBody",tolua_LuaBox2D_b2World_CreateBody00);
   tolua_function(tolua_S,"DestroyBody",tolua_LuaBox2D_b2World_DestroyBody00);
   tolua_function(tolua_S,"CreateJoint",tolua_LuaBox2D_b2World_CreateJoint00);
   tolua_function(tolua_S,"DestroyJoint",tolua_LuaBox2D_b2World_DestroyJoint00);
   tolua_function(tolua_S,"Step",tolua_LuaBox2D_b2World_Step00);
   tolua_function(tolua_S,"ClearForces",tolua_LuaBox2D_b2World_ClearForces00);
   tolua_function(tolua_S,"DrawDebugData",tolua_LuaBox2D_b2World_DrawDebugData00);
   tolua_function(tolua_S,"QueryAABB",tolua_LuaBox2D_b2World_QueryAABB00);
   tolua_function(tolua_S,"RayCast",tolua_LuaBox2D_b2World_RayCast00);
   tolua_function(tolua_S,"GetBodyList",tolua_LuaBox2D_b2World_GetBodyList00);
   tolua_function(tolua_S,"GetBodyList",tolua_LuaBox2D_b2World_GetBodyList01);
   tolua_function(tolua_S,"GetJointList",tolua_LuaBox2D_b2World_GetJointList00);
   tolua_function(tolua_S,"GetJointList",tolua_LuaBox2D_b2World_GetJointList01);
   tolua_function(tolua_S,"GetContactList",tolua_LuaBox2D_b2World_GetContactList00);
   tolua_function(tolua_S,"GetContactList",tolua_LuaBox2D_b2World_GetContactList01);
   tolua_function(tolua_S,"SetAllowSleeping",tolua_LuaBox2D_b2World_SetAllowSleeping00);
   tolua_function(tolua_S,"GetAllowSleeping",tolua_LuaBox2D_b2World_GetAllowSleeping00);
   tolua_function(tolua_S,"SetWarmStarting",tolua_LuaBox2D_b2World_SetWarmStarting00);
   tolua_function(tolua_S,"GetWarmStarting",tolua_LuaBox2D_b2World_GetWarmStarting00);
   tolua_function(tolua_S,"SetContinuousPhysics",tolua_LuaBox2D_b2World_SetContinuousPhysics00);
   tolua_function(tolua_S,"GetContinuousPhysics",tolua_LuaBox2D_b2World_GetContinuousPhysics00);
   tolua_function(tolua_S,"SetSubStepping",tolua_LuaBox2D_b2World_SetSubStepping00);
   tolua_function(tolua_S,"GetSubStepping",tolua_LuaBox2D_b2World_GetSubStepping00);
   tolua_function(tolua_S,"GetProxyCount",tolua_LuaBox2D_b2World_GetProxyCount00);
   tolua_function(tolua_S,"GetBodyCount",tolua_LuaBox2D_b2World_GetBodyCount00);
   tolua_function(tolua_S,"GetJointCount",tolua_LuaBox2D_b2World_GetJointCount00);
   tolua_function(tolua_S,"GetContactCount",tolua_LuaBox2D_b2World_GetContactCount00);
   tolua_function(tolua_S,"GetTreeHeight",tolua_LuaBox2D_b2World_GetTreeHeight00);
   tolua_function(tolua_S,"GetTreeBalance",tolua_LuaBox2D_b2World_GetTreeBalance00);
   tolua_function(tolua_S,"GetTreeQuality",tolua_LuaBox2D_b2World_GetTreeQuality00);
   tolua_function(tolua_S,"SetGravity",tolua_LuaBox2D_b2World_SetGravity00);
   tolua_function(tolua_S,"GetGravity",tolua_LuaBox2D_b2World_GetGravity00);
   tolua_function(tolua_S,"IsLocked",tolua_LuaBox2D_b2World_IsLocked00);
   tolua_function(tolua_S,"SetAutoClearForces",tolua_LuaBox2D_b2World_SetAutoClearForces00);
   tolua_function(tolua_S,"GetAutoClearForces",tolua_LuaBox2D_b2World_GetAutoClearForces00);
   tolua_function(tolua_S,"GetContactManager",tolua_LuaBox2D_b2World_GetContactManager00);
   tolua_function(tolua_S,"GetProfile",tolua_LuaBox2D_b2World_GetProfile00);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2World_Dump00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2FixtureDef","b2FixtureDef","",tolua_collect_b2FixtureDef);
  #else
  tolua_cclass(tolua_S,"b2FixtureDef","b2FixtureDef","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2FixtureDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2FixtureDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2FixtureDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2FixtureDef_new00_local);
   tolua_variable(tolua_S,"shape",tolua_get_b2FixtureDef_shape_ptr,tolua_set_b2FixtureDef_shape_ptr);
   tolua_variable(tolua_S,"userData",tolua_get_b2FixtureDef_userData,tolua_set_b2FixtureDef_userData);
   tolua_variable(tolua_S,"friction",tolua_get_b2FixtureDef_friction,tolua_set_b2FixtureDef_friction);
   tolua_variable(tolua_S,"restitution",tolua_get_b2FixtureDef_restitution,tolua_set_b2FixtureDef_restitution);
   tolua_variable(tolua_S,"density",tolua_get_b2FixtureDef_density,tolua_set_b2FixtureDef_density);
   tolua_variable(tolua_S,"isSensor",tolua_get_b2FixtureDef_isSensor,tolua_set_b2FixtureDef_isSensor);
   tolua_variable(tolua_S,"filter",tolua_get_b2FixtureDef_filter,tolua_set_b2FixtureDef_filter);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2JointEdge","b2JointEdge","",NULL);
  tolua_beginmodule(tolua_S,"b2JointEdge");
   tolua_variable(tolua_S,"other",tolua_get_b2JointEdge_other_ptr,tolua_set_b2JointEdge_other_ptr);
   tolua_variable(tolua_S,"joint",tolua_get_b2JointEdge_joint_ptr,tolua_set_b2JointEdge_joint_ptr);
   tolua_variable(tolua_S,"prev",tolua_get_b2JointEdge_prev_ptr,tolua_set_b2JointEdge_prev_ptr);
   tolua_variable(tolua_S,"next",tolua_get_b2JointEdge_next_ptr,tolua_set_b2JointEdge_next_ptr);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2ContactEdge","b2ContactEdge","",NULL);
  tolua_beginmodule(tolua_S,"b2ContactEdge");
   tolua_variable(tolua_S,"other",tolua_get_b2ContactEdge_other_ptr,tolua_set_b2ContactEdge_other_ptr);
   tolua_variable(tolua_S,"contact",tolua_get_b2ContactEdge_contact_ptr,tolua_set_b2ContactEdge_contact_ptr);
   tolua_variable(tolua_S,"prev",tolua_get_b2ContactEdge_prev_ptr,tolua_set_b2ContactEdge_prev_ptr);
   tolua_variable(tolua_S,"next",tolua_get_b2ContactEdge_next_ptr,tolua_set_b2ContactEdge_next_ptr);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"b2_staticBody",b2_staticBody);
  tolua_constant(tolua_S,"b2_kinematicBody",b2_kinematicBody);
  tolua_constant(tolua_S,"b2_dynamicBody",b2_dynamicBody);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2BodyDef","b2BodyDef","",tolua_collect_b2BodyDef);
  #else
  tolua_cclass(tolua_S,"b2BodyDef","b2BodyDef","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2BodyDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2BodyDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2BodyDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2BodyDef_new00_local);
   tolua_variable(tolua_S,"type",tolua_get_b2BodyDef_type,tolua_set_b2BodyDef_type);
   tolua_variable(tolua_S,"position",tolua_get_b2BodyDef_position,tolua_set_b2BodyDef_position);
   tolua_variable(tolua_S,"angle",tolua_get_b2BodyDef_angle,tolua_set_b2BodyDef_angle);
   tolua_variable(tolua_S,"linearVelocity",tolua_get_b2BodyDef_linearVelocity,tolua_set_b2BodyDef_linearVelocity);
   tolua_variable(tolua_S,"angularVelocity",tolua_get_b2BodyDef_angularVelocity,tolua_set_b2BodyDef_angularVelocity);
   tolua_variable(tolua_S,"linearDamping",tolua_get_b2BodyDef_linearDamping,tolua_set_b2BodyDef_linearDamping);
   tolua_variable(tolua_S,"angularDamping",tolua_get_b2BodyDef_angularDamping,tolua_set_b2BodyDef_angularDamping);
   tolua_variable(tolua_S,"allowSleep",tolua_get_b2BodyDef_allowSleep,tolua_set_b2BodyDef_allowSleep);
   tolua_variable(tolua_S,"awake",tolua_get_b2BodyDef_awake,tolua_set_b2BodyDef_awake);
   tolua_variable(tolua_S,"fixedRotation",tolua_get_b2BodyDef_fixedRotation,tolua_set_b2BodyDef_fixedRotation);
   tolua_variable(tolua_S,"bullet",tolua_get_b2BodyDef_bullet,tolua_set_b2BodyDef_bullet);
   tolua_variable(tolua_S,"active",tolua_get_b2BodyDef_active,tolua_set_b2BodyDef_active);
   tolua_variable(tolua_S,"userData",tolua_get_b2BodyDef_userData,tolua_set_b2BodyDef_userData);
   tolua_variable(tolua_S,"gravityScale",tolua_get_b2BodyDef_gravityScale,tolua_set_b2BodyDef_gravityScale);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2Body","b2Body","",NULL);
  tolua_beginmodule(tolua_S,"b2Body");
   tolua_function(tolua_S,"CreateFixture",tolua_LuaBox2D_b2Body_CreateFixture00);
   tolua_function(tolua_S,"CreateFixture",tolua_LuaBox2D_b2Body_CreateFixture01);
   tolua_function(tolua_S,"DestroyFixture",tolua_LuaBox2D_b2Body_DestroyFixture00);
   tolua_function(tolua_S,"SetTransform",tolua_LuaBox2D_b2Body_SetTransform00);
   tolua_function(tolua_S,"GetTransform",tolua_LuaBox2D_b2Body_GetTransform00);
   tolua_function(tolua_S,"GetPosition",tolua_LuaBox2D_b2Body_GetPosition00);
   tolua_function(tolua_S,"GetAngle",tolua_LuaBox2D_b2Body_GetAngle00);
   tolua_function(tolua_S,"GetWorldCenter",tolua_LuaBox2D_b2Body_GetWorldCenter00);
   tolua_function(tolua_S,"GetLocalCenter",tolua_LuaBox2D_b2Body_GetLocalCenter00);
   tolua_function(tolua_S,"SetLinearVelocity",tolua_LuaBox2D_b2Body_SetLinearVelocity00);
   tolua_function(tolua_S,"GetLinearVelocity",tolua_LuaBox2D_b2Body_GetLinearVelocity00);
   tolua_function(tolua_S,"SetAngularVelocity",tolua_LuaBox2D_b2Body_SetAngularVelocity00);
   tolua_function(tolua_S,"GetAngularVelocity",tolua_LuaBox2D_b2Body_GetAngularVelocity00);
   tolua_function(tolua_S,"ApplyForce",tolua_LuaBox2D_b2Body_ApplyForce00);
   tolua_function(tolua_S,"ApplyForceToCenter",tolua_LuaBox2D_b2Body_ApplyForceToCenter00);
   tolua_function(tolua_S,"ApplyTorque",tolua_LuaBox2D_b2Body_ApplyTorque00);
   tolua_function(tolua_S,"ApplyLinearImpulse",tolua_LuaBox2D_b2Body_ApplyLinearImpulse00);
   tolua_function(tolua_S,"ApplyAngularImpulse",tolua_LuaBox2D_b2Body_ApplyAngularImpulse00);
   tolua_function(tolua_S,"GetMass",tolua_LuaBox2D_b2Body_GetMass00);
   tolua_function(tolua_S,"GetInertia",tolua_LuaBox2D_b2Body_GetInertia00);
   tolua_function(tolua_S,"GetMassData",tolua_LuaBox2D_b2Body_GetMassData00);
   tolua_function(tolua_S,"SetMassData",tolua_LuaBox2D_b2Body_SetMassData00);
   tolua_function(tolua_S,"ResetMassData",tolua_LuaBox2D_b2Body_ResetMassData00);
   tolua_function(tolua_S,"GetWorldPoint",tolua_LuaBox2D_b2Body_GetWorldPoint00);
   tolua_function(tolua_S,"GetWorldVector",tolua_LuaBox2D_b2Body_GetWorldVector00);
   tolua_function(tolua_S,"GetLocalPoint",tolua_LuaBox2D_b2Body_GetLocalPoint00);
   tolua_function(tolua_S,"GetLocalVector",tolua_LuaBox2D_b2Body_GetLocalVector00);
   tolua_function(tolua_S,"GetLinearVelocityFromWorldPoint",tolua_LuaBox2D_b2Body_GetLinearVelocityFromWorldPoint00);
   tolua_function(tolua_S,"GetLinearVelocityFromLocalPoint",tolua_LuaBox2D_b2Body_GetLinearVelocityFromLocalPoint00);
   tolua_function(tolua_S,"GetLinearDamping",tolua_LuaBox2D_b2Body_GetLinearDamping00);
   tolua_function(tolua_S,"SetLinearDamping",tolua_LuaBox2D_b2Body_SetLinearDamping00);
   tolua_function(tolua_S,"GetAngularDamping",tolua_LuaBox2D_b2Body_GetAngularDamping00);
   tolua_function(tolua_S,"SetAngularDamping",tolua_LuaBox2D_b2Body_SetAngularDamping00);
   tolua_function(tolua_S,"GetGravityScale",tolua_LuaBox2D_b2Body_GetGravityScale00);
   tolua_function(tolua_S,"SetGravityScale",tolua_LuaBox2D_b2Body_SetGravityScale00);
   tolua_function(tolua_S,"SetType",tolua_LuaBox2D_b2Body_SetType00);
   tolua_function(tolua_S,"GetType",tolua_LuaBox2D_b2Body_GetType00);
   tolua_function(tolua_S,"SetBullet",tolua_LuaBox2D_b2Body_SetBullet00);
   tolua_function(tolua_S,"IsBullet",tolua_LuaBox2D_b2Body_IsBullet00);
   tolua_function(tolua_S,"SetSleepingAllowed",tolua_LuaBox2D_b2Body_SetSleepingAllowed00);
   tolua_function(tolua_S,"IsSleepingAllowed",tolua_LuaBox2D_b2Body_IsSleepingAllowed00);
   tolua_function(tolua_S,"SetAwake",tolua_LuaBox2D_b2Body_SetAwake00);
   tolua_function(tolua_S,"IsAwake",tolua_LuaBox2D_b2Body_IsAwake00);
   tolua_function(tolua_S,"SetActive",tolua_LuaBox2D_b2Body_SetActive00);
   tolua_function(tolua_S,"IsActive",tolua_LuaBox2D_b2Body_IsActive00);
   tolua_function(tolua_S,"SetFixedRotation",tolua_LuaBox2D_b2Body_SetFixedRotation00);
   tolua_function(tolua_S,"IsFixedRotation",tolua_LuaBox2D_b2Body_IsFixedRotation00);
   tolua_function(tolua_S,"GetFixtureList",tolua_LuaBox2D_b2Body_GetFixtureList00);
   tolua_function(tolua_S,"GetFixtureList",tolua_LuaBox2D_b2Body_GetFixtureList01);
   tolua_function(tolua_S,"GetJointList",tolua_LuaBox2D_b2Body_GetJointList00);
   tolua_function(tolua_S,"GetJointList",tolua_LuaBox2D_b2Body_GetJointList01);
   tolua_function(tolua_S,"GetContactList",tolua_LuaBox2D_b2Body_GetContactList00);
   tolua_function(tolua_S,"GetContactList",tolua_LuaBox2D_b2Body_GetContactList01);
   tolua_function(tolua_S,"GetNext",tolua_LuaBox2D_b2Body_GetNext00);
   tolua_function(tolua_S,"GetNext",tolua_LuaBox2D_b2Body_GetNext01);
   tolua_function(tolua_S,"GetUserData",tolua_LuaBox2D_b2Body_GetUserData00);
   tolua_function(tolua_S,"SetUserData",tolua_LuaBox2D_b2Body_SetUserData00);
   tolua_function(tolua_S,"SetUserData",tolua_LuaBox2D_b2Body_SetUserData01);
   tolua_function(tolua_S,"GetWorld",tolua_LuaBox2D_b2Body_GetWorld00);
   tolua_function(tolua_S,"GetWorld",tolua_LuaBox2D_b2Body_GetWorld01);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2Body_Dump00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2Pair","b2Pair","",NULL);
  tolua_beginmodule(tolua_S,"b2Pair");
   tolua_variable(tolua_S,"proxyIdA",tolua_get_b2Pair_proxyIdA,tolua_set_b2Pair_proxyIdA);
   tolua_variable(tolua_S,"proxyIdB",tolua_get_b2Pair_proxyIdB,tolua_set_b2Pair_proxyIdB);
   tolua_variable(tolua_S,"next",tolua_get_b2Pair_next,tolua_set_b2Pair_next);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2BroadPhase","b2BroadPhase","",tolua_collect_b2BroadPhase);
  #else
  tolua_cclass(tolua_S,"b2BroadPhase","b2BroadPhase","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2BroadPhase");
   tolua_constant(tolua_S,"e_nullProxy",b2BroadPhase::e_nullProxy);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2BroadPhase_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2BroadPhase_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2BroadPhase_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2BroadPhase_delete00);
   tolua_function(tolua_S,"CreateProxy",tolua_LuaBox2D_b2BroadPhase_CreateProxy00);
   tolua_function(tolua_S,"DestroyProxy",tolua_LuaBox2D_b2BroadPhase_DestroyProxy00);
   tolua_function(tolua_S,"MoveProxy",tolua_LuaBox2D_b2BroadPhase_MoveProxy00);
   tolua_function(tolua_S,"TouchProxy",tolua_LuaBox2D_b2BroadPhase_TouchProxy00);
   tolua_function(tolua_S,"GetFatAABB",tolua_LuaBox2D_b2BroadPhase_GetFatAABB00);
   tolua_function(tolua_S,"GetUserData",tolua_LuaBox2D_b2BroadPhase_GetUserData00);
   tolua_function(tolua_S,"TestOverlap",tolua_LuaBox2D_b2BroadPhase_TestOverlap00);
   tolua_function(tolua_S,"GetProxyCount",tolua_LuaBox2D_b2BroadPhase_GetProxyCount00);
   tolua_function(tolua_S,"GetTreeHeight",tolua_LuaBox2D_b2BroadPhase_GetTreeHeight00);
   tolua_function(tolua_S,"GetTreeBalance",tolua_LuaBox2D_b2BroadPhase_GetTreeBalance00);
   tolua_function(tolua_S,"GetTreeQuality",tolua_LuaBox2D_b2BroadPhase_GetTreeQuality00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2ChainAndCircleContact","b2ChainAndCircleContact","b2Contact",tolua_collect_b2ChainAndCircleContact);
  #else
  tolua_cclass(tolua_S,"b2ChainAndCircleContact","b2ChainAndCircleContact","b2Contact",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2ChainAndCircleContact");
   tolua_function(tolua_S,"Create",tolua_LuaBox2D_b2ChainAndCircleContact_Create00);
   tolua_function(tolua_S,"Destroy",tolua_LuaBox2D_b2ChainAndCircleContact_Destroy00);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2ChainAndCircleContact_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2ChainAndCircleContact_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2ChainAndCircleContact_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2ChainAndCircleContact_delete00);
   tolua_function(tolua_S,"Evaluate",tolua_LuaBox2D_b2ChainAndCircleContact_Evaluate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2ChainAndPolygonContact","b2ChainAndPolygonContact","b2Contact",tolua_collect_b2ChainAndPolygonContact);
  #else
  tolua_cclass(tolua_S,"b2ChainAndPolygonContact","b2ChainAndPolygonContact","b2Contact",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2ChainAndPolygonContact");
   tolua_function(tolua_S,"Create",tolua_LuaBox2D_b2ChainAndPolygonContact_Create00);
   tolua_function(tolua_S,"Destroy",tolua_LuaBox2D_b2ChainAndPolygonContact_Destroy00);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2ChainAndPolygonContact_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2ChainAndPolygonContact_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2ChainAndPolygonContact_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2ChainAndPolygonContact_delete00);
   tolua_function(tolua_S,"Evaluate",tolua_LuaBox2D_b2ChainAndPolygonContact_Evaluate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2EdgeShape","b2EdgeShape","b2Shape",tolua_collect_b2EdgeShape);
  #else
  tolua_cclass(tolua_S,"b2EdgeShape","b2EdgeShape","b2Shape",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2EdgeShape");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2EdgeShape_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2EdgeShape_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2EdgeShape_new00_local);
   tolua_function(tolua_S,"Set",tolua_LuaBox2D_b2EdgeShape_Set00);
   tolua_function(tolua_S,"Clone",tolua_LuaBox2D_b2EdgeShape_Clone00);
   tolua_function(tolua_S,"GetChildCount",tolua_LuaBox2D_b2EdgeShape_GetChildCount00);
   tolua_function(tolua_S,"TestPoint",tolua_LuaBox2D_b2EdgeShape_TestPoint00);
   tolua_function(tolua_S,"RayCast",tolua_LuaBox2D_b2EdgeShape_RayCast00);
   tolua_function(tolua_S,"ComputeAABB",tolua_LuaBox2D_b2EdgeShape_ComputeAABB00);
   tolua_function(tolua_S,"ComputeMass",tolua_LuaBox2D_b2EdgeShape_ComputeMass00);
   tolua_variable(tolua_S,"m_vertex1",tolua_get_b2EdgeShape_m_vertex1,tolua_set_b2EdgeShape_m_vertex1);
   tolua_variable(tolua_S,"m_vertex2",tolua_get_b2EdgeShape_m_vertex2,tolua_set_b2EdgeShape_m_vertex2);
   tolua_variable(tolua_S,"m_vertex0",tolua_get_b2EdgeShape_m_vertex0,tolua_set_b2EdgeShape_m_vertex0);
   tolua_variable(tolua_S,"m_vertex3",tolua_get_b2EdgeShape_m_vertex3,tolua_set_b2EdgeShape_m_vertex3);
   tolua_variable(tolua_S,"m_hasVertex0",tolua_get_b2EdgeShape_m_hasVertex0,tolua_set_b2EdgeShape_m_hasVertex0);
   tolua_variable(tolua_S,"m_hasVertex3",tolua_get_b2EdgeShape_m_hasVertex3,tolua_set_b2EdgeShape_m_hasVertex3);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2ChainShape","b2ChainShape","b2Shape",tolua_collect_b2ChainShape);
  #else
  tolua_cclass(tolua_S,"b2ChainShape","b2ChainShape","b2Shape",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2ChainShape");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2ChainShape_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2ChainShape_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2ChainShape_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2ChainShape_delete00);
   tolua_function(tolua_S,"CreateLoop",tolua_LuaBox2D_b2ChainShape_CreateLoop00);
   tolua_function(tolua_S,"CreateChain",tolua_LuaBox2D_b2ChainShape_CreateChain00);
   tolua_function(tolua_S,"SetPrevVertex",tolua_LuaBox2D_b2ChainShape_SetPrevVertex00);
   tolua_function(tolua_S,"SetNextVertex",tolua_LuaBox2D_b2ChainShape_SetNextVertex00);
   tolua_function(tolua_S,"Clone",tolua_LuaBox2D_b2ChainShape_Clone00);
   tolua_function(tolua_S,"GetChildCount",tolua_LuaBox2D_b2ChainShape_GetChildCount00);
   tolua_function(tolua_S,"GetChildEdge",tolua_LuaBox2D_b2ChainShape_GetChildEdge00);
   tolua_function(tolua_S,"TestPoint",tolua_LuaBox2D_b2ChainShape_TestPoint00);
   tolua_function(tolua_S,"RayCast",tolua_LuaBox2D_b2ChainShape_RayCast00);
   tolua_function(tolua_S,"ComputeAABB",tolua_LuaBox2D_b2ChainShape_ComputeAABB00);
   tolua_function(tolua_S,"ComputeMass",tolua_LuaBox2D_b2ChainShape_ComputeMass00);
   tolua_variable(tolua_S,"m_vertices",tolua_get_b2ChainShape_m_vertices_ptr,tolua_set_b2ChainShape_m_vertices_ptr);
   tolua_variable(tolua_S,"m_count",tolua_get_b2ChainShape_m_count,tolua_set_b2ChainShape_m_count);
   tolua_variable(tolua_S,"m_prevVertex",tolua_get_b2ChainShape_m_prevVertex,tolua_set_b2ChainShape_m_prevVertex);
   tolua_variable(tolua_S,"m_nextVertex",tolua_get_b2ChainShape_m_nextVertex,tolua_set_b2ChainShape_m_nextVertex);
   tolua_variable(tolua_S,"m_hasPrevVertex",tolua_get_b2ChainShape_m_hasPrevVertex,tolua_set_b2ChainShape_m_hasPrevVertex);
   tolua_variable(tolua_S,"m_hasNextVertex",tolua_get_b2ChainShape_m_hasNextVertex,tolua_set_b2ChainShape_m_hasNextVertex);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2CircleContact","b2CircleContact","b2Contact",tolua_collect_b2CircleContact);
  #else
  tolua_cclass(tolua_S,"b2CircleContact","b2CircleContact","b2Contact",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2CircleContact");
   tolua_function(tolua_S,"Create",tolua_LuaBox2D_b2CircleContact_Create00);
   tolua_function(tolua_S,"Destroy",tolua_LuaBox2D_b2CircleContact_Destroy00);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2CircleContact_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2CircleContact_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2CircleContact_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2CircleContact_delete00);
   tolua_function(tolua_S,"Evaluate",tolua_LuaBox2D_b2CircleContact_Evaluate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2CircleShape","b2CircleShape","b2Shape",tolua_collect_b2CircleShape);
  #else
  tolua_cclass(tolua_S,"b2CircleShape","b2CircleShape","b2Shape",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2CircleShape");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2CircleShape_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2CircleShape_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2CircleShape_new00_local);
   tolua_function(tolua_S,"Clone",tolua_LuaBox2D_b2CircleShape_Clone00);
   tolua_function(tolua_S,"GetChildCount",tolua_LuaBox2D_b2CircleShape_GetChildCount00);
   tolua_function(tolua_S,"TestPoint",tolua_LuaBox2D_b2CircleShape_TestPoint00);
   tolua_function(tolua_S,"RayCast",tolua_LuaBox2D_b2CircleShape_RayCast00);
   tolua_function(tolua_S,"ComputeAABB",tolua_LuaBox2D_b2CircleShape_ComputeAABB00);
   tolua_function(tolua_S,"ComputeMass",tolua_LuaBox2D_b2CircleShape_ComputeMass00);
   tolua_function(tolua_S,"GetSupport",tolua_LuaBox2D_b2CircleShape_GetSupport00);
   tolua_function(tolua_S,"GetSupportVertex",tolua_LuaBox2D_b2CircleShape_GetSupportVertex00);
   tolua_function(tolua_S,"GetVertexCount",tolua_LuaBox2D_b2CircleShape_GetVertexCount00);
   tolua_function(tolua_S,"GetVertex",tolua_LuaBox2D_b2CircleShape_GetVertex00);
   tolua_variable(tolua_S,"m_p",tolua_get_b2CircleShape_m_p,tolua_set_b2CircleShape_m_p);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2Shape","b2Shape","",tolua_collect_b2Shape);
  #else
  tolua_cclass(tolua_S,"b2Shape","b2Shape","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2Shape");
   tolua_constant(tolua_S,"e_circle",b2Shape::e_circle);
   tolua_constant(tolua_S,"e_edge",b2Shape::e_edge);
   tolua_constant(tolua_S,"e_polygon",b2Shape::e_polygon);
   tolua_constant(tolua_S,"e_chain",b2Shape::e_chain);
   tolua_constant(tolua_S,"e_typeCount",b2Shape::e_typeCount);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2Shape_delete00);
   tolua_function(tolua_S,"Clone",tolua_LuaBox2D_b2Shape_Clone00);
   tolua_function(tolua_S,"GetType",tolua_LuaBox2D_b2Shape_GetType00);
   tolua_function(tolua_S,"GetChildCount",tolua_LuaBox2D_b2Shape_GetChildCount00);
   tolua_function(tolua_S,"TestPoint",tolua_LuaBox2D_b2Shape_TestPoint00);
   tolua_function(tolua_S,"RayCast",tolua_LuaBox2D_b2Shape_RayCast00);
   tolua_function(tolua_S,"ComputeAABB",tolua_LuaBox2D_b2Shape_ComputeAABB00);
   tolua_function(tolua_S,"ComputeMass",tolua_LuaBox2D_b2Shape_ComputeMass00);
   tolua_variable(tolua_S,"m_type",tolua_get_b2Shape_m_type,tolua_set_b2Shape_m_type);
   tolua_variable(tolua_S,"m_radius",tolua_get_b2Shape_m_radius,tolua_set_b2Shape_m_radius);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2PolygonShape","b2PolygonShape","b2Shape",tolua_collect_b2PolygonShape);
  #else
  tolua_cclass(tolua_S,"b2PolygonShape","b2PolygonShape","b2Shape",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2PolygonShape");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2PolygonShape_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2PolygonShape_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2PolygonShape_new00_local);
   tolua_function(tolua_S,"Clone",tolua_LuaBox2D_b2PolygonShape_Clone00);
   tolua_function(tolua_S,"GetChildCount",tolua_LuaBox2D_b2PolygonShape_GetChildCount00);
   tolua_function(tolua_S,"Set",tolua_LuaBox2D_b2PolygonShape_Set00);
   tolua_function(tolua_S,"SetAsBox",tolua_LuaBox2D_b2PolygonShape_SetAsBox00);
   tolua_function(tolua_S,"SetAsBox",tolua_LuaBox2D_b2PolygonShape_SetAsBox01);
   tolua_function(tolua_S,"TestPoint",tolua_LuaBox2D_b2PolygonShape_TestPoint00);
   tolua_function(tolua_S,"RayCast",tolua_LuaBox2D_b2PolygonShape_RayCast00);
   tolua_function(tolua_S,"ComputeAABB",tolua_LuaBox2D_b2PolygonShape_ComputeAABB00);
   tolua_function(tolua_S,"ComputeMass",tolua_LuaBox2D_b2PolygonShape_ComputeMass00);
   tolua_function(tolua_S,"GetVertexCount",tolua_LuaBox2D_b2PolygonShape_GetVertexCount00);
   tolua_function(tolua_S,"GetVertex",tolua_LuaBox2D_b2PolygonShape_GetVertex00);
   tolua_variable(tolua_S,"m_centroid",tolua_get_b2PolygonShape_m_centroid,tolua_set_b2PolygonShape_m_centroid);
   tolua_array(tolua_S,"m_vertices",tolua_get_LuaBox2D_b2PolygonShape_m_vertices,tolua_set_LuaBox2D_b2PolygonShape_m_vertices);
   tolua_array(tolua_S,"m_normals",tolua_get_LuaBox2D_b2PolygonShape_m_normals,tolua_set_LuaBox2D_b2PolygonShape_m_normals);
   tolua_variable(tolua_S,"m_vertexCount",tolua_get_b2PolygonShape_m_vertexCount,tolua_set_b2PolygonShape_m_vertexCount);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2ContactFeature","b2ContactFeature","",NULL);
  tolua_beginmodule(tolua_S,"b2ContactFeature");
   tolua_constant(tolua_S,"e_vertex",b2ContactFeature::e_vertex);
   tolua_constant(tolua_S,"e_face",b2ContactFeature::e_face);
   tolua_variable(tolua_S,"indexA",tolua_get_b2ContactFeature_indexA,tolua_set_b2ContactFeature_indexA);
   tolua_variable(tolua_S,"indexB",tolua_get_b2ContactFeature_indexB,tolua_set_b2ContactFeature_indexB);
   tolua_variable(tolua_S,"typeA",tolua_get_b2ContactFeature_typeA,tolua_set_b2ContactFeature_typeA);
   tolua_variable(tolua_S,"typeB",tolua_get_b2ContactFeature_typeB,tolua_set_b2ContactFeature_typeB);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2ContactID","b2ContactID","",NULL);
  tolua_beginmodule(tolua_S,"b2ContactID");
   tolua_variable(tolua_S,"cf",tolua_get_b2ContactID_cf,tolua_set_b2ContactID_cf);
   tolua_variable(tolua_S,"key",tolua_get_b2ContactID_key,tolua_set_b2ContactID_key);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2ManifoldPoint","b2ManifoldPoint","",tolua_collect_b2ManifoldPoint);
  #else
  tolua_cclass(tolua_S,"b2ManifoldPoint","b2ManifoldPoint","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2ManifoldPoint");
   tolua_variable(tolua_S,"localPoint",tolua_get_b2ManifoldPoint_localPoint,tolua_set_b2ManifoldPoint_localPoint);
   tolua_variable(tolua_S,"normalImpulse",tolua_get_b2ManifoldPoint_normalImpulse,tolua_set_b2ManifoldPoint_normalImpulse);
   tolua_variable(tolua_S,"tangentImpulse",tolua_get_b2ManifoldPoint_tangentImpulse,tolua_set_b2ManifoldPoint_tangentImpulse);
   tolua_variable(tolua_S,"id",tolua_get_b2ManifoldPoint_id,tolua_set_b2ManifoldPoint_id);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2Manifold","b2Manifold","",NULL);
  tolua_beginmodule(tolua_S,"b2Manifold");
   tolua_constant(tolua_S,"e_circles",b2Manifold::e_circles);
   tolua_constant(tolua_S,"e_faceA",b2Manifold::e_faceA);
   tolua_constant(tolua_S,"e_faceB",b2Manifold::e_faceB);
   tolua_array(tolua_S,"points",tolua_get_LuaBox2D_b2Manifold_points,tolua_set_LuaBox2D_b2Manifold_points);
   tolua_variable(tolua_S,"localNormal",tolua_get_b2Manifold_localNormal,tolua_set_b2Manifold_localNormal);
   tolua_variable(tolua_S,"localPoint",tolua_get_b2Manifold_localPoint,tolua_set_b2Manifold_localPoint);
   tolua_variable(tolua_S,"type",tolua_get_b2Manifold_type,tolua_set_b2Manifold_type);
   tolua_variable(tolua_S,"pointCount",tolua_get_b2Manifold_pointCount,tolua_set_b2Manifold_pointCount);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2WorldManifold","b2WorldManifold","",NULL);
  tolua_beginmodule(tolua_S,"b2WorldManifold");
   tolua_function(tolua_S,"Initialize",tolua_LuaBox2D_b2WorldManifold_Initialize00);
   tolua_variable(tolua_S,"normal",tolua_get_b2WorldManifold_normal,tolua_set_b2WorldManifold_normal);
   tolua_array(tolua_S,"points",tolua_get_LuaBox2D_b2WorldManifold_points,tolua_set_LuaBox2D_b2WorldManifold_points);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"b2_nullState",b2_nullState);
  tolua_constant(tolua_S,"b2_addState",b2_addState);
  tolua_constant(tolua_S,"b2_persistState",b2_persistState);
  tolua_constant(tolua_S,"b2_removeState",b2_removeState);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2ClipVertex","b2ClipVertex","",tolua_collect_b2ClipVertex);
  #else
  tolua_cclass(tolua_S,"b2ClipVertex","b2ClipVertex","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2ClipVertex");
   tolua_variable(tolua_S,"v",tolua_get_b2ClipVertex_v,tolua_set_b2ClipVertex_v);
   tolua_variable(tolua_S,"id",tolua_get_b2ClipVertex_id,tolua_set_b2ClipVertex_id);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2RayCastInput","b2RayCastInput","",NULL);
  tolua_beginmodule(tolua_S,"b2RayCastInput");
   tolua_variable(tolua_S,"p1",tolua_get_b2RayCastInput_p1,tolua_set_b2RayCastInput_p1);
   tolua_variable(tolua_S,"p2",tolua_get_b2RayCastInput_p2,tolua_set_b2RayCastInput_p2);
   tolua_variable(tolua_S,"maxFraction",tolua_get_b2RayCastInput_maxFraction,tolua_set_b2RayCastInput_maxFraction);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2RayCastOutput","b2RayCastOutput","",NULL);
  tolua_beginmodule(tolua_S,"b2RayCastOutput");
   tolua_variable(tolua_S,"normal",tolua_get_b2RayCastOutput_normal,tolua_set_b2RayCastOutput_normal);
   tolua_variable(tolua_S,"fraction",tolua_get_b2RayCastOutput_fraction,tolua_set_b2RayCastOutput_fraction);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2AABB","b2AABB","",NULL);
  tolua_beginmodule(tolua_S,"b2AABB");
   tolua_function(tolua_S,"IsValid",tolua_LuaBox2D_b2AABB_IsValid00);
   tolua_function(tolua_S,"GetCenter",tolua_LuaBox2D_b2AABB_GetCenter00);
   tolua_function(tolua_S,"GetExtents",tolua_LuaBox2D_b2AABB_GetExtents00);
   tolua_function(tolua_S,"GetPerimeter",tolua_LuaBox2D_b2AABB_GetPerimeter00);
   tolua_function(tolua_S,"Combine",tolua_LuaBox2D_b2AABB_Combine00);
   tolua_function(tolua_S,"Combine",tolua_LuaBox2D_b2AABB_Combine01);
   tolua_function(tolua_S,"Contains",tolua_LuaBox2D_b2AABB_Contains00);
   tolua_function(tolua_S,"RayCast",tolua_LuaBox2D_b2AABB_RayCast00);
   tolua_variable(tolua_S,"lowerBound",tolua_get_b2AABB_lowerBound,tolua_set_b2AABB_lowerBound);
   tolua_variable(tolua_S,"upperBound",tolua_get_b2AABB_upperBound,tolua_set_b2AABB_upperBound);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"b2CollideCircles",tolua_LuaBox2D_b2CollideCircles00);
  tolua_function(tolua_S,"b2CollidePolygonAndCircle",tolua_LuaBox2D_b2CollidePolygonAndCircle00);
  tolua_function(tolua_S,"b2CollidePolygons",tolua_LuaBox2D_b2CollidePolygons00);
  tolua_function(tolua_S,"b2CollideEdgeAndCircle",tolua_LuaBox2D_b2CollideEdgeAndCircle00);
  tolua_function(tolua_S,"b2CollideEdgeAndPolygon",tolua_LuaBox2D_b2CollideEdgeAndPolygon00);
  tolua_function(tolua_S,"b2ClipSegmentToLine",tolua_LuaBox2D_b2ClipSegmentToLine00);
  tolua_function(tolua_S,"b2TestOverlap",tolua_LuaBox2D_b2TestOverlap00);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2StackAllocator","b2StackAllocator","",tolua_collect_b2StackAllocator);
  #else
  tolua_cclass(tolua_S,"b2StackAllocator","b2StackAllocator","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2StackAllocator");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2StackAllocator_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2StackAllocator_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2StackAllocator_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2StackAllocator_delete00);
   tolua_function(tolua_S,"Allocate",tolua_LuaBox2D_b2StackAllocator_Allocate00);
   tolua_function(tolua_S,"Free",tolua_LuaBox2D_b2StackAllocator_Free00);
   tolua_function(tolua_S,"GetMaxAllocation",tolua_LuaBox2D_b2StackAllocator_GetMaxAllocation00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2ContactListener","b2ContactListener","",tolua_collect_b2ContactListener);
  #else
  tolua_cclass(tolua_S,"b2ContactListener","b2ContactListener","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2ContactListener");
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2ContactListener_delete00);
   tolua_function(tolua_S,"BeginContact",tolua_LuaBox2D_b2ContactListener_BeginContact00);
   tolua_function(tolua_S,"EndContact",tolua_LuaBox2D_b2ContactListener_EndContact00);
   tolua_function(tolua_S,"PreSolve",tolua_LuaBox2D_b2ContactListener_PreSolve00);
   tolua_function(tolua_S,"PostSolve",tolua_LuaBox2D_b2ContactListener_PostSolve00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2ContactRegister","b2ContactRegister","",NULL);
  tolua_beginmodule(tolua_S,"b2ContactRegister");
   tolua_variable(tolua_S,"createFcn",tolua_get_b2ContactRegister_createFcn_ptr,tolua_set_b2ContactRegister_createFcn_ptr);
   tolua_variable(tolua_S,"destroyFcn",tolua_get_b2ContactRegister_destroyFcn_ptr,tolua_set_b2ContactRegister_destroyFcn_ptr);
   tolua_variable(tolua_S,"primary",tolua_get_b2ContactRegister_primary,tolua_set_b2ContactRegister_primary);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2ContactFilter","b2ContactFilter","",tolua_collect_b2ContactFilter);
  #else
  tolua_cclass(tolua_S,"b2ContactFilter","b2ContactFilter","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2ContactFilter");
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2ContactFilter_delete00);
   tolua_function(tolua_S,"ShouldCollide",tolua_LuaBox2D_b2ContactFilter_ShouldCollide00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2ContactManager","b2ContactManager","",tolua_collect_b2ContactManager);
  #else
  tolua_cclass(tolua_S,"b2ContactManager","b2ContactManager","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2ContactManager");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2ContactManager_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2ContactManager_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2ContactManager_new00_local);
   tolua_function(tolua_S,"AddPair",tolua_LuaBox2D_b2ContactManager_AddPair00);
   tolua_function(tolua_S,"FindNewContacts",tolua_LuaBox2D_b2ContactManager_FindNewContacts00);
   tolua_function(tolua_S,"Destroy",tolua_LuaBox2D_b2ContactManager_Destroy00);
   tolua_function(tolua_S,"Collide",tolua_LuaBox2D_b2ContactManager_Collide00);
   tolua_variable(tolua_S,"m_broadPhase",tolua_get_b2ContactManager_m_broadPhase,tolua_set_b2ContactManager_m_broadPhase);
   tolua_variable(tolua_S,"m_contactList",tolua_get_b2ContactManager_m_contactList_ptr,tolua_set_b2ContactManager_m_contactList_ptr);
   tolua_variable(tolua_S,"m_contactCount",tolua_get_b2ContactManager_m_contactCount,tolua_set_b2ContactManager_m_contactCount);
   tolua_variable(tolua_S,"m_contactFilter",tolua_get_b2ContactManager_m_contactFilter_ptr,tolua_set_b2ContactManager_m_contactFilter_ptr);
   tolua_variable(tolua_S,"m_contactListener",tolua_get_b2ContactManager_m_contactListener_ptr,tolua_set_b2ContactManager_m_contactListener_ptr);
   tolua_variable(tolua_S,"m_allocator",tolua_get_b2ContactManager_m_allocator_ptr,tolua_set_b2ContactManager_m_allocator_ptr);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2ContactPositionConstraint","b2ContactPositionConstraint","",NULL);
  tolua_beginmodule(tolua_S,"b2ContactPositionConstraint");
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2VelocityConstraintPoint","b2VelocityConstraintPoint","",tolua_collect_b2VelocityConstraintPoint);
  #else
  tolua_cclass(tolua_S,"b2VelocityConstraintPoint","b2VelocityConstraintPoint","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2VelocityConstraintPoint");
   tolua_variable(tolua_S,"rA",tolua_get_b2VelocityConstraintPoint_rA,tolua_set_b2VelocityConstraintPoint_rA);
   tolua_variable(tolua_S,"rB",tolua_get_b2VelocityConstraintPoint_rB,tolua_set_b2VelocityConstraintPoint_rB);
   tolua_variable(tolua_S,"normalImpulse",tolua_get_b2VelocityConstraintPoint_normalImpulse,tolua_set_b2VelocityConstraintPoint_normalImpulse);
   tolua_variable(tolua_S,"tangentImpulse",tolua_get_b2VelocityConstraintPoint_tangentImpulse,tolua_set_b2VelocityConstraintPoint_tangentImpulse);
   tolua_variable(tolua_S,"normalMass",tolua_get_b2VelocityConstraintPoint_normalMass,tolua_set_b2VelocityConstraintPoint_normalMass);
   tolua_variable(tolua_S,"tangentMass",tolua_get_b2VelocityConstraintPoint_tangentMass,tolua_set_b2VelocityConstraintPoint_tangentMass);
   tolua_variable(tolua_S,"velocityBias",tolua_get_b2VelocityConstraintPoint_velocityBias,tolua_set_b2VelocityConstraintPoint_velocityBias);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2ContactVelocityConstraint","b2ContactVelocityConstraint","",NULL);
  tolua_beginmodule(tolua_S,"b2ContactVelocityConstraint");
   tolua_array(tolua_S,"points",tolua_get_LuaBox2D_b2ContactVelocityConstraint_points,tolua_set_LuaBox2D_b2ContactVelocityConstraint_points);
   tolua_variable(tolua_S,"normal",tolua_get_b2ContactVelocityConstraint_normal,tolua_set_b2ContactVelocityConstraint_normal);
   tolua_variable(tolua_S,"normalMass",tolua_get_b2ContactVelocityConstraint_normalMass,tolua_set_b2ContactVelocityConstraint_normalMass);
   tolua_variable(tolua_S,"K",tolua_get_b2ContactVelocityConstraint_K,tolua_set_b2ContactVelocityConstraint_K);
   tolua_variable(tolua_S,"indexA",tolua_get_b2ContactVelocityConstraint_indexA,tolua_set_b2ContactVelocityConstraint_indexA);
   tolua_variable(tolua_S,"indexB",tolua_get_b2ContactVelocityConstraint_indexB,tolua_set_b2ContactVelocityConstraint_indexB);
   tolua_variable(tolua_S,"invMassA",tolua_get_b2ContactVelocityConstraint_invMassA,tolua_set_b2ContactVelocityConstraint_invMassA);
   tolua_variable(tolua_S,"invMassB",tolua_get_b2ContactVelocityConstraint_invMassB,tolua_set_b2ContactVelocityConstraint_invMassB);
   tolua_variable(tolua_S,"invIA",tolua_get_b2ContactVelocityConstraint_invIA,tolua_set_b2ContactVelocityConstraint_invIA);
   tolua_variable(tolua_S,"invIB",tolua_get_b2ContactVelocityConstraint_invIB,tolua_set_b2ContactVelocityConstraint_invIB);
   tolua_variable(tolua_S,"friction",tolua_get_b2ContactVelocityConstraint_friction,tolua_set_b2ContactVelocityConstraint_friction);
   tolua_variable(tolua_S,"restitution",tolua_get_b2ContactVelocityConstraint_restitution,tolua_set_b2ContactVelocityConstraint_restitution);
   tolua_variable(tolua_S,"pointCount",tolua_get_b2ContactVelocityConstraint_pointCount,tolua_set_b2ContactVelocityConstraint_pointCount);
   tolua_variable(tolua_S,"contactIndex",tolua_get_b2ContactVelocityConstraint_contactIndex,tolua_set_b2ContactVelocityConstraint_contactIndex);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2ContactSolverDef","b2ContactSolverDef","",NULL);
  tolua_beginmodule(tolua_S,"b2ContactSolverDef");
   tolua_variable(tolua_S,"step",tolua_get_b2ContactSolverDef_step,tolua_set_b2ContactSolverDef_step);
   tolua_variable(tolua_S,"count",tolua_get_b2ContactSolverDef_count,tolua_set_b2ContactSolverDef_count);
   tolua_variable(tolua_S,"positions",tolua_get_b2ContactSolverDef_positions_ptr,tolua_set_b2ContactSolverDef_positions_ptr);
   tolua_variable(tolua_S,"velocities",tolua_get_b2ContactSolverDef_velocities_ptr,tolua_set_b2ContactSolverDef_velocities_ptr);
   tolua_variable(tolua_S,"allocator",tolua_get_b2ContactSolverDef_allocator_ptr,tolua_set_b2ContactSolverDef_allocator_ptr);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2ContactSolver","b2ContactSolver","",tolua_collect_b2ContactSolver);
  #else
  tolua_cclass(tolua_S,"b2ContactSolver","b2ContactSolver","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2ContactSolver");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2ContactSolver_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2ContactSolver_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2ContactSolver_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2ContactSolver_delete00);
   tolua_function(tolua_S,"InitializeVelocityConstraints",tolua_LuaBox2D_b2ContactSolver_InitializeVelocityConstraints00);
   tolua_function(tolua_S,"WarmStart",tolua_LuaBox2D_b2ContactSolver_WarmStart00);
   tolua_function(tolua_S,"SolveVelocityConstraints",tolua_LuaBox2D_b2ContactSolver_SolveVelocityConstraints00);
   tolua_function(tolua_S,"StoreImpulses",tolua_LuaBox2D_b2ContactSolver_StoreImpulses00);
   tolua_function(tolua_S,"SolvePositionConstraints",tolua_LuaBox2D_b2ContactSolver_SolvePositionConstraints00);
   tolua_function(tolua_S,"SolveTOIPositionConstraints",tolua_LuaBox2D_b2ContactSolver_SolveTOIPositionConstraints00);
   tolua_variable(tolua_S,"m_step",tolua_get_b2ContactSolver_m_step,tolua_set_b2ContactSolver_m_step);
   tolua_variable(tolua_S,"m_positions",tolua_get_b2ContactSolver_m_positions_ptr,tolua_set_b2ContactSolver_m_positions_ptr);
   tolua_variable(tolua_S,"m_velocities",tolua_get_b2ContactSolver_m_velocities_ptr,tolua_set_b2ContactSolver_m_velocities_ptr);
   tolua_variable(tolua_S,"m_allocator",tolua_get_b2ContactSolver_m_allocator_ptr,tolua_set_b2ContactSolver_m_allocator_ptr);
   tolua_variable(tolua_S,"m_positionConstraints",tolua_get_b2ContactSolver_m_positionConstraints_ptr,tolua_set_b2ContactSolver_m_positionConstraints_ptr);
   tolua_variable(tolua_S,"m_velocityConstraints",tolua_get_b2ContactSolver_m_velocityConstraints_ptr,tolua_set_b2ContactSolver_m_velocityConstraints_ptr);
   tolua_variable(tolua_S,"m_count",tolua_get_b2ContactSolver_m_count,tolua_set_b2ContactSolver_m_count);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2DistanceProxy","b2DistanceProxy","",tolua_collect_b2DistanceProxy);
  #else
  tolua_cclass(tolua_S,"b2DistanceProxy","b2DistanceProxy","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2DistanceProxy");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2DistanceProxy_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2DistanceProxy_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2DistanceProxy_new00_local);
   tolua_function(tolua_S,"Set",tolua_LuaBox2D_b2DistanceProxy_Set00);
   tolua_function(tolua_S,"GetSupport",tolua_LuaBox2D_b2DistanceProxy_GetSupport00);
   tolua_function(tolua_S,"GetSupportVertex",tolua_LuaBox2D_b2DistanceProxy_GetSupportVertex00);
   tolua_function(tolua_S,"GetVertexCount",tolua_LuaBox2D_b2DistanceProxy_GetVertexCount00);
   tolua_function(tolua_S,"GetVertex",tolua_LuaBox2D_b2DistanceProxy_GetVertex00);
   tolua_array(tolua_S,"m_buffer",tolua_get_LuaBox2D_b2DistanceProxy_m_buffer,tolua_set_LuaBox2D_b2DistanceProxy_m_buffer);
   tolua_variable(tolua_S,"m_vertices",tolua_get_b2DistanceProxy_m_vertices_ptr,NULL);
   tolua_variable(tolua_S,"m_count",tolua_get_b2DistanceProxy_m_count,tolua_set_b2DistanceProxy_m_count);
   tolua_variable(tolua_S,"m_radius",tolua_get_b2DistanceProxy_m_radius,tolua_set_b2DistanceProxy_m_radius);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2SimplexCache","b2SimplexCache","",NULL);
  tolua_beginmodule(tolua_S,"b2SimplexCache");
   tolua_variable(tolua_S,"metric",tolua_get_b2SimplexCache_metric,tolua_set_b2SimplexCache_metric);
   tolua_variable(tolua_S,"count",tolua_get_b2SimplexCache_count,tolua_set_b2SimplexCache_count);
   tolua_array(tolua_S,"indexA",tolua_get_LuaBox2D_b2SimplexCache_indexA,tolua_set_LuaBox2D_b2SimplexCache_indexA);
   tolua_array(tolua_S,"indexB",tolua_get_LuaBox2D_b2SimplexCache_indexB,tolua_set_LuaBox2D_b2SimplexCache_indexB);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2DistanceInput","b2DistanceInput","",NULL);
  tolua_beginmodule(tolua_S,"b2DistanceInput");
   tolua_variable(tolua_S,"proxyA",tolua_get_b2DistanceInput_proxyA,tolua_set_b2DistanceInput_proxyA);
   tolua_variable(tolua_S,"proxyB",tolua_get_b2DistanceInput_proxyB,tolua_set_b2DistanceInput_proxyB);
   tolua_variable(tolua_S,"transformA",tolua_get_b2DistanceInput_transformA,tolua_set_b2DistanceInput_transformA);
   tolua_variable(tolua_S,"transformB",tolua_get_b2DistanceInput_transformB,tolua_set_b2DistanceInput_transformB);
   tolua_variable(tolua_S,"useRadii",tolua_get_b2DistanceInput_useRadii,tolua_set_b2DistanceInput_useRadii);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2DistanceOutput","b2DistanceOutput","",NULL);
  tolua_beginmodule(tolua_S,"b2DistanceOutput");
   tolua_variable(tolua_S,"pointA",tolua_get_b2DistanceOutput_pointA,tolua_set_b2DistanceOutput_pointA);
   tolua_variable(tolua_S,"pointB",tolua_get_b2DistanceOutput_pointB,tolua_set_b2DistanceOutput_pointB);
   tolua_variable(tolua_S,"distance",tolua_get_b2DistanceOutput_distance,tolua_set_b2DistanceOutput_distance);
   tolua_variable(tolua_S,"iterations",tolua_get_b2DistanceOutput_iterations,tolua_set_b2DistanceOutput_iterations);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"b2Distance",tolua_LuaBox2D_b2Distance00);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2DistanceJointDef","b2DistanceJointDef","b2JointDef",tolua_collect_b2DistanceJointDef);
  #else
  tolua_cclass(tolua_S,"b2DistanceJointDef","b2DistanceJointDef","b2JointDef",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2DistanceJointDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2DistanceJointDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2DistanceJointDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2DistanceJointDef_new00_local);
   tolua_function(tolua_S,"Initialize",tolua_LuaBox2D_b2DistanceJointDef_Initialize00);
   tolua_variable(tolua_S,"localAnchorA",tolua_get_b2DistanceJointDef_localAnchorA,tolua_set_b2DistanceJointDef_localAnchorA);
   tolua_variable(tolua_S,"localAnchorB",tolua_get_b2DistanceJointDef_localAnchorB,tolua_set_b2DistanceJointDef_localAnchorB);
   tolua_variable(tolua_S,"length",tolua_get_b2DistanceJointDef_length,tolua_set_b2DistanceJointDef_length);
   tolua_variable(tolua_S,"frequencyHz",tolua_get_b2DistanceJointDef_frequencyHz,tolua_set_b2DistanceJointDef_frequencyHz);
   tolua_variable(tolua_S,"dampingRatio",tolua_get_b2DistanceJointDef_dampingRatio,tolua_set_b2DistanceJointDef_dampingRatio);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2DistanceJoint","b2DistanceJoint","b2Joint",NULL);
  tolua_beginmodule(tolua_S,"b2DistanceJoint");
   tolua_function(tolua_S,"GetAnchorA",tolua_LuaBox2D_b2DistanceJoint_GetAnchorA00);
   tolua_function(tolua_S,"GetAnchorB",tolua_LuaBox2D_b2DistanceJoint_GetAnchorB00);
   tolua_function(tolua_S,"GetReactionForce",tolua_LuaBox2D_b2DistanceJoint_GetReactionForce00);
   tolua_function(tolua_S,"GetReactionTorque",tolua_LuaBox2D_b2DistanceJoint_GetReactionTorque00);
   tolua_function(tolua_S,"GetLocalAnchorA",tolua_LuaBox2D_b2DistanceJoint_GetLocalAnchorA00);
   tolua_function(tolua_S,"GetLocalAnchorB",tolua_LuaBox2D_b2DistanceJoint_GetLocalAnchorB00);
   tolua_function(tolua_S,"SetLength",tolua_LuaBox2D_b2DistanceJoint_SetLength00);
   tolua_function(tolua_S,"GetLength",tolua_LuaBox2D_b2DistanceJoint_GetLength00);
   tolua_function(tolua_S,"SetFrequency",tolua_LuaBox2D_b2DistanceJoint_SetFrequency00);
   tolua_function(tolua_S,"GetFrequency",tolua_LuaBox2D_b2DistanceJoint_GetFrequency00);
   tolua_function(tolua_S,"SetDampingRatio",tolua_LuaBox2D_b2DistanceJoint_SetDampingRatio00);
   tolua_function(tolua_S,"GetDampingRatio",tolua_LuaBox2D_b2DistanceJoint_GetDampingRatio00);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2DistanceJoint_Dump00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2Color","b2Color","",tolua_collect_b2Color);
  #else
  tolua_cclass(tolua_S,"b2Color","b2Color","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2Color");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Color_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Color_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Color_new00_local);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Color_new01);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Color_new01_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Color_new01_local);
   tolua_function(tolua_S,"Set",tolua_LuaBox2D_b2Color_Set00);
   tolua_variable(tolua_S,"r",tolua_get_b2Color_r,tolua_set_b2Color_r);
   tolua_variable(tolua_S,"g",tolua_get_b2Color_g,tolua_set_b2Color_g);
   tolua_variable(tolua_S,"b",tolua_get_b2Color_b,tolua_set_b2Color_b);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2Draw","b2Draw","",tolua_collect_b2Draw);
  #else
  tolua_cclass(tolua_S,"b2Draw","b2Draw","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2Draw");
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2Draw_delete00);
   tolua_constant(tolua_S,"e_shapeBit",b2Draw::e_shapeBit);
   tolua_constant(tolua_S,"e_jointBit",b2Draw::e_jointBit);
   tolua_constant(tolua_S,"e_aabbBit",b2Draw::e_aabbBit);
   tolua_constant(tolua_S,"e_pairBit",b2Draw::e_pairBit);
   tolua_constant(tolua_S,"e_centerOfMassBit",b2Draw::e_centerOfMassBit);
   tolua_function(tolua_S,"SetFlags",tolua_LuaBox2D_b2Draw_SetFlags00);
   tolua_function(tolua_S,"GetFlags",tolua_LuaBox2D_b2Draw_GetFlags00);
   tolua_function(tolua_S,"AppendFlags",tolua_LuaBox2D_b2Draw_AppendFlags00);
   tolua_function(tolua_S,"ClearFlags",tolua_LuaBox2D_b2Draw_ClearFlags00);
   tolua_function(tolua_S,"DrawPolygon",tolua_LuaBox2D_b2Draw_DrawPolygon00);
   tolua_function(tolua_S,"DrawSolidPolygon",tolua_LuaBox2D_b2Draw_DrawSolidPolygon00);
   tolua_function(tolua_S,"DrawCircle",tolua_LuaBox2D_b2Draw_DrawCircle00);
   tolua_function(tolua_S,"DrawSolidCircle",tolua_LuaBox2D_b2Draw_DrawSolidCircle00);
   tolua_function(tolua_S,"DrawSegment",tolua_LuaBox2D_b2Draw_DrawSegment00);
   tolua_function(tolua_S,"DrawTransform",tolua_LuaBox2D_b2Draw_DrawTransform00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"b2_nullNode",b2_nullNode);
  tolua_cclass(tolua_S,"b2TreeNode","b2TreeNode","",NULL);
  tolua_beginmodule(tolua_S,"b2TreeNode");
   tolua_function(tolua_S,"IsLeaf",tolua_LuaBox2D_b2TreeNode_IsLeaf00);
   tolua_variable(tolua_S,"aabb",tolua_get_b2TreeNode_aabb,tolua_set_b2TreeNode_aabb);
   tolua_variable(tolua_S,"userData",tolua_get_b2TreeNode_userData,tolua_set_b2TreeNode_userData);
   tolua_variable(tolua_S,"child1",tolua_get_b2TreeNode_child1,tolua_set_b2TreeNode_child1);
   tolua_variable(tolua_S,"child2",tolua_get_b2TreeNode_child2,tolua_set_b2TreeNode_child2);
   tolua_variable(tolua_S,"height",tolua_get_b2TreeNode_height,tolua_set_b2TreeNode_height);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2DynamicTree","b2DynamicTree","",tolua_collect_b2DynamicTree);
  #else
  tolua_cclass(tolua_S,"b2DynamicTree","b2DynamicTree","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2DynamicTree");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2DynamicTree_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2DynamicTree_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2DynamicTree_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2DynamicTree_delete00);
   tolua_function(tolua_S,"CreateProxy",tolua_LuaBox2D_b2DynamicTree_CreateProxy00);
   tolua_function(tolua_S,"DestroyProxy",tolua_LuaBox2D_b2DynamicTree_DestroyProxy00);
   tolua_function(tolua_S,"MoveProxy",tolua_LuaBox2D_b2DynamicTree_MoveProxy00);
   tolua_function(tolua_S,"GetUserData",tolua_LuaBox2D_b2DynamicTree_GetUserData00);
   tolua_function(tolua_S,"GetFatAABB",tolua_LuaBox2D_b2DynamicTree_GetFatAABB00);
   tolua_function(tolua_S,"Validate",tolua_LuaBox2D_b2DynamicTree_Validate00);
   tolua_function(tolua_S,"GetHeight",tolua_LuaBox2D_b2DynamicTree_GetHeight00);
   tolua_function(tolua_S,"GetMaxBalance",tolua_LuaBox2D_b2DynamicTree_GetMaxBalance00);
   tolua_function(tolua_S,"GetAreaRatio",tolua_LuaBox2D_b2DynamicTree_GetAreaRatio00);
   tolua_function(tolua_S,"RebuildBottomUp",tolua_LuaBox2D_b2DynamicTree_RebuildBottomUp00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2EdgeAndCircleContact","b2EdgeAndCircleContact","b2Contact",tolua_collect_b2EdgeAndCircleContact);
  #else
  tolua_cclass(tolua_S,"b2EdgeAndCircleContact","b2EdgeAndCircleContact","b2Contact",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2EdgeAndCircleContact");
   tolua_function(tolua_S,"Create",tolua_LuaBox2D_b2EdgeAndCircleContact_Create00);
   tolua_function(tolua_S,"Destroy",tolua_LuaBox2D_b2EdgeAndCircleContact_Destroy00);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2EdgeAndCircleContact_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2EdgeAndCircleContact_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2EdgeAndCircleContact_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2EdgeAndCircleContact_delete00);
   tolua_function(tolua_S,"Evaluate",tolua_LuaBox2D_b2EdgeAndCircleContact_Evaluate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2EdgeAndPolygonContact","b2EdgeAndPolygonContact","b2Contact",tolua_collect_b2EdgeAndPolygonContact);
  #else
  tolua_cclass(tolua_S,"b2EdgeAndPolygonContact","b2EdgeAndPolygonContact","b2Contact",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2EdgeAndPolygonContact");
   tolua_function(tolua_S,"Create",tolua_LuaBox2D_b2EdgeAndPolygonContact_Create00);
   tolua_function(tolua_S,"Destroy",tolua_LuaBox2D_b2EdgeAndPolygonContact_Destroy00);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2EdgeAndPolygonContact_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2EdgeAndPolygonContact_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2EdgeAndPolygonContact_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2EdgeAndPolygonContact_delete00);
   tolua_function(tolua_S,"Evaluate",tolua_LuaBox2D_b2EdgeAndPolygonContact_Evaluate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2Filter","b2Filter","",tolua_collect_b2Filter);
  #else
  tolua_cclass(tolua_S,"b2Filter","b2Filter","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2Filter");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Filter_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Filter_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Filter_new00_local);
   tolua_variable(tolua_S,"categoryBits",tolua_get_b2Filter_categoryBits,tolua_set_b2Filter_categoryBits);
   tolua_variable(tolua_S,"maskBits",tolua_get_b2Filter_maskBits,tolua_set_b2Filter_maskBits);
   tolua_variable(tolua_S,"groupIndex",tolua_get_b2Filter_groupIndex,tolua_set_b2Filter_groupIndex);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2FixtureProxy","b2FixtureProxy","",NULL);
  tolua_beginmodule(tolua_S,"b2FixtureProxy");
   tolua_variable(tolua_S,"aabb",tolua_get_b2FixtureProxy_aabb,tolua_set_b2FixtureProxy_aabb);
   tolua_variable(tolua_S,"fixture",tolua_get_b2FixtureProxy_fixture_ptr,tolua_set_b2FixtureProxy_fixture_ptr);
   tolua_variable(tolua_S,"childIndex",tolua_get_b2FixtureProxy_childIndex,tolua_set_b2FixtureProxy_childIndex);
   tolua_variable(tolua_S,"proxyId",tolua_get_b2FixtureProxy_proxyId,tolua_set_b2FixtureProxy_proxyId);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2FrictionJointDef","b2FrictionJointDef","b2JointDef",tolua_collect_b2FrictionJointDef);
  #else
  tolua_cclass(tolua_S,"b2FrictionJointDef","b2FrictionJointDef","b2JointDef",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2FrictionJointDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2FrictionJointDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2FrictionJointDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2FrictionJointDef_new00_local);
   tolua_function(tolua_S,"Initialize",tolua_LuaBox2D_b2FrictionJointDef_Initialize00);
   tolua_variable(tolua_S,"localAnchorA",tolua_get_b2FrictionJointDef_localAnchorA,tolua_set_b2FrictionJointDef_localAnchorA);
   tolua_variable(tolua_S,"localAnchorB",tolua_get_b2FrictionJointDef_localAnchorB,tolua_set_b2FrictionJointDef_localAnchorB);
   tolua_variable(tolua_S,"maxForce",tolua_get_b2FrictionJointDef_maxForce,tolua_set_b2FrictionJointDef_maxForce);
   tolua_variable(tolua_S,"maxTorque",tolua_get_b2FrictionJointDef_maxTorque,tolua_set_b2FrictionJointDef_maxTorque);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2FrictionJoint","b2FrictionJoint","b2Joint",NULL);
  tolua_beginmodule(tolua_S,"b2FrictionJoint");
   tolua_function(tolua_S,"GetAnchorA",tolua_LuaBox2D_b2FrictionJoint_GetAnchorA00);
   tolua_function(tolua_S,"GetAnchorB",tolua_LuaBox2D_b2FrictionJoint_GetAnchorB00);
   tolua_function(tolua_S,"GetReactionForce",tolua_LuaBox2D_b2FrictionJoint_GetReactionForce00);
   tolua_function(tolua_S,"GetReactionTorque",tolua_LuaBox2D_b2FrictionJoint_GetReactionTorque00);
   tolua_function(tolua_S,"GetLocalAnchorA",tolua_LuaBox2D_b2FrictionJoint_GetLocalAnchorA00);
   tolua_function(tolua_S,"GetLocalAnchorB",tolua_LuaBox2D_b2FrictionJoint_GetLocalAnchorB00);
   tolua_function(tolua_S,"SetMaxForce",tolua_LuaBox2D_b2FrictionJoint_SetMaxForce00);
   tolua_function(tolua_S,"GetMaxForce",tolua_LuaBox2D_b2FrictionJoint_GetMaxForce00);
   tolua_function(tolua_S,"SetMaxTorque",tolua_LuaBox2D_b2FrictionJoint_SetMaxTorque00);
   tolua_function(tolua_S,"GetMaxTorque",tolua_LuaBox2D_b2FrictionJoint_GetMaxTorque00);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2FrictionJoint_Dump00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2GearJointDef","b2GearJointDef","b2JointDef",tolua_collect_b2GearJointDef);
  #else
  tolua_cclass(tolua_S,"b2GearJointDef","b2GearJointDef","b2JointDef",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2GearJointDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2GearJointDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2GearJointDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2GearJointDef_new00_local);
   tolua_variable(tolua_S,"joint1",tolua_get_b2GearJointDef_joint1_ptr,tolua_set_b2GearJointDef_joint1_ptr);
   tolua_variable(tolua_S,"joint2",tolua_get_b2GearJointDef_joint2_ptr,tolua_set_b2GearJointDef_joint2_ptr);
   tolua_variable(tolua_S,"ratio",tolua_get_b2GearJointDef_ratio,tolua_set_b2GearJointDef_ratio);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2GearJoint","b2GearJoint","b2Joint",NULL);
  tolua_beginmodule(tolua_S,"b2GearJoint");
   tolua_function(tolua_S,"GetAnchorA",tolua_LuaBox2D_b2GearJoint_GetAnchorA00);
   tolua_function(tolua_S,"GetAnchorB",tolua_LuaBox2D_b2GearJoint_GetAnchorB00);
   tolua_function(tolua_S,"GetReactionForce",tolua_LuaBox2D_b2GearJoint_GetReactionForce00);
   tolua_function(tolua_S,"GetReactionTorque",tolua_LuaBox2D_b2GearJoint_GetReactionTorque00);
   tolua_function(tolua_S,"GetJoint1",tolua_LuaBox2D_b2GearJoint_GetJoint100);
   tolua_function(tolua_S,"GetJoint2",tolua_LuaBox2D_b2GearJoint_GetJoint200);
   tolua_function(tolua_S,"SetRatio",tolua_LuaBox2D_b2GearJoint_SetRatio00);
   tolua_function(tolua_S,"GetRatio",tolua_LuaBox2D_b2GearJoint_GetRatio00);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2GearJoint_Dump00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2Profile","b2Profile","",NULL);
  tolua_beginmodule(tolua_S,"b2Profile");
   tolua_variable(tolua_S,"step",tolua_get_b2Profile_step,tolua_set_b2Profile_step);
   tolua_variable(tolua_S,"collide",tolua_get_b2Profile_collide,tolua_set_b2Profile_collide);
   tolua_variable(tolua_S,"solve",tolua_get_b2Profile_solve,tolua_set_b2Profile_solve);
   tolua_variable(tolua_S,"solveInit",tolua_get_b2Profile_solveInit,tolua_set_b2Profile_solveInit);
   tolua_variable(tolua_S,"solveVelocity",tolua_get_b2Profile_solveVelocity,tolua_set_b2Profile_solveVelocity);
   tolua_variable(tolua_S,"solvePosition",tolua_get_b2Profile_solvePosition,tolua_set_b2Profile_solvePosition);
   tolua_variable(tolua_S,"broadphase",tolua_get_b2Profile_broadphase,tolua_set_b2Profile_broadphase);
   tolua_variable(tolua_S,"solveTOI",tolua_get_b2Profile_solveTOI,tolua_set_b2Profile_solveTOI);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2Island","b2Island","",tolua_collect_b2Island);
  #else
  tolua_cclass(tolua_S,"b2Island","b2Island","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2Island");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Island_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Island_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Island_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2Island_delete00);
   tolua_function(tolua_S,"Clear",tolua_LuaBox2D_b2Island_Clear00);
   tolua_function(tolua_S,"Solve",tolua_LuaBox2D_b2Island_Solve00);
   tolua_function(tolua_S,"SolveTOI",tolua_LuaBox2D_b2Island_SolveTOI00);
   tolua_function(tolua_S,"Add",tolua_LuaBox2D_b2Island_Add00);
   tolua_function(tolua_S,"Add",tolua_LuaBox2D_b2Island_Add01);
   tolua_function(tolua_S,"Add",tolua_LuaBox2D_b2Island_Add02);
   tolua_function(tolua_S,"Report",tolua_LuaBox2D_b2Island_Report00);
   tolua_variable(tolua_S,"m_allocator",tolua_get_b2Island_m_allocator_ptr,tolua_set_b2Island_m_allocator_ptr);
   tolua_variable(tolua_S,"m_listener",tolua_get_b2Island_m_listener_ptr,tolua_set_b2Island_m_listener_ptr);
   tolua_variable(tolua_S,"m_positions",tolua_get_b2Island_m_positions_ptr,tolua_set_b2Island_m_positions_ptr);
   tolua_variable(tolua_S,"m_velocities",tolua_get_b2Island_m_velocities_ptr,tolua_set_b2Island_m_velocities_ptr);
   tolua_variable(tolua_S,"m_bodyCount",tolua_get_b2Island_m_bodyCount,tolua_set_b2Island_m_bodyCount);
   tolua_variable(tolua_S,"m_jointCount",tolua_get_b2Island_m_jointCount,tolua_set_b2Island_m_jointCount);
   tolua_variable(tolua_S,"m_contactCount",tolua_get_b2Island_m_contactCount,tolua_set_b2Island_m_contactCount);
   tolua_variable(tolua_S,"m_bodyCapacity",tolua_get_b2Island_m_bodyCapacity,tolua_set_b2Island_m_bodyCapacity);
   tolua_variable(tolua_S,"m_contactCapacity",tolua_get_b2Island_m_contactCapacity,tolua_set_b2Island_m_contactCapacity);
   tolua_variable(tolua_S,"m_jointCapacity",tolua_get_b2Island_m_jointCapacity,tolua_set_b2Island_m_jointCapacity);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2SolverData","b2SolverData","",NULL);
  tolua_beginmodule(tolua_S,"b2SolverData");
   tolua_variable(tolua_S,"step",tolua_get_b2SolverData_step,tolua_set_b2SolverData_step);
   tolua_variable(tolua_S,"positions",tolua_get_b2SolverData_positions_ptr,tolua_set_b2SolverData_positions_ptr);
   tolua_variable(tolua_S,"velocities",tolua_get_b2SolverData_velocities_ptr,tolua_set_b2SolverData_velocities_ptr);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"e_unknownJoint",e_unknownJoint);
  tolua_constant(tolua_S,"e_revoluteJoint",e_revoluteJoint);
  tolua_constant(tolua_S,"e_prismaticJoint",e_prismaticJoint);
  tolua_constant(tolua_S,"e_distanceJoint",e_distanceJoint);
  tolua_constant(tolua_S,"e_pulleyJoint",e_pulleyJoint);
  tolua_constant(tolua_S,"e_mouseJoint",e_mouseJoint);
  tolua_constant(tolua_S,"e_gearJoint",e_gearJoint);
  tolua_constant(tolua_S,"e_wheelJoint",e_wheelJoint);
  tolua_constant(tolua_S,"e_weldJoint",e_weldJoint);
  tolua_constant(tolua_S,"e_frictionJoint",e_frictionJoint);
  tolua_constant(tolua_S,"e_ropeJoint",e_ropeJoint);
  tolua_constant(tolua_S,"e_inactiveLimit",e_inactiveLimit);
  tolua_constant(tolua_S,"e_atLowerLimit",e_atLowerLimit);
  tolua_constant(tolua_S,"e_atUpperLimit",e_atUpperLimit);
  tolua_constant(tolua_S,"e_equalLimits",e_equalLimits);
  tolua_cclass(tolua_S,"b2Jacobian","b2Jacobian","",NULL);
  tolua_beginmodule(tolua_S,"b2Jacobian");
   tolua_variable(tolua_S,"linear",tolua_get_b2Jacobian_linear,tolua_set_b2Jacobian_linear);
   tolua_variable(tolua_S,"angularA",tolua_get_b2Jacobian_angularA,tolua_set_b2Jacobian_angularA);
   tolua_variable(tolua_S,"angularB",tolua_get_b2Jacobian_angularB,tolua_set_b2Jacobian_angularB);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2JointDef","b2JointDef","",tolua_collect_b2JointDef);
  #else
  tolua_cclass(tolua_S,"b2JointDef","b2JointDef","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2JointDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2JointDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2JointDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2JointDef_new00_local);
   tolua_variable(tolua_S,"type",tolua_get_b2JointDef_type,tolua_set_b2JointDef_type);
   tolua_variable(tolua_S,"userData",tolua_get_b2JointDef_userData,tolua_set_b2JointDef_userData);
   tolua_variable(tolua_S,"bodyA",tolua_get_b2JointDef_bodyA_ptr,tolua_set_b2JointDef_bodyA_ptr);
   tolua_variable(tolua_S,"bodyB",tolua_get_b2JointDef_bodyB_ptr,tolua_set_b2JointDef_bodyB_ptr);
   tolua_variable(tolua_S,"collideConnected",tolua_get_b2JointDef_collideConnected,tolua_set_b2JointDef_collideConnected);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2Vec2","b2Vec2","",tolua_collect_b2Vec2);
  #else
  tolua_cclass(tolua_S,"b2Vec2","b2Vec2","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2Vec2");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Vec2_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Vec2_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Vec2_new00_local);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Vec2_new01);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Vec2_new01_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Vec2_new01_local);
   tolua_function(tolua_S,"SetZero",tolua_LuaBox2D_b2Vec2_SetZero00);
   tolua_function(tolua_S,"Set",tolua_LuaBox2D_b2Vec2_Set00);
   tolua_function(tolua_S,"Length",tolua_LuaBox2D_b2Vec2_Length00);
   tolua_function(tolua_S,"LengthSquared",tolua_LuaBox2D_b2Vec2_LengthSquared00);
   tolua_function(tolua_S,"Normalize",tolua_LuaBox2D_b2Vec2_Normalize00);
   tolua_function(tolua_S,"IsValid",tolua_LuaBox2D_b2Vec2_IsValid00);
   tolua_function(tolua_S,"Skew",tolua_LuaBox2D_b2Vec2_Skew00);
   tolua_variable(tolua_S,"x",tolua_get_b2Vec2_x,tolua_set_b2Vec2_x);
   tolua_variable(tolua_S,"y",tolua_get_b2Vec2_y,tolua_set_b2Vec2_y);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2Vec3","b2Vec3","",tolua_collect_b2Vec3);
  #else
  tolua_cclass(tolua_S,"b2Vec3","b2Vec3","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2Vec3");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Vec3_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Vec3_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Vec3_new00_local);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Vec3_new01);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Vec3_new01_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Vec3_new01_local);
   tolua_function(tolua_S,"SetZero",tolua_LuaBox2D_b2Vec3_SetZero00);
   tolua_function(tolua_S,"Set",tolua_LuaBox2D_b2Vec3_Set00);
   tolua_variable(tolua_S,"x",tolua_get_b2Vec3_x,tolua_set_b2Vec3_x);
   tolua_variable(tolua_S,"y",tolua_get_b2Vec3_y,tolua_set_b2Vec3_y);
   tolua_variable(tolua_S,"z",tolua_get_b2Vec3_z,tolua_set_b2Vec3_z);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2Mat22","b2Mat22","",tolua_collect_b2Mat22);
  #else
  tolua_cclass(tolua_S,"b2Mat22","b2Mat22","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2Mat22");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Mat22_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Mat22_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Mat22_new00_local);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Mat22_new01);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Mat22_new01_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Mat22_new01_local);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Mat22_new02);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Mat22_new02_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Mat22_new02_local);
   tolua_function(tolua_S,"Set",tolua_LuaBox2D_b2Mat22_Set00);
   tolua_function(tolua_S,"SetIdentity",tolua_LuaBox2D_b2Mat22_SetIdentity00);
   tolua_function(tolua_S,"SetZero",tolua_LuaBox2D_b2Mat22_SetZero00);
   tolua_function(tolua_S,"GetInverse",tolua_LuaBox2D_b2Mat22_GetInverse00);
   tolua_function(tolua_S,"Solve",tolua_LuaBox2D_b2Mat22_Solve00);
   tolua_variable(tolua_S,"ex",tolua_get_b2Mat22_ex,tolua_set_b2Mat22_ex);
   tolua_variable(tolua_S,"ey",tolua_get_b2Mat22_ey,tolua_set_b2Mat22_ey);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2Mat33","b2Mat33","",tolua_collect_b2Mat33);
  #else
  tolua_cclass(tolua_S,"b2Mat33","b2Mat33","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2Mat33");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Mat33_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Mat33_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Mat33_new00_local);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Mat33_new01);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Mat33_new01_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Mat33_new01_local);
   tolua_function(tolua_S,"SetZero",tolua_LuaBox2D_b2Mat33_SetZero00);
   tolua_function(tolua_S,"Solve33",tolua_LuaBox2D_b2Mat33_Solve3300);
   tolua_function(tolua_S,"Solve22",tolua_LuaBox2D_b2Mat33_Solve2200);
   tolua_function(tolua_S,"GetInverse22",tolua_LuaBox2D_b2Mat33_GetInverse2200);
   tolua_function(tolua_S,"GetSymInverse33",tolua_LuaBox2D_b2Mat33_GetSymInverse3300);
   tolua_variable(tolua_S,"ex",tolua_get_b2Mat33_ex,tolua_set_b2Mat33_ex);
   tolua_variable(tolua_S,"ey",tolua_get_b2Mat33_ey,tolua_set_b2Mat33_ey);
   tolua_variable(tolua_S,"ez",tolua_get_b2Mat33_ez,tolua_set_b2Mat33_ez);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2Sweep","b2Sweep","",NULL);
  tolua_beginmodule(tolua_S,"b2Sweep");
   tolua_function(tolua_S,"GetTransform",tolua_LuaBox2D_b2Sweep_GetTransform00);
   tolua_function(tolua_S,"Advance",tolua_LuaBox2D_b2Sweep_Advance00);
   tolua_function(tolua_S,"Normalize",tolua_LuaBox2D_b2Sweep_Normalize00);
   tolua_variable(tolua_S,"localCenter",tolua_get_b2Sweep_localCenter,tolua_set_b2Sweep_localCenter);
   tolua_variable(tolua_S,"c0",tolua_get_b2Sweep_c0,tolua_set_b2Sweep_c0);
   tolua_variable(tolua_S,"c",tolua_get_b2Sweep_c,tolua_set_b2Sweep_c);
   tolua_variable(tolua_S,"a0",tolua_get_b2Sweep_a0,tolua_set_b2Sweep_a0);
   tolua_variable(tolua_S,"a",tolua_get_b2Sweep_a,tolua_set_b2Sweep_a);
   tolua_variable(tolua_S,"alpha0",tolua_get_b2Sweep_alpha0,tolua_set_b2Sweep_alpha0);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2Transform","b2Transform","",tolua_collect_b2Transform);
  #else
  tolua_cclass(tolua_S,"b2Transform","b2Transform","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2Transform");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Transform_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Transform_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Transform_new00_local);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Transform_new01);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Transform_new01_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Transform_new01_local);
   tolua_function(tolua_S,"SetIdentity",tolua_LuaBox2D_b2Transform_SetIdentity00);
   tolua_function(tolua_S,"Set",tolua_LuaBox2D_b2Transform_Set00);
   tolua_variable(tolua_S,"p",tolua_get_b2Transform_p,tolua_set_b2Transform_p);
   tolua_variable(tolua_S,"q",tolua_get_b2Transform_q,tolua_set_b2Transform_q);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2Rot","b2Rot","",tolua_collect_b2Rot);
  #else
  tolua_cclass(tolua_S,"b2Rot","b2Rot","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2Rot");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Rot_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Rot_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Rot_new00_local);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Rot_new01);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Rot_new01_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Rot_new01_local);
   tolua_function(tolua_S,"Set",tolua_LuaBox2D_b2Rot_Set00);
   tolua_function(tolua_S,"SetIdentity",tolua_LuaBox2D_b2Rot_SetIdentity00);
   tolua_function(tolua_S,"GetAngle",tolua_LuaBox2D_b2Rot_GetAngle00);
   tolua_function(tolua_S,"GetXAxis",tolua_LuaBox2D_b2Rot_GetXAxis00);
   tolua_function(tolua_S,"GetYAxis",tolua_LuaBox2D_b2Rot_GetYAxis00);
   tolua_variable(tolua_S,"s",tolua_get_b2Rot_s,tolua_set_b2Rot_s);
   tolua_variable(tolua_S,"c",tolua_get_b2Rot_c,tolua_set_b2Rot_c);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2MouseJointDef","b2MouseJointDef","b2JointDef",tolua_collect_b2MouseJointDef);
  #else
  tolua_cclass(tolua_S,"b2MouseJointDef","b2MouseJointDef","b2JointDef",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2MouseJointDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2MouseJointDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2MouseJointDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2MouseJointDef_new00_local);
   tolua_variable(tolua_S,"target",tolua_get_b2MouseJointDef_target,tolua_set_b2MouseJointDef_target);
   tolua_variable(tolua_S,"maxForce",tolua_get_b2MouseJointDef_maxForce,tolua_set_b2MouseJointDef_maxForce);
   tolua_variable(tolua_S,"frequencyHz",tolua_get_b2MouseJointDef_frequencyHz,tolua_set_b2MouseJointDef_frequencyHz);
   tolua_variable(tolua_S,"dampingRatio",tolua_get_b2MouseJointDef_dampingRatio,tolua_set_b2MouseJointDef_dampingRatio);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2MouseJoint","b2MouseJoint","b2Joint",NULL);
  tolua_beginmodule(tolua_S,"b2MouseJoint");
   tolua_function(tolua_S,"GetAnchorA",tolua_LuaBox2D_b2MouseJoint_GetAnchorA00);
   tolua_function(tolua_S,"GetAnchorB",tolua_LuaBox2D_b2MouseJoint_GetAnchorB00);
   tolua_function(tolua_S,"GetReactionForce",tolua_LuaBox2D_b2MouseJoint_GetReactionForce00);
   tolua_function(tolua_S,"GetReactionTorque",tolua_LuaBox2D_b2MouseJoint_GetReactionTorque00);
   tolua_function(tolua_S,"SetTarget",tolua_LuaBox2D_b2MouseJoint_SetTarget00);
   tolua_function(tolua_S,"GetTarget",tolua_LuaBox2D_b2MouseJoint_GetTarget00);
   tolua_function(tolua_S,"SetMaxForce",tolua_LuaBox2D_b2MouseJoint_SetMaxForce00);
   tolua_function(tolua_S,"GetMaxForce",tolua_LuaBox2D_b2MouseJoint_GetMaxForce00);
   tolua_function(tolua_S,"SetFrequency",tolua_LuaBox2D_b2MouseJoint_SetFrequency00);
   tolua_function(tolua_S,"GetFrequency",tolua_LuaBox2D_b2MouseJoint_GetFrequency00);
   tolua_function(tolua_S,"SetDampingRatio",tolua_LuaBox2D_b2MouseJoint_SetDampingRatio00);
   tolua_function(tolua_S,"GetDampingRatio",tolua_LuaBox2D_b2MouseJoint_GetDampingRatio00);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2MouseJoint_Dump00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2PolygonAndCircleContact","b2PolygonAndCircleContact","b2Contact",tolua_collect_b2PolygonAndCircleContact);
  #else
  tolua_cclass(tolua_S,"b2PolygonAndCircleContact","b2PolygonAndCircleContact","b2Contact",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2PolygonAndCircleContact");
   tolua_function(tolua_S,"Create",tolua_LuaBox2D_b2PolygonAndCircleContact_Create00);
   tolua_function(tolua_S,"Destroy",tolua_LuaBox2D_b2PolygonAndCircleContact_Destroy00);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2PolygonAndCircleContact_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2PolygonAndCircleContact_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2PolygonAndCircleContact_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2PolygonAndCircleContact_delete00);
   tolua_function(tolua_S,"Evaluate",tolua_LuaBox2D_b2PolygonAndCircleContact_Evaluate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2PolygonContact","b2PolygonContact","b2Contact",tolua_collect_b2PolygonContact);
  #else
  tolua_cclass(tolua_S,"b2PolygonContact","b2PolygonContact","b2Contact",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2PolygonContact");
   tolua_function(tolua_S,"Create",tolua_LuaBox2D_b2PolygonContact_Create00);
   tolua_function(tolua_S,"Destroy",tolua_LuaBox2D_b2PolygonContact_Destroy00);
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2PolygonContact_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2PolygonContact_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2PolygonContact_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2PolygonContact_delete00);
   tolua_function(tolua_S,"Evaluate",tolua_LuaBox2D_b2PolygonContact_Evaluate00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2PrismaticJointDef","b2PrismaticJointDef","b2JointDef",tolua_collect_b2PrismaticJointDef);
  #else
  tolua_cclass(tolua_S,"b2PrismaticJointDef","b2PrismaticJointDef","b2JointDef",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2PrismaticJointDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2PrismaticJointDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2PrismaticJointDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2PrismaticJointDef_new00_local);
   tolua_function(tolua_S,"Initialize",tolua_LuaBox2D_b2PrismaticJointDef_Initialize00);
   tolua_variable(tolua_S,"localAnchorA",tolua_get_b2PrismaticJointDef_localAnchorA,tolua_set_b2PrismaticJointDef_localAnchorA);
   tolua_variable(tolua_S,"localAnchorB",tolua_get_b2PrismaticJointDef_localAnchorB,tolua_set_b2PrismaticJointDef_localAnchorB);
   tolua_variable(tolua_S,"localAxisA",tolua_get_b2PrismaticJointDef_localAxisA,tolua_set_b2PrismaticJointDef_localAxisA);
   tolua_variable(tolua_S,"referenceAngle",tolua_get_b2PrismaticJointDef_referenceAngle,tolua_set_b2PrismaticJointDef_referenceAngle);
   tolua_variable(tolua_S,"enableLimit",tolua_get_b2PrismaticJointDef_enableLimit,tolua_set_b2PrismaticJointDef_enableLimit);
   tolua_variable(tolua_S,"lowerTranslation",tolua_get_b2PrismaticJointDef_lowerTranslation,tolua_set_b2PrismaticJointDef_lowerTranslation);
   tolua_variable(tolua_S,"upperTranslation",tolua_get_b2PrismaticJointDef_upperTranslation,tolua_set_b2PrismaticJointDef_upperTranslation);
   tolua_variable(tolua_S,"enableMotor",tolua_get_b2PrismaticJointDef_enableMotor,tolua_set_b2PrismaticJointDef_enableMotor);
   tolua_variable(tolua_S,"maxMotorForce",tolua_get_b2PrismaticJointDef_maxMotorForce,tolua_set_b2PrismaticJointDef_maxMotorForce);
   tolua_variable(tolua_S,"motorSpeed",tolua_get_b2PrismaticJointDef_motorSpeed,tolua_set_b2PrismaticJointDef_motorSpeed);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2PrismaticJoint","b2PrismaticJoint","b2Joint",NULL);
  tolua_beginmodule(tolua_S,"b2PrismaticJoint");
   tolua_function(tolua_S,"GetAnchorA",tolua_LuaBox2D_b2PrismaticJoint_GetAnchorA00);
   tolua_function(tolua_S,"GetAnchorB",tolua_LuaBox2D_b2PrismaticJoint_GetAnchorB00);
   tolua_function(tolua_S,"GetReactionForce",tolua_LuaBox2D_b2PrismaticJoint_GetReactionForce00);
   tolua_function(tolua_S,"GetReactionTorque",tolua_LuaBox2D_b2PrismaticJoint_GetReactionTorque00);
   tolua_function(tolua_S,"GetLocalAnchorA",tolua_LuaBox2D_b2PrismaticJoint_GetLocalAnchorA00);
   tolua_function(tolua_S,"GetLocalAnchorB",tolua_LuaBox2D_b2PrismaticJoint_GetLocalAnchorB00);
   tolua_function(tolua_S,"GetLocalAxisA",tolua_LuaBox2D_b2PrismaticJoint_GetLocalAxisA00);
   tolua_function(tolua_S,"GetReferenceAngle",tolua_LuaBox2D_b2PrismaticJoint_GetReferenceAngle00);
   tolua_function(tolua_S,"GetJointTranslation",tolua_LuaBox2D_b2PrismaticJoint_GetJointTranslation00);
   tolua_function(tolua_S,"GetJointSpeed",tolua_LuaBox2D_b2PrismaticJoint_GetJointSpeed00);
   tolua_function(tolua_S,"IsLimitEnabled",tolua_LuaBox2D_b2PrismaticJoint_IsLimitEnabled00);
   tolua_function(tolua_S,"EnableLimit",tolua_LuaBox2D_b2PrismaticJoint_EnableLimit00);
   tolua_function(tolua_S,"GetLowerLimit",tolua_LuaBox2D_b2PrismaticJoint_GetLowerLimit00);
   tolua_function(tolua_S,"GetUpperLimit",tolua_LuaBox2D_b2PrismaticJoint_GetUpperLimit00);
   tolua_function(tolua_S,"SetLimits",tolua_LuaBox2D_b2PrismaticJoint_SetLimits00);
   tolua_function(tolua_S,"IsMotorEnabled",tolua_LuaBox2D_b2PrismaticJoint_IsMotorEnabled00);
   tolua_function(tolua_S,"EnableMotor",tolua_LuaBox2D_b2PrismaticJoint_EnableMotor00);
   tolua_function(tolua_S,"SetMotorSpeed",tolua_LuaBox2D_b2PrismaticJoint_SetMotorSpeed00);
   tolua_function(tolua_S,"GetMotorSpeed",tolua_LuaBox2D_b2PrismaticJoint_GetMotorSpeed00);
   tolua_function(tolua_S,"SetMaxMotorForce",tolua_LuaBox2D_b2PrismaticJoint_SetMaxMotorForce00);
   tolua_function(tolua_S,"GetMaxMotorForce",tolua_LuaBox2D_b2PrismaticJoint_GetMaxMotorForce00);
   tolua_function(tolua_S,"GetMotorForce",tolua_LuaBox2D_b2PrismaticJoint_GetMotorForce00);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2PrismaticJoint_Dump00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2PulleyJointDef","b2PulleyJointDef","b2JointDef",tolua_collect_b2PulleyJointDef);
  #else
  tolua_cclass(tolua_S,"b2PulleyJointDef","b2PulleyJointDef","b2JointDef",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2PulleyJointDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2PulleyJointDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2PulleyJointDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2PulleyJointDef_new00_local);
   tolua_function(tolua_S,"Initialize",tolua_LuaBox2D_b2PulleyJointDef_Initialize00);
   tolua_variable(tolua_S,"groundAnchorA",tolua_get_b2PulleyJointDef_groundAnchorA,tolua_set_b2PulleyJointDef_groundAnchorA);
   tolua_variable(tolua_S,"groundAnchorB",tolua_get_b2PulleyJointDef_groundAnchorB,tolua_set_b2PulleyJointDef_groundAnchorB);
   tolua_variable(tolua_S,"localAnchorA",tolua_get_b2PulleyJointDef_localAnchorA,tolua_set_b2PulleyJointDef_localAnchorA);
   tolua_variable(tolua_S,"localAnchorB",tolua_get_b2PulleyJointDef_localAnchorB,tolua_set_b2PulleyJointDef_localAnchorB);
   tolua_variable(tolua_S,"lengthA",tolua_get_b2PulleyJointDef_lengthA,tolua_set_b2PulleyJointDef_lengthA);
   tolua_variable(tolua_S,"lengthB",tolua_get_b2PulleyJointDef_lengthB,tolua_set_b2PulleyJointDef_lengthB);
   tolua_variable(tolua_S,"ratio",tolua_get_b2PulleyJointDef_ratio,tolua_set_b2PulleyJointDef_ratio);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2PulleyJoint","b2PulleyJoint","b2Joint",NULL);
  tolua_beginmodule(tolua_S,"b2PulleyJoint");
   tolua_function(tolua_S,"GetAnchorA",tolua_LuaBox2D_b2PulleyJoint_GetAnchorA00);
   tolua_function(tolua_S,"GetAnchorB",tolua_LuaBox2D_b2PulleyJoint_GetAnchorB00);
   tolua_function(tolua_S,"GetReactionForce",tolua_LuaBox2D_b2PulleyJoint_GetReactionForce00);
   tolua_function(tolua_S,"GetReactionTorque",tolua_LuaBox2D_b2PulleyJoint_GetReactionTorque00);
   tolua_function(tolua_S,"GetGroundAnchorA",tolua_LuaBox2D_b2PulleyJoint_GetGroundAnchorA00);
   tolua_function(tolua_S,"GetGroundAnchorB",tolua_LuaBox2D_b2PulleyJoint_GetGroundAnchorB00);
   tolua_function(tolua_S,"GetLengthA",tolua_LuaBox2D_b2PulleyJoint_GetLengthA00);
   tolua_function(tolua_S,"GetLengthB",tolua_LuaBox2D_b2PulleyJoint_GetLengthB00);
   tolua_function(tolua_S,"GetRatio",tolua_LuaBox2D_b2PulleyJoint_GetRatio00);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2PulleyJoint_Dump00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2RevoluteJointDef","b2RevoluteJointDef","b2JointDef",tolua_collect_b2RevoluteJointDef);
  #else
  tolua_cclass(tolua_S,"b2RevoluteJointDef","b2RevoluteJointDef","b2JointDef",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2RevoluteJointDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2RevoluteJointDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2RevoluteJointDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2RevoluteJointDef_new00_local);
   tolua_function(tolua_S,"Initialize",tolua_LuaBox2D_b2RevoluteJointDef_Initialize00);
   tolua_variable(tolua_S,"localAnchorA",tolua_get_b2RevoluteJointDef_localAnchorA,tolua_set_b2RevoluteJointDef_localAnchorA);
   tolua_variable(tolua_S,"localAnchorB",tolua_get_b2RevoluteJointDef_localAnchorB,tolua_set_b2RevoluteJointDef_localAnchorB);
   tolua_variable(tolua_S,"referenceAngle",tolua_get_b2RevoluteJointDef_referenceAngle,tolua_set_b2RevoluteJointDef_referenceAngle);
   tolua_variable(tolua_S,"enableLimit",tolua_get_b2RevoluteJointDef_enableLimit,tolua_set_b2RevoluteJointDef_enableLimit);
   tolua_variable(tolua_S,"lowerAngle",tolua_get_b2RevoluteJointDef_lowerAngle,tolua_set_b2RevoluteJointDef_lowerAngle);
   tolua_variable(tolua_S,"upperAngle",tolua_get_b2RevoluteJointDef_upperAngle,tolua_set_b2RevoluteJointDef_upperAngle);
   tolua_variable(tolua_S,"enableMotor",tolua_get_b2RevoluteJointDef_enableMotor,tolua_set_b2RevoluteJointDef_enableMotor);
   tolua_variable(tolua_S,"motorSpeed",tolua_get_b2RevoluteJointDef_motorSpeed,tolua_set_b2RevoluteJointDef_motorSpeed);
   tolua_variable(tolua_S,"maxMotorTorque",tolua_get_b2RevoluteJointDef_maxMotorTorque,tolua_set_b2RevoluteJointDef_maxMotorTorque);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2RevoluteJoint","b2RevoluteJoint","b2Joint",NULL);
  tolua_beginmodule(tolua_S,"b2RevoluteJoint");
   tolua_function(tolua_S,"GetAnchorA",tolua_LuaBox2D_b2RevoluteJoint_GetAnchorA00);
   tolua_function(tolua_S,"GetAnchorB",tolua_LuaBox2D_b2RevoluteJoint_GetAnchorB00);
   tolua_function(tolua_S,"GetLocalAnchorA",tolua_LuaBox2D_b2RevoluteJoint_GetLocalAnchorA00);
   tolua_function(tolua_S,"GetLocalAnchorB",tolua_LuaBox2D_b2RevoluteJoint_GetLocalAnchorB00);
   tolua_function(tolua_S,"GetReferenceAngle",tolua_LuaBox2D_b2RevoluteJoint_GetReferenceAngle00);
   tolua_function(tolua_S,"GetJointAngle",tolua_LuaBox2D_b2RevoluteJoint_GetJointAngle00);
   tolua_function(tolua_S,"GetJointSpeed",tolua_LuaBox2D_b2RevoluteJoint_GetJointSpeed00);
   tolua_function(tolua_S,"IsLimitEnabled",tolua_LuaBox2D_b2RevoluteJoint_IsLimitEnabled00);
   tolua_function(tolua_S,"EnableLimit",tolua_LuaBox2D_b2RevoluteJoint_EnableLimit00);
   tolua_function(tolua_S,"GetLowerLimit",tolua_LuaBox2D_b2RevoluteJoint_GetLowerLimit00);
   tolua_function(tolua_S,"GetUpperLimit",tolua_LuaBox2D_b2RevoluteJoint_GetUpperLimit00);
   tolua_function(tolua_S,"SetLimits",tolua_LuaBox2D_b2RevoluteJoint_SetLimits00);
   tolua_function(tolua_S,"IsMotorEnabled",tolua_LuaBox2D_b2RevoluteJoint_IsMotorEnabled00);
   tolua_function(tolua_S,"EnableMotor",tolua_LuaBox2D_b2RevoluteJoint_EnableMotor00);
   tolua_function(tolua_S,"SetMotorSpeed",tolua_LuaBox2D_b2RevoluteJoint_SetMotorSpeed00);
   tolua_function(tolua_S,"GetMotorSpeed",tolua_LuaBox2D_b2RevoluteJoint_GetMotorSpeed00);
   tolua_function(tolua_S,"SetMaxMotorTorque",tolua_LuaBox2D_b2RevoluteJoint_SetMaxMotorTorque00);
   tolua_function(tolua_S,"GetMaxMotorTorque",tolua_LuaBox2D_b2RevoluteJoint_GetMaxMotorTorque00);
   tolua_function(tolua_S,"GetReactionForce",tolua_LuaBox2D_b2RevoluteJoint_GetReactionForce00);
   tolua_function(tolua_S,"GetReactionTorque",tolua_LuaBox2D_b2RevoluteJoint_GetReactionTorque00);
   tolua_function(tolua_S,"GetMotorTorque",tolua_LuaBox2D_b2RevoluteJoint_GetMotorTorque00);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2RevoluteJoint_Dump00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2RopeDef","b2RopeDef","",tolua_collect_b2RopeDef);
  #else
  tolua_cclass(tolua_S,"b2RopeDef","b2RopeDef","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2RopeDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2RopeDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2RopeDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2RopeDef_new00_local);
   tolua_variable(tolua_S,"vertices",tolua_get_b2RopeDef_vertices_ptr,tolua_set_b2RopeDef_vertices_ptr);
   tolua_variable(tolua_S,"count",tolua_get_b2RopeDef_count,tolua_set_b2RopeDef_count);
   tolua_variable(tolua_S,"gravity",tolua_get_b2RopeDef_gravity,tolua_set_b2RopeDef_gravity);
   tolua_variable(tolua_S,"damping",tolua_get_b2RopeDef_damping,tolua_set_b2RopeDef_damping);
   tolua_variable(tolua_S,"k2",tolua_get_b2RopeDef_k2,tolua_set_b2RopeDef_k2);
   tolua_variable(tolua_S,"k3",tolua_get_b2RopeDef_k3,tolua_set_b2RopeDef_k3);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2Rope","b2Rope","",tolua_collect_b2Rope);
  #else
  tolua_cclass(tolua_S,"b2Rope","b2Rope","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2Rope");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Rope_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Rope_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Rope_new00_local);
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2Rope_delete00);
   tolua_function(tolua_S,"Initialize",tolua_LuaBox2D_b2Rope_Initialize00);
   tolua_function(tolua_S,"Step",tolua_LuaBox2D_b2Rope_Step00);
   tolua_function(tolua_S,"GetVertexCount",tolua_LuaBox2D_b2Rope_GetVertexCount00);
   tolua_function(tolua_S,"GetVertices",tolua_LuaBox2D_b2Rope_GetVertices00);
   tolua_function(tolua_S,"Draw",tolua_LuaBox2D_b2Rope_Draw00);
   tolua_function(tolua_S,"SetAngle",tolua_LuaBox2D_b2Rope_SetAngle00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2RopeJointDef","b2RopeJointDef","b2JointDef",tolua_collect_b2RopeJointDef);
  #else
  tolua_cclass(tolua_S,"b2RopeJointDef","b2RopeJointDef","b2JointDef",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2RopeJointDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2RopeJointDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2RopeJointDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2RopeJointDef_new00_local);
   tolua_variable(tolua_S,"localAnchorA",tolua_get_b2RopeJointDef_localAnchorA,tolua_set_b2RopeJointDef_localAnchorA);
   tolua_variable(tolua_S,"localAnchorB",tolua_get_b2RopeJointDef_localAnchorB,tolua_set_b2RopeJointDef_localAnchorB);
   tolua_variable(tolua_S,"maxLength",tolua_get_b2RopeJointDef_maxLength,tolua_set_b2RopeJointDef_maxLength);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2RopeJoint","b2RopeJoint","b2Joint",NULL);
  tolua_beginmodule(tolua_S,"b2RopeJoint");
   tolua_function(tolua_S,"GetAnchorA",tolua_LuaBox2D_b2RopeJoint_GetAnchorA00);
   tolua_function(tolua_S,"GetAnchorB",tolua_LuaBox2D_b2RopeJoint_GetAnchorB00);
   tolua_function(tolua_S,"GetReactionForce",tolua_LuaBox2D_b2RopeJoint_GetReactionForce00);
   tolua_function(tolua_S,"GetReactionTorque",tolua_LuaBox2D_b2RopeJoint_GetReactionTorque00);
   tolua_function(tolua_S,"GetLocalAnchorA",tolua_LuaBox2D_b2RopeJoint_GetLocalAnchorA00);
   tolua_function(tolua_S,"GetLocalAnchorB",tolua_LuaBox2D_b2RopeJoint_GetLocalAnchorB00);
   tolua_function(tolua_S,"SetMaxLength",tolua_LuaBox2D_b2RopeJoint_SetMaxLength00);
   tolua_function(tolua_S,"GetMaxLength",tolua_LuaBox2D_b2RopeJoint_GetMaxLength00);
   tolua_function(tolua_S,"GetLimitState",tolua_LuaBox2D_b2RopeJoint_GetLimitState00);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2RopeJoint_Dump00);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"b2Alloc",tolua_LuaBox2D_b2Alloc00);
  tolua_function(tolua_S,"b2Free",tolua_LuaBox2D_b2Free00);
  tolua_cclass(tolua_S,"b2Version","b2Version","",NULL);
  tolua_beginmodule(tolua_S,"b2Version");
   tolua_variable(tolua_S,"major",tolua_get_b2Version_major,tolua_set_b2Version_major);
   tolua_variable(tolua_S,"minor",tolua_get_b2Version_minor,tolua_set_b2Version_minor);
   tolua_variable(tolua_S,"revision",tolua_get_b2Version_revision,tolua_set_b2Version_revision);
  tolua_endmodule(tolua_S);
  tolua_variable(tolua_S,"b2_version",tolua_get_b2_version,tolua_set_b2_version);
  tolua_cclass(tolua_S,"b2MassData","b2MassData","",NULL);
  tolua_beginmodule(tolua_S,"b2MassData");
   tolua_variable(tolua_S,"mass",tolua_get_b2MassData_mass,tolua_set_b2MassData_mass);
   tolua_variable(tolua_S,"center",tolua_get_b2MassData_center,tolua_set_b2MassData_center);
   tolua_variable(tolua_S,"I",tolua_get_b2MassData_I,tolua_set_b2MassData_I);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2StackEntry","b2StackEntry","",NULL);
  tolua_beginmodule(tolua_S,"b2StackEntry");
   tolua_variable(tolua_S,"data",tolua_get_b2StackEntry_data,tolua_set_b2StackEntry_data);
   tolua_variable(tolua_S,"size",tolua_get_b2StackEntry_size,tolua_set_b2StackEntry_size);
   tolua_variable(tolua_S,"usedMalloc",tolua_get_b2StackEntry_usedMalloc,tolua_set_b2StackEntry_usedMalloc);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2TOIInput","b2TOIInput","",NULL);
  tolua_beginmodule(tolua_S,"b2TOIInput");
   tolua_variable(tolua_S,"proxyA",tolua_get_b2TOIInput_proxyA,tolua_set_b2TOIInput_proxyA);
   tolua_variable(tolua_S,"proxyB",tolua_get_b2TOIInput_proxyB,tolua_set_b2TOIInput_proxyB);
   tolua_variable(tolua_S,"sweepA",tolua_get_b2TOIInput_sweepA,tolua_set_b2TOIInput_sweepA);
   tolua_variable(tolua_S,"sweepB",tolua_get_b2TOIInput_sweepB,tolua_set_b2TOIInput_sweepB);
   tolua_variable(tolua_S,"tMax",tolua_get_b2TOIInput_tMax,tolua_set_b2TOIInput_tMax);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2TOIOutput","b2TOIOutput","",NULL);
  tolua_beginmodule(tolua_S,"b2TOIOutput");
   tolua_constant(tolua_S,"e_unknown",b2TOIOutput::e_unknown);
   tolua_constant(tolua_S,"e_failed",b2TOIOutput::e_failed);
   tolua_constant(tolua_S,"e_overlapped",b2TOIOutput::e_overlapped);
   tolua_constant(tolua_S,"e_touching",b2TOIOutput::e_touching);
   tolua_constant(tolua_S,"e_separated",b2TOIOutput::e_separated);
   tolua_variable(tolua_S,"state",tolua_get_b2TOIOutput_state,tolua_set_b2TOIOutput_state);
   tolua_variable(tolua_S,"t",tolua_get_b2TOIOutput_t,tolua_set_b2TOIOutput_t);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"b2TimeOfImpact",tolua_LuaBox2D_b2TimeOfImpact00);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2Timer","b2Timer","",tolua_collect_b2Timer);
  #else
  tolua_cclass(tolua_S,"b2Timer","b2Timer","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2Timer");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2Timer_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2Timer_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2Timer_new00_local);
   tolua_function(tolua_S,"Reset",tolua_LuaBox2D_b2Timer_Reset00);
   tolua_function(tolua_S,"GetMilliseconds",tolua_LuaBox2D_b2Timer_GetMilliseconds00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2TimeStep","b2TimeStep","",NULL);
  tolua_beginmodule(tolua_S,"b2TimeStep");
   tolua_variable(tolua_S,"dt",tolua_get_b2TimeStep_dt,tolua_set_b2TimeStep_dt);
   tolua_variable(tolua_S,"inv_dt",tolua_get_b2TimeStep_inv_dt,tolua_set_b2TimeStep_inv_dt);
   tolua_variable(tolua_S,"dtRatio",tolua_get_b2TimeStep_dtRatio,tolua_set_b2TimeStep_dtRatio);
   tolua_variable(tolua_S,"velocityIterations",tolua_get_b2TimeStep_velocityIterations,tolua_set_b2TimeStep_velocityIterations);
   tolua_variable(tolua_S,"positionIterations",tolua_get_b2TimeStep_positionIterations,tolua_set_b2TimeStep_positionIterations);
   tolua_variable(tolua_S,"warmStarting",tolua_get_b2TimeStep_warmStarting,tolua_set_b2TimeStep_warmStarting);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2Position","b2Position","",NULL);
  tolua_beginmodule(tolua_S,"b2Position");
   tolua_variable(tolua_S,"c",tolua_get_b2Position_c,tolua_set_b2Position_c);
   tolua_variable(tolua_S,"a",tolua_get_b2Position_a,tolua_set_b2Position_a);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2Velocity","b2Velocity","",NULL);
  tolua_beginmodule(tolua_S,"b2Velocity");
   tolua_variable(tolua_S,"v",tolua_get_b2Velocity_v,tolua_set_b2Velocity_v);
   tolua_variable(tolua_S,"w",tolua_get_b2Velocity_w,tolua_set_b2Velocity_w);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2WeldJointDef","b2WeldJointDef","b2JointDef",tolua_collect_b2WeldJointDef);
  #else
  tolua_cclass(tolua_S,"b2WeldJointDef","b2WeldJointDef","b2JointDef",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2WeldJointDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2WeldJointDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2WeldJointDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2WeldJointDef_new00_local);
   tolua_function(tolua_S,"Initialize",tolua_LuaBox2D_b2WeldJointDef_Initialize00);
   tolua_variable(tolua_S,"localAnchorA",tolua_get_b2WeldJointDef_localAnchorA,tolua_set_b2WeldJointDef_localAnchorA);
   tolua_variable(tolua_S,"localAnchorB",tolua_get_b2WeldJointDef_localAnchorB,tolua_set_b2WeldJointDef_localAnchorB);
   tolua_variable(tolua_S,"referenceAngle",tolua_get_b2WeldJointDef_referenceAngle,tolua_set_b2WeldJointDef_referenceAngle);
   tolua_variable(tolua_S,"frequencyHz",tolua_get_b2WeldJointDef_frequencyHz,tolua_set_b2WeldJointDef_frequencyHz);
   tolua_variable(tolua_S,"dampingRatio",tolua_get_b2WeldJointDef_dampingRatio,tolua_set_b2WeldJointDef_dampingRatio);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2WeldJoint","b2WeldJoint","b2Joint",NULL);
  tolua_beginmodule(tolua_S,"b2WeldJoint");
   tolua_function(tolua_S,"GetAnchorA",tolua_LuaBox2D_b2WeldJoint_GetAnchorA00);
   tolua_function(tolua_S,"GetAnchorB",tolua_LuaBox2D_b2WeldJoint_GetAnchorB00);
   tolua_function(tolua_S,"GetReactionForce",tolua_LuaBox2D_b2WeldJoint_GetReactionForce00);
   tolua_function(tolua_S,"GetReactionTorque",tolua_LuaBox2D_b2WeldJoint_GetReactionTorque00);
   tolua_function(tolua_S,"GetLocalAnchorA",tolua_LuaBox2D_b2WeldJoint_GetLocalAnchorA00);
   tolua_function(tolua_S,"GetLocalAnchorB",tolua_LuaBox2D_b2WeldJoint_GetLocalAnchorB00);
   tolua_function(tolua_S,"GetReferenceAngle",tolua_LuaBox2D_b2WeldJoint_GetReferenceAngle00);
   tolua_function(tolua_S,"SetFrequency",tolua_LuaBox2D_b2WeldJoint_SetFrequency00);
   tolua_function(tolua_S,"GetFrequency",tolua_LuaBox2D_b2WeldJoint_GetFrequency00);
   tolua_function(tolua_S,"SetDampingRatio",tolua_LuaBox2D_b2WeldJoint_SetDampingRatio00);
   tolua_function(tolua_S,"GetDampingRatio",tolua_LuaBox2D_b2WeldJoint_GetDampingRatio00);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2WeldJoint_Dump00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2WheelJointDef","b2WheelJointDef","b2JointDef",tolua_collect_b2WheelJointDef);
  #else
  tolua_cclass(tolua_S,"b2WheelJointDef","b2WheelJointDef","b2JointDef",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2WheelJointDef");
   tolua_function(tolua_S,"new",tolua_LuaBox2D_b2WheelJointDef_new00);
   tolua_function(tolua_S,"new_local",tolua_LuaBox2D_b2WheelJointDef_new00_local);
   tolua_function(tolua_S,".call",tolua_LuaBox2D_b2WheelJointDef_new00_local);
   tolua_function(tolua_S,"Initialize",tolua_LuaBox2D_b2WheelJointDef_Initialize00);
   tolua_variable(tolua_S,"localAnchorA",tolua_get_b2WheelJointDef_localAnchorA,tolua_set_b2WheelJointDef_localAnchorA);
   tolua_variable(tolua_S,"localAnchorB",tolua_get_b2WheelJointDef_localAnchorB,tolua_set_b2WheelJointDef_localAnchorB);
   tolua_variable(tolua_S,"localAxisA",tolua_get_b2WheelJointDef_localAxisA,tolua_set_b2WheelJointDef_localAxisA);
   tolua_variable(tolua_S,"enableMotor",tolua_get_b2WheelJointDef_enableMotor,tolua_set_b2WheelJointDef_enableMotor);
   tolua_variable(tolua_S,"maxMotorTorque",tolua_get_b2WheelJointDef_maxMotorTorque,tolua_set_b2WheelJointDef_maxMotorTorque);
   tolua_variable(tolua_S,"motorSpeed",tolua_get_b2WheelJointDef_motorSpeed,tolua_set_b2WheelJointDef_motorSpeed);
   tolua_variable(tolua_S,"frequencyHz",tolua_get_b2WheelJointDef_frequencyHz,tolua_set_b2WheelJointDef_frequencyHz);
   tolua_variable(tolua_S,"dampingRatio",tolua_get_b2WheelJointDef_dampingRatio,tolua_set_b2WheelJointDef_dampingRatio);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2WheelJoint","b2WheelJoint","b2Joint",NULL);
  tolua_beginmodule(tolua_S,"b2WheelJoint");
   tolua_function(tolua_S,"GetAnchorA",tolua_LuaBox2D_b2WheelJoint_GetAnchorA00);
   tolua_function(tolua_S,"GetAnchorB",tolua_LuaBox2D_b2WheelJoint_GetAnchorB00);
   tolua_function(tolua_S,"GetReactionForce",tolua_LuaBox2D_b2WheelJoint_GetReactionForce00);
   tolua_function(tolua_S,"GetReactionTorque",tolua_LuaBox2D_b2WheelJoint_GetReactionTorque00);
   tolua_function(tolua_S,"GetLocalAnchorA",tolua_LuaBox2D_b2WheelJoint_GetLocalAnchorA00);
   tolua_function(tolua_S,"GetLocalAnchorB",tolua_LuaBox2D_b2WheelJoint_GetLocalAnchorB00);
   tolua_function(tolua_S,"GetLocalAxisA",tolua_LuaBox2D_b2WheelJoint_GetLocalAxisA00);
   tolua_function(tolua_S,"GetJointTranslation",tolua_LuaBox2D_b2WheelJoint_GetJointTranslation00);
   tolua_function(tolua_S,"GetJointSpeed",tolua_LuaBox2D_b2WheelJoint_GetJointSpeed00);
   tolua_function(tolua_S,"IsMotorEnabled",tolua_LuaBox2D_b2WheelJoint_IsMotorEnabled00);
   tolua_function(tolua_S,"EnableMotor",tolua_LuaBox2D_b2WheelJoint_EnableMotor00);
   tolua_function(tolua_S,"SetMotorSpeed",tolua_LuaBox2D_b2WheelJoint_SetMotorSpeed00);
   tolua_function(tolua_S,"GetMotorSpeed",tolua_LuaBox2D_b2WheelJoint_GetMotorSpeed00);
   tolua_function(tolua_S,"SetMaxMotorTorque",tolua_LuaBox2D_b2WheelJoint_SetMaxMotorTorque00);
   tolua_function(tolua_S,"GetMaxMotorTorque",tolua_LuaBox2D_b2WheelJoint_GetMaxMotorTorque00);
   tolua_function(tolua_S,"GetMotorTorque",tolua_LuaBox2D_b2WheelJoint_GetMotorTorque00);
   tolua_function(tolua_S,"SetSpringFrequencyHz",tolua_LuaBox2D_b2WheelJoint_SetSpringFrequencyHz00);
   tolua_function(tolua_S,"GetSpringFrequencyHz",tolua_LuaBox2D_b2WheelJoint_GetSpringFrequencyHz00);
   tolua_function(tolua_S,"SetSpringDampingRatio",tolua_LuaBox2D_b2WheelJoint_SetSpringDampingRatio00);
   tolua_function(tolua_S,"GetSpringDampingRatio",tolua_LuaBox2D_b2WheelJoint_GetSpringDampingRatio00);
   tolua_function(tolua_S,"Dump",tolua_LuaBox2D_b2WheelJoint_Dump00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2ContactResult","b2ContactResult","",NULL);
  tolua_beginmodule(tolua_S,"b2ContactResult");
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2DestructionListener","b2DestructionListener","",tolua_collect_b2DestructionListener);
  #else
  tolua_cclass(tolua_S,"b2DestructionListener","b2DestructionListener","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2DestructionListener");
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2DestructionListener_delete00);
   tolua_function(tolua_S,"SayGoodbye",tolua_LuaBox2D_b2DestructionListener_SayGoodbye00);
   tolua_function(tolua_S,"SayGoodbye",tolua_LuaBox2D_b2DestructionListener_SayGoodbye01);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"b2ContactImpulse","b2ContactImpulse","",NULL);
  tolua_beginmodule(tolua_S,"b2ContactImpulse");
   tolua_array(tolua_S,"normalImpulses",tolua_get_LuaBox2D_b2ContactImpulse_normalImpulses,tolua_set_LuaBox2D_b2ContactImpulse_normalImpulses);
   tolua_array(tolua_S,"tangentImpulses",tolua_get_LuaBox2D_b2ContactImpulse_tangentImpulses,tolua_set_LuaBox2D_b2ContactImpulse_tangentImpulses);
   tolua_variable(tolua_S,"count",tolua_get_b2ContactImpulse_count,tolua_set_b2ContactImpulse_count);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2QueryCallback","b2QueryCallback","",tolua_collect_b2QueryCallback);
  #else
  tolua_cclass(tolua_S,"b2QueryCallback","b2QueryCallback","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2QueryCallback");
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2QueryCallback_delete00);
   tolua_function(tolua_S,"ReportFixture",tolua_LuaBox2D_b2QueryCallback_ReportFixture00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"b2RayCastCallback","b2RayCastCallback","",tolua_collect_b2RayCastCallback);
  #else
  tolua_cclass(tolua_S,"b2RayCastCallback","b2RayCastCallback","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"b2RayCastCallback");
   tolua_function(tolua_S,"delete",tolua_LuaBox2D_b2RayCastCallback_delete00);
   tolua_function(tolua_S,"ReportFixture",tolua_LuaBox2D_b2RayCastCallback_ReportFixture00);
  tolua_endmodule(tolua_S);
 tolua_endmodule(tolua_S);
 return 1;
}


#if defined(LUA_VERSION_NUM) && LUA_VERSION_NUM >= 501
 TOLUA_API int luaopen_LuaBox2D (lua_State* tolua_S) {
 return tolua_LuaBox2D_open(tolua_S);
};
#endif

