#!/bin/bash
#
# Copyright (c) 2011 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.


readonly SCRIPT_DIR="$(dirname "$0")"
readonly SCRIPT_DIR_ABS="$(cd "${SCRIPT_DIR}" ; pwd -P)"

# NACL_SDK_ROOT must be set.
if [ x"${NACL_SDK_ROOT}"x == "xx" ] ; then
  echo "Error: NACL_SDK_ROOT is not set."
  exit 1;
fi

# NACL_TARGET_PLATFORM is really the name of a folder with the base dir -
# usually NACL_SDK_ROOT - within which the toolchain for the target platform
# are found.
# Replace the platform with the name of your target platform.  For example, to
# build applications that target the pepper_17 API, set
#   NACL_TARGET_PLATFORM="pepper_17"
if [ x"${NACL_TARGET_PLATFORM}"x == "xx" ] ; then
  export NACL_TARGET_PLATFORM="pepper_17"
fi

readonly NACL_PLATFORM_DIR="${NACL_SDK_ROOT}/${NACL_TARGET_PLATFORM}"
readonly BASE_SCRIPT="${NACL_PLATFORM_DIR}/third_party/scons-2.0.1/script/scons"

export SCONS_LIB_DIR="${NACL_PLATFORM_DIR}/third_party/scons-2.0.1/engine"
export PYTHONPATH="${NACL_PLATFORM_DIR}/third_party/scons-2.0.1/engine"
# We have to do this because scons overrides PYTHONPATH and does not preserve
# what is provided by the OS.  The custom variable name won't be overwritten.
export PYMOX="${NACL_PLATFORM_DIR}/third_party/pymox"

"${BASE_SCRIPT}" --file=build.scons \
                 --site-dir="${NACL_PLATFORM_DIR}/build_tools/nacl_sdk_scons" \
                 $*

