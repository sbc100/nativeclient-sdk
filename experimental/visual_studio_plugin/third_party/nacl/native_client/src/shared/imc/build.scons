# -*- python -*-
# Copyright 2009, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Import('env')

if env['TARGET_PLATFORM'] == 'WINDOWS':
    env.Append(CCFLAGS=['/EHsc'])

if env['TARGET_PLATFORM'] == 'LINUX':
    env.Append(LIBS=['rt'])

nacl_imc_inputs = [
    'nacl_imc_common.cc',
    'nacl_htp.cc',
]

if env['TARGET_PLATFORM'] == 'WINDOWS':
  nacl_imc_inputs += [
    'win/nacl_imc.cc',
    'win/nacl_shm.cc',
  ]

if env['TARGET_PLATFORM'] == 'LINUX':
  nacl_imc_inputs += [
    'nacl_imc_unistd.cc',
    'linux/nacl_imc.cc',
  ]

if env['TARGET_PLATFORM'] == 'MAC':
  nacl_imc_inputs += [
    'nacl_imc_unistd.cc',
    'osx/nacl_imc.cc',
  ]


common_objs = env.ComponentObject(nacl_imc_inputs)

nacl_imc_c_inputs = ['nacl_imc_c.cc', 'nacl_htp_c.cc']

env.ComponentLibrary('google_nacl_imc', common_objs)
env.ComponentLibrary('google_nacl_imc_c', common_objs + nacl_imc_c_inputs)

env.ComponentProgram('client',
                     'nacl_imc_test_client.cc',
                     EXTRA_LIBS=['google_nacl_imc', 'platform', 'gio'])

env.ComponentProgram('server',
                     'nacl_imc_test_server.cc',
                     EXTRA_LIBS=['google_nacl_imc', 'platform', 'gio'])


sigpipe_test_exe = env.ComponentProgram(
    'sigpipe_test',
    'sigpipe_test.cc',
    EXTRA_LIBS=['platform', 'gio', 'google_nacl_imc'])
node = env.CommandTest(
    'sigpipe_test.out',
    command=[sigpipe_test_exe])
env.AddNodeToTestSuite(node, ['small_tests'], 'run_sigpipe_test')
