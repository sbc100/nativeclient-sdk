# Copyright (c) 2010 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This file declares the RPC methods used to implement NPAPI object proxying.
# It is used in both directions (to browser, to module).
# All of the following RPC methods are invoked on the NPAPI thread from
# untrusted code or the JavaScript foreground thread in the renderer.
{
 'name': 'NPObjectStubRpc',
 'rpcs': [
          {'name': 'NPN_Deallocate',
           'inputs': [['wire_npp', 'int32_t'],
                      ['capability', 'char[]'],
                     ],
           'outputs': []
          },
          {'name': 'NPN_Invalidate',
           'inputs': [['wire_npp', 'int32_t'],
                      ['capability', 'char[]'],
                     ],
           'outputs': []
          },
          {'name': 'NPN_HasMethod',
           'inputs': [['wire_npp', 'int32_t'],
                      ['capability', 'char[]'],
                      ['wire_id', 'int32_t'],
                     ],
           'outputs': [
                       ['success', 'int32_t'],
                      ]
          },
          {'name': 'NPN_Invoke',
           'inputs': [['wire_npp', 'int32_t'],
                      ['capability', 'char[]'],
                      ['wire_id', 'int32_t'],
                      ['args', 'char[]'],
                      ['arg_count', 'int32_t'],
                     ],
           'outputs': [
                       ['success', 'int32_t'],
                       ['ret', 'char[]'],
                      ]
          },
          {'name': 'NPN_InvokeDefault',
           'inputs': [['wire_npp', 'int32_t'],
                      ['capability', 'char[]'],
                      ['args', 'char[]'],
                      ['arg_count', 'int32_t'],
                     ],
           'outputs': [['success', 'int32_t'],
                       ['ret', 'char[]'],
                      ]
          },
          {'name': 'NPN_HasProperty',
           'inputs': [['wire_npp', 'int32_t'],
                      ['capability', 'char[]'],
                      ['wire_id', 'int32_t'],
                     ],
           'outputs': [['success', 'int32_t'],
                      ]
          },
          {'name': 'NPN_GetProperty',
           'inputs': [['wire_npp', 'int32_t'],
                      ['capability', 'char[]'],
                      ['wire_id', 'int32_t'],
                     ],
           'outputs': [['success', 'int32_t'],
                       ['ret', 'char[]'],
                      ]
          },
          {'name': 'NPN_SetProperty',
           'inputs': [['wire_npp', 'int32_t'],
                      ['capability', 'char[]'],
                      ['wire_id', 'int32_t'],
                      ['arg', 'char[]'],
                     ],
           'outputs': [['success', 'int32_t'],
                      ]
          },
          {'name': 'NPN_RemoveProperty',
           'inputs': [['wire_npp', 'int32_t'],
                      ['capability', 'char[]'],
                      ['wire_id', 'int32_t'],
                     ],
           'outputs': [['success', 'int32_t'],
                      ]
          },
          {'name': 'NPN_Enumerate',
           'inputs': [['wire_npp', 'int32_t'],
                      ['capability', 'char[]'],
                     ],
           'outputs': [['success', 'int32_t'],
                       ['id_list', 'char[]'],
                       ['id_count', 'int32_t'],
                      ]
          },
          {'name': 'NPN_Construct',
           'inputs': [['wire_npp', 'int32_t'],
                      ['capability', 'char[]'],
                      ['args', 'char[]'],
                      ['arg_count', 'int32_t'],
                     ],
           'outputs': [['success', 'int32_t'],
                       ['ret', 'char[]'],
                      ]
          },
          {'name': 'NPN_SetException',
           'inputs': [['capability', 'char[]'],
                      ['message', 'string'],
                     ],
           'outputs': []
          },
         ]
}
