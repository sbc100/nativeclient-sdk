# Copyright (c) 2010 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This file declares the RPC methods used to implement the Pepper Audio API.
# (All but one described in npupcall.srpc.)
# All of the following RPC methods are invoked on the NPAPI thread from
# untrusted code.  This means, due to the Pepper threading model, that they
# may only be invoked by code that is called from the JavaScript foreground
# thread in the renderer.
{
 'name': 'AudioRpc',
 'rpcs': [
          # Create an audio context for the current plugin instance.
          {'name': 'AudioInitialize',
           'inputs': [['npp', 'int32_t'],
                      ['number', 'int32_t'],
                      ['sample_rate', 'int32_t'],
                      ['sample_type', 'int32_t'],
                      ['output_channel_map', 'int32_t'],
                      ['input_channel_map', 'int32_t'],
                      ['sample_frame_count', 'int32_t'],
                      ['flags', 'int32_t'],
                     ],
           'outputs': []
          },
          # Destroy the audio context for the current plugin instance.
          {'name': 'AudioDestroy',
           'inputs': [['npp', 'int32_t'],
                     ],
           'outputs': []
          },
          # Get a variable's value for the current plugin instance.
          {'name': 'AudioGetState',
           'inputs': [['npp', 'int32_t'],
                      ['state', 'int32_t'],
                     ],
           'outputs': [['value', 'int32_t'],
                      ]
          },
          # Set a variable's value for the current plugin instance.
          {'name': 'AudioSetState',
           'inputs': [['npp', 'int32_t'],
                      ['state', 'int32_t'],
                      ['value', 'int32_t'],
                     ],
           'outputs': []
          },
         ]
}
