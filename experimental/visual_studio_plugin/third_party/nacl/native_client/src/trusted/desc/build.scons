# -*- python -*-
# Copyright 2009, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Import('env')

# nrd_xfer.c needs no-strict-aliasing because NaClImcMsgIoVec and
# NaClIOVec are intentionally different types (exported by different
# layers) but have the same layout in order to avoid copies.  It also
# needs no-missing-field-initializers because NaClInternalHeader's pad
# size is computed (see nacl_desc_base.h) and the kNoHandles object
# cannot be initialized with the right number of zeros w/o manually
# computing the pad size, making the whole point of having the size be
# computed by the compiler moot.  This assumes non-windows build uses
# gcc.
nrd_xfer_env = env.Clone()
if not env.Bit('windows'):
   nrd_xfer_env.Append(CFLAGS = ['-fno-strict-aliasing'])
   nrd_xfer_env.Append(CCFLAGS = ['-Wno-missing-field-initializers'])

nrd_xfer_obj = nrd_xfer_env.ComponentObject('nrd_xfer.c')

# Chrome headers use variadic macros and other features incompatible with
# -pedantic.
wrapper_env = env.Clone()
wrapper_env.FilterOut(CCFLAGS = ['-pedantic'])
wrapper_obj = wrapper_env.ComponentObject('nacl_desc_wrapper.cc')

nrd_lib_inputs = [
    'nacl_desc_base.c',
    'nacl_desc_cond.c',
    'nacl_desc_conn_cap.c',
    'nacl_desc_dir.c',
    'nacl_desc_imc.c',
    'nacl_desc_imc_bound_desc.c',
    'nacl_desc_imc_shm.c',
    'nacl_desc_invalid.c',
    'nacl_desc_io.c',
    'nacl_desc_mutex.c',
    'nrd_all_modules.c',
    nrd_xfer_obj,
    'nrd_xfer_effector.c',
    'nacl_desc_effector_cleanup.c',
    'nacl_desc_effector_ldr.c',
    'nacl_desc_effector_trusted_mem.c',
    'nacl_desc_semaphore.c',
    'nacl_desc_sync_socket.c',
    wrapper_obj,
]

# TODO(bsy): this file is dead code.  remove it.
if env.Bit('windows'):
  nrd_lib_inputs += [
      'win/nacl_desc.c',
  ]
elif env.Bit('mac'):
  nrd_lib_inputs += [
      'linux/nacl_desc.c',
  ]
else:
  nrd_lib_inputs += [
      'linux/nacl_desc.c',
      'linux/nacl_desc_sysv_shm.c',
  ]

env.ComponentLibrary('nrd_xfer', nrd_lib_inputs,
                     EXTRA_LIBS=['platform'])

# TODO(robertm): is this still needed?
# Make a copy of debug CRT for now.
# TODO(bradnelson): this really should be avoided if possible.
crt = env.Replicate('.', '$VC80_DIR/vc/redist/Debug_NonRedist/'
                    'x86/Microsoft.VC80.DebugCRT')
crt += env.Replicate('.', '$VC80_DIR/vc/redist/x86/Microsoft.VC80.CRT')

# TODO: add comment
if env.get('TARGET_PLATFORM') == 'WINDOWS':
  env.Append(LIBS = [ 'ws2_32', 'advapi32' ])

if env.get('TARGET_ARCHITECTURE') == 'x86':
  ncvalidate = 'ncvalidate'

if env.get('TARGET_ARCHITECTURE') == 'arm':
  ncvalidate = 'ncvalidate_arm_v2'

nrd_tester = env.ComponentProgram('nrd_xfer_test', 'nrd_xfer_test.c',
                                  EXTRA_LIBS=['sel',
                                              'nrd_xfer',
                                              'nonnacl_srpc',
                                              ncvalidate,
                                              'google_nacl_imc_c',
                                              'platform',
                                              'gio'])

# we cannot run shell scripts on windows
if env.Bit('linux'):
   node = env.CommandTest(
       'nrd_xfer_test.out',
       [env.File('nrd_xfer_test.sh'), nrd_tester[0]],
       direct_emulation=False,
       )
   env.AddNodeToTestSuite(node, ['medium_tests'], 'run_nrd_xfer_test')

env.EnsureRequiredBuildWarnings()
nrd_xfer_env.EnsureRequiredBuildWarnings()
