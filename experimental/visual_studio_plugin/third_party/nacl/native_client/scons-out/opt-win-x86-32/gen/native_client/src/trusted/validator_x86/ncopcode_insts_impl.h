/* \gen\native_client\src\trusted\validator_x86\ncopcode_insts_impl.h
 * THIS FILE IS AUTO_GENERATED DO NOT EDIT.
 *
 * This file was auto-generated by enum_gen.py
 * from file ncopcode_insts.enum
 */

/* Define the corresponding names of NaClMnemonic. */
static const char* const g_NaClMnemonicName[NaClMnemonicEnumSize + 1] = {
  "Aaa",
  "Aad",
  "Aam",
  "Aas",
  "Adc",
  "Add",
  "Addpd",
  "Addps",
  "Addsd",
  "Addss",
  "Addsubpd",
  "Addsubps",
  "And",
  "Andnpd",
  "Andnps",
  "Andpd",
  "Andps",
  "Arpl",
  "Bound",
  "Bsf",
  "Bsr",
  "Bswap",
  "Bt",
  "Btc",
  "Btr",
  "Bts",
  "Call",
  "Cbw",
  "Cdq",
  "Cdqe",
  "Cld",
  "Clflush",
  "Cmovb",
  "Cmovbe",
  "Cmovl",
  "Cmovle",
  "Cmovnb",
  "Cmovnbe",
  "Cmovnl",
  "Cmovnle",
  "Cmovno",
  "Cmovnp",
  "Cmovns",
  "Cmovnz",
  "Cmovo",
  "Cmovp",
  "Cmovs",
  "Cmovz",
  "Cmp",
  "Cmpsb",
  "Cmpsd",
  "Cmpsd_xmm",
  "Cmpsq",
  "Cmpsw",
  "Cmpxchg",
  "Comisd",
  "Comiss",
  "Cpuid",
  "Cqo",
  "Cvtdq2pd",
  "Cvtdq2ps",
  "Cvtpd2dq",
  "Cvtpd2pi",
  "Cvtpd2ps",
  "Cvtpi2pd",
  "Cvtpi2ps",
  "Cvtps2dq",
  "Cvtps2pd",
  "Cvtps2pi",
  "Cvtsd2si",
  "Cvtsd2ss",
  "Cvtsi2sd",
  "Cvtsi2ss",
  "Cvtss2sd",
  "Cvtss2si",
  "Cvttpd2dq",
  "Cvttpd2pi",
  "Cvttps2dq",
  "Cvttps2pi",
  "Cvttsd2si",
  "Cvttss2si",
  "Cwd",
  "Cwde",
  "Daa",
  "Das",
  "Dec",
  "Div",
  "Divpd",
  "Divps",
  "Divsd",
  "Divss",
  "Emms",
  "Enter",
  "Extrq",
  "F2xm1",
  "Fabs",
  "Fadd",
  "Faddp",
  "Fbld",
  "Fbstp",
  "Fchs",
  "Fcmovb",
  "Fcmovbe",
  "Fcmove",
  "Fcmovnb",
  "Fcmovnbe",
  "Fcmovne",
  "Fcmovnu",
  "Fcmovu",
  "Fcom",
  "Fcomi",
  "Fcomip",
  "Fcomp",
  "Fcompp",
  "Fcos",
  "Fdecstp",
  "Fdiv",
  "Fdivp",
  "Fdivr",
  "Fdivrp",
  "Ffree",
  "Fiadd",
  "Ficom",
  "Ficomp",
  "Fidiv",
  "Fidivr",
  "Fild",
  "Fimul",
  "Fincstp",
  "Fist",
  "Fistp",
  "Fisttp",
  "Fisub",
  "Fisubr",
  "Fld",
  "Fld1",
  "Fldcw",
  "Fldenv",
  "Fldl2e",
  "Fldl2t",
  "Fldlg2",
  "Fldln2",
  "Fldpi",
  "Fldz",
  "Fmul",
  "Fmulp",
  "Fnclex",
  "Fninit",
  "Fnop",
  "Fnsave",
  "Fnstcw",
  "Fnstenv",
  "Fnstsw",
  "Fpatan",
  "Fprem",
  "Fprem1",
  "Fptan",
  "Frndint",
  "Frstor",
  "Fscale",
  "Fsin",
  "Fsincos",
  "Fsqrt",
  "Fst",
  "Fstp",
  "Fsub",
  "Fsubp",
  "Fsubr",
  "Fsubrp",
  "Ftst",
  "Fucom",
  "Fucomi",
  "Fucomip",
  "Fucomp",
  "Fucompp",
  "Fwait",
  "Fxam",
  "Fxch",
  "Fxtract",
  "Fyl2x",
  "Fyl2xp1",
  "Haddpd",
  "Haddps",
  "Hlt",
  "Hsubpd",
  "Hsubps",
  "Idiv",
  "Imul",
  "In",
  "Inc",
  "Insb",
  "Insd",
  "Insertq",
  "Insw",
  "Int",
  "Int0",
  "Int3",
  "Invalid",
  "Iret",
  "Jb",
  "Jbe",
  "Jcxz",
  "Jecxz",
  "Jl",
  "Jle",
  "Jmp",
  "Jnb",
  "Jnbe",
  "Jnl",
  "Jnle",
  "Jno",
  "Jnp",
  "Jns",
  "Jnz",
  "Jo",
  "Jp",
  "Jrcxz",
  "Js",
  "Jz",
  "Lahf",
  "Lddqu",
  "Lds",
  "Lea",
  "Leave",
  "Les",
  "Lfence",
  "Lodsb",
  "Lodsd",
  "Lodsq",
  "Lodsw",
  "Loop",
  "Loope",
  "Loopne",
  "Maskmovdqu",
  "Maskmovq",
  "Maxpd",
  "Maxps",
  "Maxsd",
  "Maxss",
  "Mfence",
  "Minpd",
  "Minps",
  "Minsd",
  "Minss",
  "Mov",
  "Movapd",
  "Movaps",
  "Movd",
  "Movddup",
  "Movdq",
  "Movdq2q",
  "Movdqa",
  "Movdqu",
  "Movhpd",
  "Movhps",
  "Movlpd",
  "Movlps",
  "Movmskpd",
  "Movmskps",
  "Movntdq",
  "Movnti",
  "Movntpd",
  "Movntps",
  "Movntq",
  "Movntsd",
  "Movntss",
  "Movq",
  "Movq2dq",
  "Movsb",
  "Movsd",
  "Movshdup",
  "Movsldup",
  "Movsq",
  "Movss",
  "Movsw",
  "Movsx",
  "Movsxd",
  "Movupd",
  "Movups",
  "Movzx",
  "Mul",
  "Mulpd",
  "Mulps",
  "Mulsd",
  "Mulss",
  "Neg",
  "Nop",
  "Not",
  "Or",
  "Orpd",
  "Orps",
  "Outsb",
  "Outsd",
  "Outsw",
  "Pabsb",
  "Pabsd",
  "Pabsw",
  "Packssdw",
  "Packsswb",
  "Packusdw",
  "Packuswb",
  "Paddb",
  "Paddd",
  "Paddq",
  "Paddsb",
  "Paddsw",
  "Paddusb",
  "Paddusw",
  "Paddw",
  "Palignr",
  "Pand",
  "Pandn",
  "Pause",
  "Pavgb",
  "Pavgw",
  "Pblendvb",
  "Pblendw",
  "Pcmpeqb",
  "Pcmpeqd",
  "Pcmpeqq",
  "Pcmpeqw",
  "Pcmpestri",
  "Pcmpestrm",
  "Pcmpgtb",
  "Pcmpgtd",
  "Pcmpgtq",
  "Pcmpgtw",
  "Pcmpistri",
  "Pcmpistrm",
  "Pextrb",
  "Pextrd",
  "Pextrq",
  "Pextrw",
  "Phaddd",
  "Phaddsw",
  "Phaddw",
  "Phminposuw",
  "Phsubd",
  "Phsubsw",
  "Phsubw",
  "Pinsrb",
  "Pinsrd",
  "Pinsrq",
  "Pinsrw",
  "Pmaddubsw",
  "Pmaddwd",
  "Pmaxsb",
  "Pmaxsd",
  "Pmaxsw",
  "Pmaxub",
  "Pmaxud",
  "Pmaxuw",
  "Pminsb",
  "Pminsd",
  "Pminsw",
  "Pminub",
  "Pminud",
  "Pminuw",
  "Pmovmskb",
  "Pmovsxbd",
  "Pmovsxbq",
  "Pmovsxbw",
  "Pmovsxdq",
  "Pmovsxwd",
  "Pmovsxwq",
  "Pmovzxbd",
  "Pmovzxbq",
  "Pmovzxbw",
  "Pmovzxdq",
  "Pmovzxwd",
  "Pmovzxwq",
  "Pmuldq",
  "Pmulhrsw",
  "Pmulhuw",
  "Pmulhw",
  "Pmulld",
  "Pmullw",
  "Pmuludq",
  "Pop",
  "Popa",
  "Popad",
  "Popf",
  "Popfd",
  "Popfq",
  "Por",
  "Prefetchnta",
  "Prefetcht0",
  "Prefetcht1",
  "Prefetcht2",
  "Psadbw",
  "Pshufb",
  "Pshufd",
  "Pshufhw",
  "Pshuflw",
  "Pshufw",
  "Psignb",
  "Psignd",
  "Psignw",
  "Pslld",
  "Pslldq",
  "Psllq",
  "Psllw",
  "Psrad",
  "Psraw",
  "Psrld",
  "Psrldq",
  "Psrlq",
  "Psrlw",
  "Psubb",
  "Psubd",
  "Psubq",
  "Psubsb",
  "Psubsw",
  "Psubusb",
  "Psubusw",
  "Psubw",
  "Ptest",
  "Punpckhbd",
  "Punpckhbq",
  "Punpckhbw",
  "Punpckhdq",
  "Punpckhqdq",
  "Punpckhwd",
  "Punpcklbw",
  "Punpckldq",
  "Punpcklqdq",
  "Punpcklwd",
  "Push",
  "Pusha",
  "Pushad",
  "Pushf",
  "Pushfd",
  "Pushfq",
  "Pxor",
  "Rcl",
  "Rcpps",
  "Rcpss",
  "Rcr",
  "Ret",
  "Rol",
  "Ror",
  "Rsqrtps",
  "Rsqrtss",
  "Sahf",
  "Sar",
  "Sbb",
  "Scasb",
  "Scasd",
  "Scasq",
  "Scasw",
  "Setb",
  "Setbe",
  "Setl",
  "Setle",
  "Setnb",
  "Setnbe",
  "Setnl",
  "Setnle",
  "Setno",
  "Setnp",
  "Setns",
  "Setnz",
  "Seto",
  "Setp",
  "Sets",
  "Setz",
  "Sfence",
  "Shl",
  "Shr",
  "Sqrtpd",
  "Sqrtps",
  "Sqrtsd",
  "Sqrtss",
  "Stosb",
  "Stosd",
  "Stosq",
  "Stosw",
  "Sub",
  "Subpd",
  "Subps",
  "Subsd",
  "Subss",
  "Syscall",
  "Test",
  "Ucomisd",
  "Ucomiss",
  "Ud2",
  "Unpckhpd",
  "Unpckhps",
  "Unpcklpd",
  "Unpcklps",
  "Xadd",
  "Xchg",
  "Xor",
  "Xorpd",
  "Xorps",
  "NaClMnemonicEnumSize"
};

const char* NaClMnemonicName(NaClMnemonic name) {
  return name <= NaClMnemonicEnumSize
    ? g_NaClMnemonicName[name]
    : "NaClMnemonic???";
}
