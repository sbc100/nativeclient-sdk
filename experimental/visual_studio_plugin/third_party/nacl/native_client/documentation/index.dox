/** \mainpage Native Client API Reference Documentation

 This reference documentation describes the APIs
 that untrusted Native Client (NaCl) modules can use.
 For additional documentation and information
 about Native Client, see the
 <a href="../../../README.html">README</a>.

 On this page:
 <ul>
 <li> @ref locations </li>
 <li> @ref modules </li>
 <li> @ref about </li>
 </ul>

 \section locations toolchain file locations

 <p>
 The Native Client toolchain is under
 <code>src/third_party/nacl_sdk/<em>platform</em>/sdk/nacl-sdk</code>,
 where <code><em>platform</em></code> is
 <code>linux</code>,
 <code>mac</code>, or
 <code>windows</code>.
 The toolchain doesn't depend on the rest of the Native Client build;
 you can copy the <code>nacl-sdk</code> directory
 anywhere you like,
 as long as you avoid spaces in the pathname.
 </p>

 <p>
 The following table
 shows where you can find some commonly used files in the toolchain.
 </p>

<table
 style="border-collapse: collapse;">
  <caption>
    File locations in the toolchain
  </caption>
  <tr>
    <th scope="col">Type of file</th>
    <th scope="col">Location</th>
    <th scope="col">Typical file</th>
    <th scope="col">Example of use</th>
  </tr>
  <tr>
    <td>Include</td>
    <td><code>nacl/include/</code></td>
    <td><code>nacl/include/nacl/nacl_av.h</code></td>
    <td>In code: <br>
        <code>&nbsp;&nbsp;\#include &lt;nacl/nacl_av.h></code>
    </td>
  </tr>
  <tr>
    <td>Library</td>
    <td><code>nacl/lib/</code></td>
    <td><code>nacl/lib/libav.a</code></td>
    <td>When compiling: <br>
        <code>&nbsp;&nbsp;... -lav ...</code></td>
  </tr>
  <tr>
    <td>Tool</td>
    <td><code>bin/</code></td>
    <td><code>bin/nacl-g++</code></td>
    <td>At the command line: <br>
        <code>&nbsp;&nbsp;<em>sdk_dir</em>/bin/nacl-g++ *.cc ...</code></td>
  </tr>
</table>


 \section modules API categories

 The Native Client APIs fall into three general categories:

 <ul>
   <li> Standard APIs that are supported but not documented here
     <ul>
       <li> <a href="http://sourceware.org/newlib/libc.html">Newlib C library</a>
            (included by default)
            </li>
       <li> <a href="http://sourceware.org/newlib/libm.html">Newlib math library</a>
            (<code>-lm</code>)
            </li>
       <li> <a href="http://gcc.gnu.org/libstdc++/">GNU standard C++ library</a>
            (included by default when you compile using <code>nacl-g++</code>)
            </li>
       <li> A subset of
            <a href="https://developer.mozilla.org/en/Gecko_Plugin_API_Reference">NPAPI</a>
            (<code>-lgoogle_nacl_npruntime</code>);
            for information on the differences, see
            <a href="../../../documentation/npapi.html">NPAPI Support</a>
            </li>
     </ul>
   </li>

   <li> <a href="group___libraries.html">Libraries</a>
        defined by Native Client
     <ul>
       <li> <a href="group__audio__video.html">Basic Multimedia Interface</a>
            (<code>-lav</code>):
            A basic audio/video library;
            requires SRPC
            </li>
       <li> IMC
            (<code>-lgoogle_nacl_imc</code> for C++,
            <code>-lgoogle_nacl_imc_c</code> for C):
            A low-level inter-module communication library;
            you should usually use SRPC instead
            </li>
       <li> <a href="group___n_p_a_p_i.html">NPAPI Extensions</a>
            (<code>-lgoogle_nacl_npruntime</code>):
            Native Client extensions to NPAPI
            </li>
       <li> <a href="group___pthread.html">Pthread</a>
            (<code>-lpthread</code>):
            A thread library based on POSIX threads
            </li>
       <li> <a href="group___s_r_p_c.html">SRPC</a>
            (<code>-lsrpc</code>):
            Simple remote procedure call API;
            lets a Native Client module communicate with JavaScript code
            or with other Native Client modules
            </li>
       <li> Unimplemented POSIX
            (<code>-lnosys</code>):
            A library to help you compile even if your code
            uses calls that Native Client doesn't implement;
            useful when porting
            <span class="pending">[PENDING: link to porting guide]</span>
            </li>
     </ul>
   </li>

   <li> <a href="group__syscalls.html">Service Runtime Calls</a>
        supported by Native Client
        </li>
 </ul>

 <b>Note:</b>
 You can't use SRPC and NPAPI together; pick one.

 \section about About this doc

 <p>
 The tabs at the top of each page
 take you to the following sections.
 </p>

 <ul>
 <li> <b>Main Page</b>: This page </li>
 <li> <a href="modules.html"><b>Modules</b></a>:
      Lets you find API by functional area
      &mdash; for example,
      <a href="group___libraries.html">Libraries</a> or
      <a href="group__syscalls.html">Service Runtime Calls</a>.
      </li> <!--
 <li> <a href="namespaces.html"><b>Namespaces</b></a>:
      List of C++ namespaces in Native Client.
      </li> -->
 <li> <a href="annotated.html"><b>Data Structures</b></a>:
      List of data structures in Native Client.
      </li>
 <li> <a href="files.html"><b>Files</b></a>:
      The header files used to generate this documentation,
      with file descriptions and links to generated doc.
      Don't miss the <a href="globals.html">File member index</a>.
      </li>
 </ul>
 */
