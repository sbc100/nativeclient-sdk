diff -uNr binutils-2.20.orig/ld/ldgram.c binutils-2.20/ld/ldgram.c
--- binutils-2.20.orig/ld/ldgram.c	2009-10-16 13:52:15.000000000 +0200
+++ binutils-2.20/ld/ldgram.c	2009-11-24 13:03:03.000000000 +0100
@@ -1,24 +1,23 @@
-/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Skeleton implementation for Bison's Yacc-like parsers in C
+/* A Bison parser, made by GNU Bison 2.4.1.  */
 
-   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+   
+      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
    Free Software Foundation, Inc.
-
-   This program is free software; you can redistribute it and/or modify
+   
+   This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation; either version 2, or (at your option)
-   any later version.
-
+   the Free Software Foundation, either version 3 of the License, or
+   (at your option) any later version.
+   
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-
+   
    You should have received a copy of the GNU General Public License
-   along with this program; if not, write to the Free Software
-   Foundation, Inc., 51 Franklin Street, Fifth Floor,
-   Boston, MA 02110-1301, USA.  */
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -29,7 +28,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-
+   
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -47,7 +46,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.3"
+#define YYBISON_VERSION "2.4.1"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -55,11 +54,82 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
+/* Push parsers.  */
+#define YYPUSH 0
+
+/* Pull parsers.  */
+#define YYPULL 1
+
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 
 
+/* Copy the first part of user declarations.  */
+
+/* Line 189 of yacc.c  */
+#line 24 "ldgram.y"
+
+/*
+
+ */
+
+#define DONTDECLARE_MALLOC
+
+#include "sysdep.h"
+#include "bfd.h"
+#include "bfdlink.h"
+#include "ld.h"
+#include "ldexp.h"
+#include "ldver.h"
+#include "ldlang.h"
+#include "ldfile.h"
+#include "ldemul.h"
+#include "ldmisc.h"
+#include "ldmain.h"
+#include "mri.h"
+#include "ldctor.h"
+#include "ldlex.h"
+
+#ifndef YYDEBUG
+#define YYDEBUG 1
+#endif
+
+static enum section_type sectype;
+static lang_memory_region_type *region;
+
+bfd_boolean ldgram_had_keep = FALSE;
+char *ldgram_vers_current_lang = NULL;
+
+#define ERROR_NAME_MAX 20
+static char *error_names[ERROR_NAME_MAX];
+static int error_index;
+#define PUSH_ERROR(x) if (error_index < ERROR_NAME_MAX) error_names[error_index] = x; error_index++;
+#define POP_ERROR()   error_index--;
+
+
+/* Line 189 of yacc.c  */
+#line 113 "ldgram.tab.c"
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 0
+#endif
+
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
+
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
+#endif
+
+
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -131,253 +201,76 @@
      LOADADDR = 320,
      MAX_K = 321,
      MIN_K = 322,
-     STARTUP = 323,
-     HLL = 324,
-     SYSLIB = 325,
-     FLOAT = 326,
-     NOFLOAT = 327,
-     NOCROSSREFS = 328,
-     ORIGIN = 329,
-     FILL = 330,
-     LENGTH = 331,
-     CREATE_OBJECT_SYMBOLS = 332,
-     INPUT = 333,
-     GROUP = 334,
-     OUTPUT = 335,
-     CONSTRUCTORS = 336,
-     ALIGNMOD = 337,
-     AT = 338,
-     SUBALIGN = 339,
-     PROVIDE = 340,
-     PROVIDE_HIDDEN = 341,
-     AS_NEEDED = 342,
-     CHIP = 343,
-     LIST = 344,
-     SECT = 345,
-     ABSOLUTE = 346,
-     LOAD = 347,
-     NEWLINE = 348,
-     ENDWORD = 349,
-     ORDER = 350,
-     NAMEWORD = 351,
-     ASSERT_K = 352,
-     FORMAT = 353,
-     PUBLIC = 354,
-     DEFSYMEND = 355,
-     BASE = 356,
-     ALIAS = 357,
-     TRUNCATE = 358,
-     REL = 359,
-     INPUT_SCRIPT = 360,
-     INPUT_MRI_SCRIPT = 361,
-     INPUT_DEFSYM = 362,
-     CASE = 363,
-     EXTERN = 364,
-     START = 365,
-     VERS_TAG = 366,
-     VERS_IDENTIFIER = 367,
-     GLOBAL = 368,
-     LOCAL = 369,
-     VERSIONK = 370,
-     INPUT_VERSION_SCRIPT = 371,
-     KEEP = 372,
-     ONLY_IF_RO = 373,
-     ONLY_IF_RW = 374,
-     SPECIAL = 375,
-     EXCLUDE_FILE = 376,
-     CONSTANT = 377,
-     INPUT_DYNAMIC_LIST = 378
+     CEILP2 = 323,
+     NACL_MASK = 324,
+     STARTUP = 325,
+     HLL = 326,
+     SYSLIB = 327,
+     FLOAT = 328,
+     NOFLOAT = 329,
+     NOCROSSREFS = 330,
+     ORIGIN = 331,
+     FILL = 332,
+     LENGTH = 333,
+     CREATE_OBJECT_SYMBOLS = 334,
+     INPUT = 335,
+     GROUP = 336,
+     OUTPUT = 337,
+     CONSTRUCTORS = 338,
+     ALIGNMOD = 339,
+     AT = 340,
+     SUBALIGN = 341,
+     PROVIDE = 342,
+     PROVIDE_HIDDEN = 343,
+     AS_NEEDED = 344,
+     CHIP = 345,
+     LIST = 346,
+     SECT = 347,
+     ABSOLUTE = 348,
+     LOAD = 349,
+     NEWLINE = 350,
+     ENDWORD = 351,
+     ORDER = 352,
+     NAMEWORD = 353,
+     ASSERT_K = 354,
+     FORMAT = 355,
+     PUBLIC = 356,
+     DEFSYMEND = 357,
+     BASE = 358,
+     ALIAS = 359,
+     TRUNCATE = 360,
+     REL = 361,
+     INPUT_SCRIPT = 362,
+     INPUT_MRI_SCRIPT = 363,
+     INPUT_DEFSYM = 364,
+     CASE = 365,
+     EXTERN = 366,
+     START = 367,
+     VERS_TAG = 368,
+     VERS_IDENTIFIER = 369,
+     GLOBAL = 370,
+     LOCAL = 371,
+     VERSIONK = 372,
+     INPUT_VERSION_SCRIPT = 373,
+     KEEP = 374,
+     ONLY_IF_RO = 375,
+     ONLY_IF_RW = 376,
+     SPECIAL = 377,
+     EXCLUDE_FILE = 378,
+     CONSTANT = 379,
+     INPUT_DYNAMIC_LIST = 380
    };
 #endif
-/* Tokens.  */
-#define INT 258
-#define NAME 259
-#define LNAME 260
-#define OREQ 261
-#define ANDEQ 262
-#define RSHIFTEQ 263
-#define LSHIFTEQ 264
-#define DIVEQ 265
-#define MULTEQ 266
-#define MINUSEQ 267
-#define PLUSEQ 268
-#define OROR 269
-#define ANDAND 270
-#define NE 271
-#define EQ 272
-#define GE 273
-#define LE 274
-#define RSHIFT 275
-#define LSHIFT 276
-#define UNARY 277
-#define END 278
-#define ALIGN_K 279
-#define BLOCK 280
-#define BIND 281
-#define QUAD 282
-#define SQUAD 283
-#define LONG 284
-#define SHORT 285
-#define BYTE 286
-#define SECTIONS 287
-#define PHDRS 288
-#define INSERT_K 289
-#define AFTER 290
-#define BEFORE 291
-#define DATA_SEGMENT_ALIGN 292
-#define DATA_SEGMENT_RELRO_END 293
-#define DATA_SEGMENT_END 294
-#define SORT_BY_NAME 295
-#define SORT_BY_ALIGNMENT 296
-#define SIZEOF_HEADERS 297
-#define OUTPUT_FORMAT 298
-#define FORCE_COMMON_ALLOCATION 299
-#define OUTPUT_ARCH 300
-#define INHIBIT_COMMON_ALLOCATION 301
-#define SEGMENT_START 302
-#define INCLUDE 303
-#define MEMORY 304
-#define REGION_ALIAS 305
-#define NOLOAD 306
-#define DSECT 307
-#define COPY 308
-#define INFO 309
-#define OVERLAY 310
-#define DEFINED 311
-#define TARGET_K 312
-#define SEARCH_DIR 313
-#define MAP 314
-#define ENTRY 315
-#define NEXT 316
-#define SIZEOF 317
-#define ALIGNOF 318
-#define ADDR 319
-#define LOADADDR 320
-#define MAX_K 321
-#define MIN_K 322
-#define STARTUP 323
-#define HLL 324
-#define SYSLIB 325
-#define FLOAT 326
-#define NOFLOAT 327
-#define NOCROSSREFS 328
-#define ORIGIN 329
-#define FILL 330
-#define LENGTH 331
-#define CREATE_OBJECT_SYMBOLS 332
-#define INPUT 333
-#define GROUP 334
-#define OUTPUT 335
-#define CONSTRUCTORS 336
-#define ALIGNMOD 337
-#define AT 338
-#define SUBALIGN 339
-#define PROVIDE 340
-#define PROVIDE_HIDDEN 341
-#define AS_NEEDED 342
-#define CHIP 343
-#define LIST 344
-#define SECT 345
-#define ABSOLUTE 346
-#define LOAD 347
-#define NEWLINE 348
-#define ENDWORD 349
-#define ORDER 350
-#define NAMEWORD 351
-#define ASSERT_K 352
-#define FORMAT 353
-#define PUBLIC 354
-#define DEFSYMEND 355
-#define BASE 356
-#define ALIAS 357
-#define TRUNCATE 358
-#define REL 359
-#define INPUT_SCRIPT 360
-#define INPUT_MRI_SCRIPT 361
-#define INPUT_DEFSYM 362
-#define CASE 363
-#define EXTERN 364
-#define START 365
-#define VERS_TAG 366
-#define VERS_IDENTIFIER 367
-#define GLOBAL 368
-#define LOCAL 369
-#define VERSIONK 370
-#define INPUT_VERSION_SCRIPT 371
-#define KEEP 372
-#define ONLY_IF_RO 373
-#define ONLY_IF_RW 374
-#define SPECIAL 375
-#define EXCLUDE_FILE 376
-#define CONSTANT 377
-#define INPUT_DYNAMIC_LIST 378
-
-
-
-
-/* Copy the first part of user declarations.  */
-#line 24 "ldgram.y"
-
-/*
-
- */
-
-#define DONTDECLARE_MALLOC
-
-#include "sysdep.h"
-#include "bfd.h"
-#include "bfdlink.h"
-#include "ld.h"
-#include "ldexp.h"
-#include "ldver.h"
-#include "ldlang.h"
-#include "ldfile.h"
-#include "ldemul.h"
-#include "ldmisc.h"
-#include "ldmain.h"
-#include "mri.h"
-#include "ldctor.h"
-#include "ldlex.h"
-
-#ifndef YYDEBUG
-#define YYDEBUG 1
-#endif
-
-static enum section_type sectype;
-static lang_memory_region_type *region;
-
-bfd_boolean ldgram_had_keep = FALSE;
-char *ldgram_vers_current_lang = NULL;
-
-#define ERROR_NAME_MAX 20
-static char *error_names[ERROR_NAME_MAX];
-static int error_index;
-#define PUSH_ERROR(x) if (error_index < ERROR_NAME_MAX) error_names[error_index] = x; error_index++;
-#define POP_ERROR()   error_index--;
-
-
-/* Enabling traces.  */
-#ifndef YYDEBUG
-# define YYDEBUG 0
-#endif
 
-/* Enabling verbose error messages.  */
-#ifdef YYERROR_VERBOSE
-# undef YYERROR_VERBOSE
-# define YYERROR_VERBOSE 1
-#else
-# define YYERROR_VERBOSE 0
-#endif
 
-/* Enabling the token table.  */
-#ifndef YYTOKEN_TABLE
-# define YYTOKEN_TABLE 0
-#endif
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-#line 62 "ldgram.y"
 {
+
+/* Line 214 of yacc.c  */
+#line 62 "ldgram.y"
+
   bfd_vma integer;
   struct big_int
     {
@@ -404,22 +297,23 @@
   struct bfd_elf_version_deps *deflist;
   struct bfd_elf_version_expr *versyms;
   struct bfd_elf_version_tree *versnode;
-}
-/* Line 193 of yacc.c.  */
-#line 410 "ldgram.c"
-	YYSTYPE;
+
+
+
+/* Line 214 of yacc.c  */
+#line 305 "ldgram.tab.c"
+} YYSTYPE;
+# define YYSTYPE_IS_TRIVIAL 1
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
-# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
-
 /* Copy the second part of user declarations.  */
 
 
-/* Line 216 of yacc.c.  */
-#line 423 "ldgram.c"
+/* Line 264 of yacc.c  */
+#line 317 "ldgram.tab.c"
 
 #ifdef short
 # undef short
@@ -469,7 +363,7 @@
 #define YYSIZE_MAXIMUM ((YYSIZE_T) -1)
 
 #ifndef YY_
-# if defined YYENABLE_NLS && YYENABLE_NLS
+# if YYENABLE_NLS
 #  if ENABLE_NLS
 #   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
 #   define YY_(msgid) dgettext ("bison-runtime", msgid)
@@ -494,14 +388,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int i)
+YYID (int yyi)
 #else
 static int
-YYID (i)
-    int i;
+YYID (yyi)
+    int yyi;
 #endif
 {
-  return i;
+  return yyi;
 }
 #endif
 
@@ -582,9 +476,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss;
-  YYSTYPE yyvs;
-  };
+  yytype_int16 yyss_alloc;
+  YYSTYPE yyvs_alloc;
+};
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -618,12 +512,12 @@
    elements in the stack, and YYPTR gives the new location of the
    stack.  Advance YYPTR to a properly aligned location for the next
    stack.  */
-# define YYSTACK_RELOCATE(Stack)					\
+# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
     do									\
       {									\
 	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack, Stack, yysize);				\
-	Stack = &yyptr->Stack;						\
+	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
+	Stack = &yyptr->Stack_alloc;					\
 	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
 	yyptr += yynewbytes / sizeof (*yyptr);				\
       }									\
@@ -634,20 +528,20 @@
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  17
 /* YYLAST -- Last index in YYTABLE.  */
-#define YYLAST   1838
+#define YYLAST   1860
 
 /* YYNTOKENS -- Number of terminals.  */
-#define YYNTOKENS  147
+#define YYNTOKENS  149
 /* YYNNTS -- Number of nonterminals.  */
 #define YYNNTS  126
 /* YYNRULES -- Number of rules.  */
-#define YYNRULES  356
+#define YYNRULES  358
 /* YYNRULES -- Number of states.  */
-#define YYNSTATES  763
+#define YYNSTATES  771
 
 /* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
 #define YYUNDEFTOK  2
-#define YYMAXUTOK   378
+#define YYMAXUTOK   380
 
 #define YYTRANSLATE(YYX)						\
   ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)
@@ -658,16 +552,16 @@
        0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,     2,     2,   145,     2,     2,     2,    34,    21,     2,
-      37,   142,    32,    30,   140,    31,     2,    33,     2,     2,
-       2,     2,     2,     2,     2,     2,     2,     2,    16,   141,
+       2,     2,     2,   147,     2,     2,     2,    34,    21,     2,
+      37,   144,    32,    30,   142,    31,     2,    33,     2,     2,
+       2,     2,     2,     2,     2,     2,     2,     2,    16,   143,
       24,     6,    25,    15,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,   143,     2,   144,    20,     2,     2,     2,     2,     2,
+       2,   145,     2,   146,    20,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
-       2,     2,     2,    56,    19,    57,   146,     2,     2,     2,
+       2,     2,     2,    56,    19,    57,   148,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
        2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
@@ -692,7 +586,8 @@
      101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
      111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
      121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
-     131,   132,   133,   134,   135,   136,   137,   138,   139
+     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
+     141
 };
 
 #if YYDEBUG
@@ -725,146 +620,147 @@
      731,   735,   739,   743,   747,   751,   755,   759,   763,   769,
      773,   777,   782,   784,   786,   791,   796,   801,   806,   811,
      816,   821,   828,   835,   842,   847,   854,   859,   861,   868,
-     875,   882,   887,   892,   896,   897,   902,   903,   908,   909,
-     914,   915,   917,   919,   921,   922,   923,   924,   925,   926,
-     927,   947,   948,   949,   950,   951,   952,   971,   972,   973,
-     981,   982,   988,   990,   992,   994,   996,   998,  1002,  1003,
-    1006,  1010,  1013,  1020,  1031,  1034,  1036,  1037,  1039,  1042,
-    1043,  1044,  1048,  1049,  1050,  1051,  1052,  1064,  1069,  1070,
-    1073,  1074,  1075,  1082,  1084,  1085,  1089,  1095,  1096,  1100,
-    1101,  1104,  1106,  1109,  1114,  1117,  1118,  1121,  1122,  1128,
-    1130,  1133,  1138,  1144,  1151,  1153,  1156,  1157,  1160,  1165,
-    1170,  1179,  1181,  1183,  1187,  1191,  1192,  1202,  1203,  1211,
-    1213,  1217,  1219,  1223,  1225,  1229,  1230
+     875,   880,   885,   892,   897,   902,   906,   907,   912,   913,
+     918,   919,   924,   925,   927,   929,   931,   932,   933,   934,
+     935,   936,   937,   957,   958,   959,   960,   961,   962,   981,
+     982,   983,   991,   992,   998,  1000,  1002,  1004,  1006,  1008,
+    1012,  1013,  1016,  1020,  1023,  1030,  1041,  1044,  1046,  1047,
+    1049,  1052,  1053,  1054,  1058,  1059,  1060,  1061,  1062,  1074,
+    1079,  1080,  1083,  1084,  1085,  1092,  1094,  1095,  1099,  1105,
+    1106,  1110,  1111,  1114,  1116,  1119,  1124,  1127,  1128,  1131,
+    1132,  1138,  1140,  1143,  1148,  1154,  1161,  1163,  1166,  1167,
+    1170,  1175,  1180,  1189,  1191,  1193,  1197,  1201,  1202,  1212,
+    1213,  1221,  1223,  1227,  1229,  1233,  1235,  1239,  1240
 };
 
 /* YYRHS -- A `-1'-separated list of the rules' RHS.  */
 static const yytype_int16 yyrhs[] =
 {
-     148,     0,    -1,   121,   164,    -1,   122,   152,    -1,   132,
-     261,    -1,   139,   256,    -1,   123,   150,    -1,     4,    -1,
-      -1,   151,     4,     6,   217,    -1,    -1,   153,   154,    -1,
-     154,   155,   109,    -1,    -1,   104,   217,    -1,   104,   217,
-     140,   217,    -1,     4,    -1,   105,    -1,   111,   157,    -1,
-     110,    -1,   115,     4,     6,   217,    -1,   115,     4,   140,
-     217,    -1,   115,     4,   217,    -1,   114,     4,    -1,   106,
-       4,   140,   217,    -1,   106,     4,   217,    -1,   106,     4,
-       6,   217,    -1,    38,     4,     6,   217,    -1,    38,     4,
-     140,   217,    -1,    98,     4,     6,   217,    -1,    98,     4,
-     140,   217,    -1,   107,   159,    -1,   108,   158,    -1,   112,
-       4,    -1,   118,     4,   140,     4,    -1,   118,     4,   140,
-       3,    -1,   117,   217,    -1,   119,     3,    -1,   124,   160,
-      -1,   125,   161,    -1,    -1,    64,   149,   156,   154,    36,
-      -1,   126,     4,    -1,    -1,   157,   140,     4,    -1,   157,
-       4,    -1,    -1,     4,    -1,   158,   140,     4,    -1,     4,
-      -1,   159,   140,     4,    -1,    -1,     4,    -1,   160,   140,
-       4,    -1,    -1,   162,   163,    -1,     4,    -1,   163,     4,
-      -1,   163,   140,     4,    -1,    -1,   165,   166,    -1,   166,
-     167,    -1,    -1,   197,    -1,   174,    -1,   248,    -1,   208,
-      -1,   209,    -1,   211,    -1,   213,    -1,   176,    -1,   263,
-      -1,   141,    -1,    73,    37,     4,   142,    -1,    74,    37,
-     149,   142,    -1,    96,    37,   149,   142,    -1,    59,    37,
-       4,   142,    -1,    59,    37,     4,   140,     4,   140,     4,
-     142,    -1,    61,    37,     4,   142,    -1,    60,    -1,    62,
-      -1,    94,    37,   170,   142,    -1,    -1,    95,   168,    37,
-     170,   142,    -1,    75,    37,   149,   142,    -1,    -1,    64,
-     149,   169,   166,    36,    -1,    89,    37,   214,   142,    -1,
-     125,    37,   161,   142,    -1,    48,    49,     4,    -1,    48,
-      50,     4,    -1,    66,    37,     4,   140,     4,   142,    -1,
-       4,    -1,   170,   140,     4,    -1,   170,     4,    -1,     5,
-      -1,   170,   140,     5,    -1,   170,     5,    -1,    -1,   103,
-      37,   171,   170,   142,    -1,    -1,   170,   140,   103,    37,
-     172,   170,   142,    -1,    -1,   170,   103,    37,   173,   170,
-     142,    -1,    46,    56,   175,    57,    -1,   175,   223,    -1,
-     175,   176,    -1,    -1,    76,    37,     4,   142,    -1,   195,
-     194,    -1,    -1,   113,   177,    37,   217,   140,     4,   142,
-      -1,     4,    -1,    32,    -1,    15,    -1,   178,    -1,   137,
-      37,   180,   142,   178,    -1,    54,    37,   178,   142,    -1,
-      55,    37,   178,   142,    -1,    54,    37,    55,    37,   178,
-     142,   142,    -1,    54,    37,    54,    37,   178,   142,   142,
-      -1,    55,    37,    54,    37,   178,   142,   142,    -1,    55,
-      37,    55,    37,   178,   142,   142,    -1,    54,    37,   137,
-      37,   180,   142,   178,   142,    -1,   180,   178,    -1,   178,
-      -1,   181,   196,   179,    -1,   179,    -1,     4,    -1,   143,
-     181,   144,    -1,   179,    37,   181,   142,    -1,   182,    -1,
-      -1,   133,    37,   184,   182,   142,    -1,   195,   194,    -1,
-      93,    -1,   141,    -1,    97,    -1,    54,    37,    97,   142,
-      -1,   183,    -1,   190,    37,   215,   142,    -1,    91,    37,
-     191,   142,    -1,    -1,   113,   186,    37,   217,   140,     4,
-     142,   194,    -1,    -1,    64,   149,   187,   189,    36,    -1,
-     188,   185,    -1,   185,    -1,    -1,   188,    -1,    41,    -1,
-      42,    -1,    43,    -1,    44,    -1,    45,    -1,   215,    -1,
-       6,   191,    -1,    -1,    14,    -1,    13,    -1,    12,    -1,
+     150,     0,    -1,   123,   166,    -1,   124,   154,    -1,   134,
+     263,    -1,   141,   258,    -1,   125,   152,    -1,     4,    -1,
+      -1,   153,     4,     6,   219,    -1,    -1,   155,   156,    -1,
+     156,   157,   111,    -1,    -1,   106,   219,    -1,   106,   219,
+     142,   219,    -1,     4,    -1,   107,    -1,   113,   159,    -1,
+     112,    -1,   117,     4,     6,   219,    -1,   117,     4,   142,
+     219,    -1,   117,     4,   219,    -1,   116,     4,    -1,   108,
+       4,   142,   219,    -1,   108,     4,   219,    -1,   108,     4,
+       6,   219,    -1,    38,     4,     6,   219,    -1,    38,     4,
+     142,   219,    -1,   100,     4,     6,   219,    -1,   100,     4,
+     142,   219,    -1,   109,   161,    -1,   110,   160,    -1,   114,
+       4,    -1,   120,     4,   142,     4,    -1,   120,     4,   142,
+       3,    -1,   119,   219,    -1,   121,     3,    -1,   126,   162,
+      -1,   127,   163,    -1,    -1,    64,   151,   158,   156,    36,
+      -1,   128,     4,    -1,    -1,   159,   142,     4,    -1,   159,
+       4,    -1,    -1,     4,    -1,   160,   142,     4,    -1,     4,
+      -1,   161,   142,     4,    -1,    -1,     4,    -1,   162,   142,
+       4,    -1,    -1,   164,   165,    -1,     4,    -1,   165,     4,
+      -1,   165,   142,     4,    -1,    -1,   167,   168,    -1,   168,
+     169,    -1,    -1,   199,    -1,   176,    -1,   250,    -1,   210,
+      -1,   211,    -1,   213,    -1,   215,    -1,   178,    -1,   265,
+      -1,   143,    -1,    73,    37,     4,   144,    -1,    74,    37,
+     151,   144,    -1,    98,    37,   151,   144,    -1,    59,    37,
+       4,   144,    -1,    59,    37,     4,   142,     4,   142,     4,
+     144,    -1,    61,    37,     4,   144,    -1,    60,    -1,    62,
+      -1,    96,    37,   172,   144,    -1,    -1,    97,   170,    37,
+     172,   144,    -1,    75,    37,   151,   144,    -1,    -1,    64,
+     151,   171,   168,    36,    -1,    91,    37,   216,   144,    -1,
+     127,    37,   163,   144,    -1,    48,    49,     4,    -1,    48,
+      50,     4,    -1,    66,    37,     4,   142,     4,   144,    -1,
+       4,    -1,   172,   142,     4,    -1,   172,     4,    -1,     5,
+      -1,   172,   142,     5,    -1,   172,     5,    -1,    -1,   105,
+      37,   173,   172,   144,    -1,    -1,   172,   142,   105,    37,
+     174,   172,   144,    -1,    -1,   172,   105,    37,   175,   172,
+     144,    -1,    46,    56,   177,    57,    -1,   177,   225,    -1,
+     177,   178,    -1,    -1,    76,    37,     4,   144,    -1,   197,
+     196,    -1,    -1,   115,   179,    37,   219,   142,     4,   144,
+      -1,     4,    -1,    32,    -1,    15,    -1,   180,    -1,   139,
+      37,   182,   144,   180,    -1,    54,    37,   180,   144,    -1,
+      55,    37,   180,   144,    -1,    54,    37,    55,    37,   180,
+     144,   144,    -1,    54,    37,    54,    37,   180,   144,   144,
+      -1,    55,    37,    54,    37,   180,   144,   144,    -1,    55,
+      37,    55,    37,   180,   144,   144,    -1,    54,    37,   139,
+      37,   182,   144,   180,   144,    -1,   182,   180,    -1,   180,
+      -1,   183,   198,   181,    -1,   181,    -1,     4,    -1,   145,
+     183,   146,    -1,   181,    37,   183,   144,    -1,   184,    -1,
+      -1,   135,    37,   186,   184,   144,    -1,   197,   196,    -1,
+      95,    -1,   143,    -1,    99,    -1,    54,    37,    99,   144,
+      -1,   185,    -1,   192,    37,   217,   144,    -1,    93,    37,
+     193,   144,    -1,    -1,   115,   188,    37,   219,   142,     4,
+     144,   196,    -1,    -1,    64,   151,   189,   191,    36,    -1,
+     190,   187,    -1,   187,    -1,    -1,   190,    -1,    41,    -1,
+      42,    -1,    43,    -1,    44,    -1,    45,    -1,   217,    -1,
+       6,   193,    -1,    -1,    14,    -1,    13,    -1,    12,    -1,
       11,    -1,    10,    -1,     9,    -1,     8,    -1,     7,    -1,
-     141,    -1,   140,    -1,     4,     6,   215,    -1,     4,   193,
-     215,    -1,   101,    37,     4,     6,   215,   142,    -1,   102,
-      37,     4,     6,   215,   142,    -1,   140,    -1,    -1,    65,
-      56,   198,    57,    -1,   199,    -1,    -1,   199,   196,   200,
-      -1,   200,    -1,    -1,     4,   201,   205,    16,   203,   196,
-     204,    -1,    -1,    64,   149,   202,   198,    36,    -1,    90,
-       6,   215,    -1,    92,     6,   215,    -1,    -1,    37,   206,
-     142,    -1,   207,    -1,   206,   207,    -1,     4,    -1,   145,
-       4,    -1,    84,    37,   149,   142,    -1,    85,    37,   210,
-     142,    -1,    85,    37,   142,    -1,   210,   196,   149,    -1,
-     149,    -1,    86,    37,   212,   142,    -1,   212,   196,   149,
-      -1,    -1,    87,    -1,    88,    -1,    -1,     4,   214,    -1,
-       4,   140,   214,    -1,    -1,   216,   217,    -1,    31,   217,
-      -1,    37,   217,   142,    -1,    77,    37,   217,   142,    -1,
-     145,   217,    -1,    30,   217,    -1,   146,   217,    -1,   217,
-      32,   217,    -1,   217,    33,   217,    -1,   217,    34,   217,
-      -1,   217,    30,   217,    -1,   217,    31,   217,    -1,   217,
-      29,   217,    -1,   217,    28,   217,    -1,   217,    23,   217,
-      -1,   217,    22,   217,    -1,   217,    27,   217,    -1,   217,
-      26,   217,    -1,   217,    24,   217,    -1,   217,    25,   217,
-      -1,   217,    21,   217,    -1,   217,    20,   217,    -1,   217,
-      19,   217,    -1,   217,    15,   217,    16,   217,    -1,   217,
-      18,   217,    -1,   217,    17,   217,    -1,    72,    37,     4,
-     142,    -1,     3,    -1,    58,    -1,    79,    37,     4,   142,
-      -1,    78,    37,     4,   142,    -1,    80,    37,     4,   142,
-      -1,    81,    37,     4,   142,    -1,   138,    37,     4,   142,
-      -1,   107,    37,   217,   142,    -1,    38,    37,   217,   142,
-      -1,    38,    37,   217,   140,   217,   142,    -1,    51,    37,
-     217,   140,   217,   142,    -1,    52,    37,   217,   140,   217,
-     142,    -1,    53,    37,   217,   142,    -1,    63,    37,     4,
-     140,   217,   142,    -1,    39,    37,   217,   142,    -1,     4,
-      -1,    82,    37,   217,   140,   217,   142,    -1,    83,    37,
-     217,   140,   217,   142,    -1,   113,    37,   217,   140,     4,
-     142,    -1,    90,    37,     4,   142,    -1,    92,    37,     4,
-     142,    -1,    99,    25,     4,    -1,    -1,    99,    37,   217,
-     142,    -1,    -1,    38,    37,   217,   142,    -1,    -1,   100,
-      37,   217,   142,    -1,    -1,   134,    -1,   135,    -1,   136,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,     4,   224,   239,
-     219,   220,   221,   225,   222,    56,   226,   189,    57,   227,
-     242,   218,   243,   192,   228,   196,    -1,    -1,    -1,    -1,
-      -1,    -1,    71,   229,   240,   241,   219,   221,   230,    56,
-     231,   244,    57,   232,   242,   218,   243,   192,   233,   196,
-      -1,    -1,    -1,    95,   234,   239,   235,    56,   175,    57,
-      -1,    -1,    64,   149,   236,   175,    36,    -1,    67,    -1,
-      68,    -1,    69,    -1,    70,    -1,    71,    -1,    37,   237,
-     142,    -1,    -1,    37,   142,    -1,   217,   238,    16,    -1,
-     238,    16,    -1,    40,    37,   217,   142,   238,    16,    -1,
-      40,    37,   217,   142,    39,    37,   217,   142,   238,    16,
-      -1,   217,    16,    -1,    16,    -1,    -1,    89,    -1,    25,
-       4,    -1,    -1,    -1,   243,    16,     4,    -1,    -1,    -1,
-      -1,    -1,   244,     4,   245,    56,   189,    57,   246,   243,
-     192,   247,   196,    -1,    47,    56,   249,    57,    -1,    -1,
-     249,   250,    -1,    -1,    -1,     4,   251,   253,   254,   252,
-     141,    -1,   217,    -1,    -1,     4,   255,   254,    -1,    99,
-      37,   217,   142,   254,    -1,    -1,    37,   217,   142,    -1,
-      -1,   257,   258,    -1,   259,    -1,   258,   259,    -1,    56,
-     260,    57,   141,    -1,   269,   141,    -1,    -1,   262,   265,
-      -1,    -1,   264,   131,    56,   265,    57,    -1,   266,    -1,
-     265,   266,    -1,    56,   268,    57,   141,    -1,   127,    56,
-     268,    57,   141,    -1,   127,    56,   268,    57,   267,   141,
-      -1,   127,    -1,   267,   127,    -1,    -1,   269,   141,    -1,
-     129,    16,   269,   141,    -1,   130,    16,   269,   141,    -1,
-     129,    16,   269,   141,   130,    16,   269,   141,    -1,   128,
-      -1,     4,    -1,   269,   141,   128,    -1,   269,   141,     4,
-      -1,    -1,   269,   141,   125,     4,    56,   270,   269,   272,
-      57,    -1,    -1,   125,     4,    56,   271,   269,   272,    57,
-      -1,   129,    -1,   269,   141,   129,    -1,   130,    -1,   269,
-     141,   130,    -1,   125,    -1,   269,   141,   125,    -1,    -1,
-     141,    -1
+     143,    -1,   142,    -1,     4,     6,   217,    -1,     4,   195,
+     217,    -1,   103,    37,     4,     6,   217,   144,    -1,   104,
+      37,     4,     6,   217,   144,    -1,   142,    -1,    -1,    65,
+      56,   200,    57,    -1,   201,    -1,    -1,   201,   198,   202,
+      -1,   202,    -1,    -1,     4,   203,   207,    16,   205,   198,
+     206,    -1,    -1,    64,   151,   204,   200,    36,    -1,    92,
+       6,   217,    -1,    94,     6,   217,    -1,    -1,    37,   208,
+     144,    -1,   209,    -1,   208,   209,    -1,     4,    -1,   147,
+       4,    -1,    86,    37,   151,   144,    -1,    87,    37,   212,
+     144,    -1,    87,    37,   144,    -1,   212,   198,   151,    -1,
+     151,    -1,    88,    37,   214,   144,    -1,   214,   198,   151,
+      -1,    -1,    89,    -1,    90,    -1,    -1,     4,   216,    -1,
+       4,   142,   216,    -1,    -1,   218,   219,    -1,    31,   219,
+      -1,    37,   219,   144,    -1,    77,    37,   219,   144,    -1,
+     147,   219,    -1,    30,   219,    -1,   148,   219,    -1,   219,
+      32,   219,    -1,   219,    33,   219,    -1,   219,    34,   219,
+      -1,   219,    30,   219,    -1,   219,    31,   219,    -1,   219,
+      29,   219,    -1,   219,    28,   219,    -1,   219,    23,   219,
+      -1,   219,    22,   219,    -1,   219,    27,   219,    -1,   219,
+      26,   219,    -1,   219,    24,   219,    -1,   219,    25,   219,
+      -1,   219,    21,   219,    -1,   219,    20,   219,    -1,   219,
+      19,   219,    -1,   219,    15,   219,    16,   219,    -1,   219,
+      18,   219,    -1,   219,    17,   219,    -1,    72,    37,     4,
+     144,    -1,     3,    -1,    58,    -1,    79,    37,     4,   144,
+      -1,    78,    37,     4,   144,    -1,    80,    37,     4,   144,
+      -1,    81,    37,     4,   144,    -1,   140,    37,     4,   144,
+      -1,   109,    37,   219,   144,    -1,    38,    37,   219,   144,
+      -1,    38,    37,   219,   142,   219,   144,    -1,    51,    37,
+     219,   142,   219,   144,    -1,    52,    37,   219,   142,   219,
+     144,    -1,    53,    37,   219,   144,    -1,    63,    37,     4,
+     142,   219,   144,    -1,    39,    37,   219,   144,    -1,     4,
+      -1,    82,    37,   219,   142,   219,   144,    -1,    83,    37,
+     219,   142,   219,   144,    -1,    84,    37,   219,   144,    -1,
+      85,    37,   219,   144,    -1,   115,    37,   219,   142,     4,
+     144,    -1,    92,    37,     4,   144,    -1,    94,    37,     4,
+     144,    -1,   101,    25,     4,    -1,    -1,   101,    37,   219,
+     144,    -1,    -1,    38,    37,   219,   144,    -1,    -1,   102,
+      37,   219,   144,    -1,    -1,   136,    -1,   137,    -1,   138,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,     4,   226,   241,
+     221,   222,   223,   227,   224,    56,   228,   191,    57,   229,
+     244,   220,   245,   194,   230,   198,    -1,    -1,    -1,    -1,
+      -1,    -1,    71,   231,   242,   243,   221,   223,   232,    56,
+     233,   246,    57,   234,   244,   220,   245,   194,   235,   198,
+      -1,    -1,    -1,    97,   236,   241,   237,    56,   177,    57,
+      -1,    -1,    64,   151,   238,   177,    36,    -1,    67,    -1,
+      68,    -1,    69,    -1,    70,    -1,    71,    -1,    37,   239,
+     144,    -1,    -1,    37,   144,    -1,   219,   240,    16,    -1,
+     240,    16,    -1,    40,    37,   219,   144,   240,    16,    -1,
+      40,    37,   219,   144,    39,    37,   219,   144,   240,    16,
+      -1,   219,    16,    -1,    16,    -1,    -1,    91,    -1,    25,
+       4,    -1,    -1,    -1,   245,    16,     4,    -1,    -1,    -1,
+      -1,    -1,   246,     4,   247,    56,   191,    57,   248,   245,
+     194,   249,   198,    -1,    47,    56,   251,    57,    -1,    -1,
+     251,   252,    -1,    -1,    -1,     4,   253,   255,   256,   254,
+     143,    -1,   219,    -1,    -1,     4,   257,   256,    -1,   101,
+      37,   219,   144,   256,    -1,    -1,    37,   219,   144,    -1,
+      -1,   259,   260,    -1,   261,    -1,   260,   261,    -1,    56,
+     262,    57,   143,    -1,   271,   143,    -1,    -1,   264,   267,
+      -1,    -1,   266,   133,    56,   267,    57,    -1,   268,    -1,
+     267,   268,    -1,    56,   270,    57,   143,    -1,   129,    56,
+     270,    57,   143,    -1,   129,    56,   270,    57,   269,   143,
+      -1,   129,    -1,   269,   129,    -1,    -1,   271,   143,    -1,
+     131,    16,   271,   143,    -1,   132,    16,   271,   143,    -1,
+     131,    16,   271,   143,   132,    16,   271,   143,    -1,   130,
+      -1,     4,    -1,   271,   143,   130,    -1,   271,   143,     4,
+      -1,    -1,   271,   143,   127,     4,    56,   272,   271,   274,
+      57,    -1,    -1,   127,     4,    56,   273,   271,   274,    57,
+      -1,   131,    -1,   271,   143,   131,    -1,   132,    -1,   271,
+     143,   132,    -1,   127,    -1,   271,   143,   127,    -1,    -1,
+     143,    -1
 };
 
 /* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
@@ -895,17 +791,17 @@
      828,   830,   832,   834,   836,   838,   840,   842,   844,   846,
      848,   850,   852,   854,   857,   859,   861,   863,   865,   867,
      869,   871,   873,   875,   877,   879,   888,   890,   892,   894,
-     896,   898,   900,   906,   907,   911,   912,   916,   917,   921,
-     922,   926,   927,   928,   929,   932,   936,   939,   945,   947,
-     932,   954,   956,   958,   963,   965,   953,   975,   977,   975,
-     983,   982,   989,   990,   991,   992,   993,   997,   998,   999,
-    1003,  1004,  1009,  1010,  1015,  1016,  1021,  1022,  1027,  1029,
-    1034,  1037,  1050,  1054,  1059,  1061,  1052,  1069,  1072,  1074,
-    1078,  1079,  1078,  1088,  1133,  1136,  1148,  1157,  1160,  1167,
-    1167,  1179,  1180,  1184,  1188,  1197,  1197,  1211,  1211,  1221,
-    1222,  1226,  1230,  1234,  1241,  1245,  1253,  1256,  1260,  1264,
-    1268,  1275,  1279,  1283,  1287,  1292,  1291,  1305,  1304,  1314,
-    1318,  1322,  1326,  1330,  1334,  1340,  1342
+     896,   898,   900,   902,   904,   910,   911,   915,   916,   920,
+     921,   925,   926,   930,   931,   932,   933,   936,   940,   943,
+     949,   951,   936,   958,   960,   962,   967,   969,   957,   979,
+     981,   979,   987,   986,   993,   994,   995,   996,   997,  1001,
+    1002,  1003,  1007,  1008,  1013,  1014,  1019,  1020,  1025,  1026,
+    1031,  1033,  1038,  1041,  1054,  1058,  1063,  1065,  1056,  1073,
+    1076,  1078,  1082,  1083,  1082,  1092,  1137,  1140,  1152,  1161,
+    1164,  1171,  1171,  1183,  1184,  1188,  1192,  1201,  1201,  1215,
+    1215,  1225,  1226,  1230,  1234,  1238,  1245,  1249,  1257,  1260,
+    1264,  1268,  1272,  1279,  1283,  1287,  1291,  1296,  1295,  1309,
+    1308,  1318,  1322,  1326,  1330,  1334,  1338,  1344,  1346
 };
 #endif
 
@@ -926,41 +822,42 @@
   "OUTPUT_ARCH", "INHIBIT_COMMON_ALLOCATION", "SEGMENT_START", "INCLUDE",
   "MEMORY", "REGION_ALIAS", "NOLOAD", "DSECT", "COPY", "INFO", "OVERLAY",
   "DEFINED", "TARGET_K", "SEARCH_DIR", "MAP", "ENTRY", "NEXT", "SIZEOF",
-  "ALIGNOF", "ADDR", "LOADADDR", "MAX_K", "MIN_K", "STARTUP", "HLL",
-  "SYSLIB", "FLOAT", "NOFLOAT", "NOCROSSREFS", "ORIGIN", "FILL", "LENGTH",
-  "CREATE_OBJECT_SYMBOLS", "INPUT", "GROUP", "OUTPUT", "CONSTRUCTORS",
-  "ALIGNMOD", "AT", "SUBALIGN", "PROVIDE", "PROVIDE_HIDDEN", "AS_NEEDED",
-  "CHIP", "LIST", "SECT", "ABSOLUTE", "LOAD", "NEWLINE", "ENDWORD",
-  "ORDER", "NAMEWORD", "ASSERT_K", "FORMAT", "PUBLIC", "DEFSYMEND", "BASE",
-  "ALIAS", "TRUNCATE", "REL", "INPUT_SCRIPT", "INPUT_MRI_SCRIPT",
-  "INPUT_DEFSYM", "CASE", "EXTERN", "START", "VERS_TAG", "VERS_IDENTIFIER",
-  "GLOBAL", "LOCAL", "VERSIONK", "INPUT_VERSION_SCRIPT", "KEEP",
-  "ONLY_IF_RO", "ONLY_IF_RW", "SPECIAL", "EXCLUDE_FILE", "CONSTANT",
-  "INPUT_DYNAMIC_LIST", "','", "';'", "')'", "'['", "']'", "'!'", "'~'",
-  "$accept", "file", "filename", "defsym_expr", "@1", "mri_script_file",
-  "@2", "mri_script_lines", "mri_script_command", "@3", "ordernamelist",
-  "mri_load_name_list", "mri_abs_name_list", "casesymlist",
-  "extern_name_list", "@4", "extern_name_list_body", "script_file", "@5",
-  "ifile_list", "ifile_p1", "@6", "@7", "input_list", "@8", "@9", "@10",
-  "sections", "sec_or_group_p1", "statement_anywhere", "@11",
-  "wildcard_name", "wildcard_spec", "exclude_name_list", "file_NAME_list",
-  "input_section_spec_no_keep", "input_section_spec", "@12", "statement",
-  "@13", "@14", "statement_list", "statement_list_opt", "length",
+  "ALIGNOF", "ADDR", "LOADADDR", "MAX_K", "MIN_K", "CEILP2", "NACL_MASK",
+  "STARTUP", "HLL", "SYSLIB", "FLOAT", "NOFLOAT", "NOCROSSREFS", "ORIGIN",
+  "FILL", "LENGTH", "CREATE_OBJECT_SYMBOLS", "INPUT", "GROUP", "OUTPUT",
+  "CONSTRUCTORS", "ALIGNMOD", "AT", "SUBALIGN", "PROVIDE",
+  "PROVIDE_HIDDEN", "AS_NEEDED", "CHIP", "LIST", "SECT", "ABSOLUTE",
+  "LOAD", "NEWLINE", "ENDWORD", "ORDER", "NAMEWORD", "ASSERT_K", "FORMAT",
+  "PUBLIC", "DEFSYMEND", "BASE", "ALIAS", "TRUNCATE", "REL",
+  "INPUT_SCRIPT", "INPUT_MRI_SCRIPT", "INPUT_DEFSYM", "CASE", "EXTERN",
+  "START", "VERS_TAG", "VERS_IDENTIFIER", "GLOBAL", "LOCAL", "VERSIONK",
+  "INPUT_VERSION_SCRIPT", "KEEP", "ONLY_IF_RO", "ONLY_IF_RW", "SPECIAL",
+  "EXCLUDE_FILE", "CONSTANT", "INPUT_DYNAMIC_LIST", "','", "';'", "')'",
+  "'['", "']'", "'!'", "'~'", "$accept", "file", "filename", "defsym_expr",
+  "$@1", "mri_script_file", "$@2", "mri_script_lines",
+  "mri_script_command", "$@3", "ordernamelist", "mri_load_name_list",
+  "mri_abs_name_list", "casesymlist", "extern_name_list", "$@4",
+  "extern_name_list_body", "script_file", "$@5", "ifile_list", "ifile_p1",
+  "$@6", "$@7", "input_list", "@8", "@9", "@10", "sections",
+  "sec_or_group_p1", "statement_anywhere", "$@11", "wildcard_name",
+  "wildcard_spec", "exclude_name_list", "file_NAME_list",
+  "input_section_spec_no_keep", "input_section_spec", "$@12", "statement",
+  "$@13", "$@14", "statement_list", "statement_list_opt", "length",
   "fill_exp", "fill_opt", "assign_op", "end", "assignment", "opt_comma",
   "memory", "memory_spec_list_opt", "memory_spec_list", "memory_spec",
-  "@15", "@16", "origin_spec", "length_spec", "attributes_opt",
+  "$@15", "$@16", "origin_spec", "length_spec", "attributes_opt",
   "attributes_list", "attributes_string", "startup", "high_level_library",
   "high_level_library_NAME_list", "low_level_library",
   "low_level_library_NAME_list", "floating_point_support",
-  "nocrossref_list", "mustbe_exp", "@17", "exp", "memspec_at_opt",
+  "nocrossref_list", "mustbe_exp", "$@17", "exp", "memspec_at_opt",
   "opt_at", "opt_align", "opt_subalign", "sect_constraint", "section",
-  "@18", "@19", "@20", "@21", "@22", "@23", "@24", "@25", "@26", "@27",
-  "@28", "@29", "@30", "type", "atype", "opt_exp_with_type",
+  "$@18", "$@19", "$@20", "$@21", "$@22", "$@23", "$@24", "$@25", "$@26",
+  "$@27", "$@28", "$@29", "$@30", "type", "atype", "opt_exp_with_type",
   "opt_exp_without_type", "opt_nocrossrefs", "memspec_opt", "phdr_opt",
-  "overlay_section", "@31", "@32", "@33", "phdrs", "phdr_list", "phdr",
-  "@34", "@35", "phdr_type", "phdr_qualifiers", "phdr_val",
-  "dynamic_list_file", "@36", "dynamic_list_nodes", "dynamic_list_node",
-  "dynamic_list_tag", "version_script_file", "@37", "version", "@38",
+  "overlay_section", "$@31", "$@32", "$@33", "phdrs", "phdr_list", "phdr",
+  "$@34", "$@35", "phdr_type", "phdr_qualifiers", "phdr_val",
+  "dynamic_list_file", "$@36", "dynamic_list_nodes", "dynamic_list_node",
+  "dynamic_list_tag", "version_script_file", "$@37", "version", "$@38",
   "vers_nodes", "vers_node", "verdep", "vers_tag", "vers_defns", "@39",
   "@40", "opt_semicolon", 0
 };
@@ -985,49 +882,49 @@
      349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
      369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
-      44,    59,    41,    91,    93,    33,   126
+     379,   380,    44,    59,    41,    91,    93,    33,   126
 };
 # endif
 
 /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
 static const yytype_uint16 yyr1[] =
 {
-       0,   147,   148,   148,   148,   148,   148,   149,   151,   150,
-     153,   152,   154,   154,   155,   155,   155,   155,   155,   155,
-     155,   155,   155,   155,   155,   155,   155,   155,   155,   155,
-     155,   155,   155,   155,   155,   155,   155,   155,   155,   155,
-     156,   155,   155,   155,   157,   157,   157,   158,   158,   159,
-     159,   160,   160,   160,   162,   161,   163,   163,   163,   165,
-     164,   166,   166,   167,   167,   167,   167,   167,   167,   167,
-     167,   167,   167,   167,   167,   167,   167,   167,   167,   167,
-     167,   167,   168,   167,   167,   169,   167,   167,   167,   167,
-     167,   167,   170,   170,   170,   170,   170,   170,   171,   170,
-     172,   170,   173,   170,   174,   175,   175,   175,   176,   176,
-     177,   176,   178,   178,   178,   179,   179,   179,   179,   179,
-     179,   179,   179,   179,   180,   180,   181,   181,   182,   182,
-     182,   183,   184,   183,   185,   185,   185,   185,   185,   185,
-     185,   185,   186,   185,   187,   185,   188,   188,   189,   189,
-     190,   190,   190,   190,   190,   191,   192,   192,   193,   193,
-     193,   193,   193,   193,   193,   193,   194,   194,   195,   195,
-     195,   195,   196,   196,   197,   198,   198,   199,   199,   201,
-     200,   202,   200,   203,   204,   205,   205,   206,   206,   207,
-     207,   208,   209,   209,   210,   210,   211,   212,   212,   213,
-     213,   214,   214,   214,   216,   215,   217,   217,   217,   217,
-     217,   217,   217,   217,   217,   217,   217,   217,   217,   217,
-     217,   217,   217,   217,   217,   217,   217,   217,   217,   217,
-     217,   217,   217,   217,   217,   217,   217,   217,   217,   217,
-     217,   217,   217,   217,   217,   217,   217,   217,   217,   217,
-     217,   217,   217,   218,   218,   219,   219,   220,   220,   221,
-     221,   222,   222,   222,   222,   224,   225,   226,   227,   228,
-     223,   229,   230,   231,   232,   233,   223,   234,   235,   223,
-     236,   223,   237,   237,   237,   237,   237,   238,   238,   238,
-     239,   239,   239,   239,   240,   240,   241,   241,   242,   242,
-     243,   243,   244,   245,   246,   247,   244,   248,   249,   249,
-     251,   252,   250,   253,   254,   254,   254,   255,   255,   257,
-     256,   258,   258,   259,   260,   262,   261,   264,   263,   265,
-     265,   266,   266,   266,   267,   267,   268,   268,   268,   268,
-     268,   269,   269,   269,   269,   270,   269,   271,   269,   269,
-     269,   269,   269,   269,   269,   272,   272
+       0,   149,   150,   150,   150,   150,   150,   151,   153,   152,
+     155,   154,   156,   156,   157,   157,   157,   157,   157,   157,
+     157,   157,   157,   157,   157,   157,   157,   157,   157,   157,
+     157,   157,   157,   157,   157,   157,   157,   157,   157,   157,
+     158,   157,   157,   157,   159,   159,   159,   160,   160,   161,
+     161,   162,   162,   162,   164,   163,   165,   165,   165,   167,
+     166,   168,   168,   169,   169,   169,   169,   169,   169,   169,
+     169,   169,   169,   169,   169,   169,   169,   169,   169,   169,
+     169,   169,   170,   169,   169,   171,   169,   169,   169,   169,
+     169,   169,   172,   172,   172,   172,   172,   172,   173,   172,
+     174,   172,   175,   172,   176,   177,   177,   177,   178,   178,
+     179,   178,   180,   180,   180,   181,   181,   181,   181,   181,
+     181,   181,   181,   181,   182,   182,   183,   183,   184,   184,
+     184,   185,   186,   185,   187,   187,   187,   187,   187,   187,
+     187,   187,   188,   187,   189,   187,   190,   190,   191,   191,
+     192,   192,   192,   192,   192,   193,   194,   194,   195,   195,
+     195,   195,   195,   195,   195,   195,   196,   196,   197,   197,
+     197,   197,   198,   198,   199,   200,   200,   201,   201,   203,
+     202,   204,   202,   205,   206,   207,   207,   208,   208,   209,
+     209,   210,   211,   211,   212,   212,   213,   214,   214,   215,
+     215,   216,   216,   216,   218,   217,   219,   219,   219,   219,
+     219,   219,   219,   219,   219,   219,   219,   219,   219,   219,
+     219,   219,   219,   219,   219,   219,   219,   219,   219,   219,
+     219,   219,   219,   219,   219,   219,   219,   219,   219,   219,
+     219,   219,   219,   219,   219,   219,   219,   219,   219,   219,
+     219,   219,   219,   219,   219,   220,   220,   221,   221,   222,
+     222,   223,   223,   224,   224,   224,   224,   226,   227,   228,
+     229,   230,   225,   231,   232,   233,   234,   235,   225,   236,
+     237,   225,   238,   225,   239,   239,   239,   239,   239,   240,
+     240,   240,   241,   241,   241,   241,   242,   242,   243,   243,
+     244,   244,   245,   245,   246,   247,   248,   249,   246,   250,
+     251,   251,   253,   254,   252,   255,   256,   256,   256,   257,
+     257,   259,   258,   260,   260,   261,   262,   264,   263,   266,
+     265,   267,   267,   268,   268,   268,   269,   269,   270,   270,
+     270,   270,   270,   271,   271,   271,   271,   272,   271,   273,
+     271,   271,   271,   271,   271,   271,   271,   274,   274
 };
 
 /* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
@@ -1058,17 +955,17 @@
        3,     3,     3,     3,     3,     3,     3,     3,     5,     3,
        3,     4,     1,     1,     4,     4,     4,     4,     4,     4,
        4,     6,     6,     6,     4,     6,     4,     1,     6,     6,
-       6,     4,     4,     3,     0,     4,     0,     4,     0,     4,
-       0,     1,     1,     1,     0,     0,     0,     0,     0,     0,
-      19,     0,     0,     0,     0,     0,    18,     0,     0,     7,
-       0,     5,     1,     1,     1,     1,     1,     3,     0,     2,
-       3,     2,     6,    10,     2,     1,     0,     1,     2,     0,
-       0,     3,     0,     0,     0,     0,    11,     4,     0,     2,
-       0,     0,     6,     1,     0,     3,     5,     0,     3,     0,
-       2,     1,     2,     4,     2,     0,     2,     0,     5,     1,
-       2,     4,     5,     6,     1,     2,     0,     2,     4,     4,
-       8,     1,     1,     3,     3,     0,     9,     0,     7,     1,
-       3,     1,     3,     1,     3,     0,     1
+       4,     4,     6,     4,     4,     3,     0,     4,     0,     4,
+       0,     4,     0,     1,     1,     1,     0,     0,     0,     0,
+       0,     0,    19,     0,     0,     0,     0,     0,    18,     0,
+       0,     7,     0,     5,     1,     1,     1,     1,     1,     3,
+       0,     2,     3,     2,     6,    10,     2,     1,     0,     1,
+       2,     0,     0,     3,     0,     0,     0,     0,    11,     4,
+       0,     2,     0,     0,     6,     1,     0,     3,     5,     0,
+       3,     0,     2,     1,     2,     4,     2,     0,     2,     0,
+       5,     1,     2,     4,     5,     6,     1,     2,     0,     2,
+       4,     4,     8,     1,     1,     3,     3,     0,     9,     0,
+       7,     1,     3,     1,     3,     1,     3,     0,     1
 };
 
 /* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
@@ -1076,667 +973,676 @@
    means the default is an error.  */
 static const yytype_uint16 yydefact[] =
 {
-       0,    59,    10,     8,   325,   319,     0,     2,    62,     3,
+       0,    59,    10,     8,   327,   321,     0,     2,    62,     3,
       13,     6,     0,     4,     0,     5,     0,     1,    60,    11,
-       0,   336,     0,   326,   329,     0,   320,   321,     0,     0,
+       0,   338,     0,   328,   331,     0,   322,   323,     0,     0,
        0,     0,     0,    79,     0,    80,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,   199,   200,     0,     0,
       82,     0,     0,     0,   110,     0,    72,    61,    64,    70,
        0,    63,    66,    67,    68,    69,    65,    71,     0,    16,
        0,     0,     0,     0,    17,     0,     0,     0,    19,    46,
        0,     0,     0,     0,     0,     0,    51,    54,     0,     0,
-       0,   342,   353,   341,   349,   351,     0,     0,   336,   330,
-     349,   351,     0,     0,   322,   204,   165,   164,   163,   162,
-     161,   160,   159,   158,   204,   107,   308,     0,     0,     0,
+       0,   344,   355,   343,   351,   353,     0,     0,   338,   332,
+     351,   353,     0,     0,   324,   204,   165,   164,   163,   162,
+     161,   160,   159,   158,   204,   107,   310,     0,     0,     0,
        0,     7,    85,   176,     0,     0,     0,     0,     0,     0,
        0,   198,   201,     0,     0,     0,     0,     0,     0,    54,
      167,   166,   109,     0,     0,    40,     0,   232,   247,     0,
        0,     0,     0,     0,     0,     0,     0,   233,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,    14,     0,    49,    31,    47,    32,
-      18,    33,    23,     0,    36,     0,    37,    52,    38,    39,
-       0,    42,    12,     9,     0,     0,     0,     0,   337,     0,
-       0,   324,   168,     0,   169,     0,     0,    89,    90,     0,
-       0,    62,   179,     0,     0,   173,   178,     0,     0,     0,
-       0,     0,     0,   193,   195,   173,   173,   201,     0,    92,
-      95,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,    13,     0,     0,   210,   206,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,    14,     0,    49,    31,
+      47,    32,    18,    33,    23,     0,    36,     0,    37,    52,
+      38,    39,     0,    42,    12,     9,     0,     0,     0,     0,
+     339,     0,     0,   326,   168,     0,   169,     0,     0,    89,
+      90,     0,     0,    62,   179,     0,     0,   173,   178,     0,
+       0,     0,     0,     0,     0,   193,   195,   173,   173,   201,
+       0,    92,    95,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,    13,     0,     0,   210,   206,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,   209,   211,     0,
+       0,   209,   211,     0,     0,     0,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,    25,     0,     0,    45,     0,
+       0,     0,    22,     0,     0,    56,    55,   349,     0,     0,
+     333,   346,   356,   345,   352,   354,     0,   325,   205,   267,
+     104,     0,   273,   279,   106,   105,   312,   309,   311,     0,
+      76,    78,   329,   185,   181,   174,   172,     0,     0,    73,
+      74,    84,   108,   191,   192,     0,   196,     0,   201,   202,
+      87,    98,    94,    97,     0,     0,    81,     0,    75,   204,
+     204,     0,    88,     0,    27,    28,    43,    29,    30,   207,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,    25,     0,     0,    45,     0,     0,     0,    22,     0,
-       0,    56,    55,   347,     0,     0,   331,   344,   354,   343,
-     350,   352,     0,   323,   205,   265,   104,     0,   271,   277,
-     106,   105,   310,   307,   309,     0,    76,    78,   327,   185,
-     181,   174,   172,     0,     0,    73,    74,    84,   108,   191,
-     192,     0,   196,     0,   201,   202,    87,    98,    94,    97,
-       0,     0,    81,     0,    75,   204,   204,     0,    88,     0,
-      27,    28,    43,    29,    30,   207,     0,     0,     0,     0,
        0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,     0,     0,     0,   230,   229,   227,   226,
-     225,   220,   219,   223,   224,   222,   221,   218,   217,   215,
-     216,   212,   213,   214,    15,    26,    24,    50,    48,    44,
-      20,    21,    35,    34,    53,    57,     0,     0,   338,   339,
-       0,   334,   332,     0,   288,   280,     0,   288,     0,     0,
-      86,     0,     0,   176,   177,     0,   194,   197,   203,     0,
-     102,    93,    96,     0,    83,     0,     0,     0,   328,    41,
-       0,   240,   246,     0,     0,   244,     0,   231,   208,   235,
-     234,   236,   237,     0,     0,   251,   252,   239,     0,   238,
-       0,    58,   355,   352,   345,   335,   333,     0,     0,   288,
-       0,   256,   107,   295,     0,   296,   278,   313,   314,     0,
-     189,     0,     0,   187,     0,     0,    91,     0,     0,   100,
-     170,   171,     0,     0,     0,     0,     0,     0,     0,     0,
-     228,   356,     0,     0,     0,   282,   283,   284,   285,   286,
-     289,     0,     0,     0,     0,   291,     0,   258,     0,   294,
-     297,   256,     0,   317,     0,   311,     0,   190,   186,   188,
-       0,   173,   182,    99,     0,     0,   111,   241,   242,   243,
-     245,   248,   249,   250,   348,     0,   355,   287,     0,   290,
-       0,     0,   260,   281,   260,   107,     0,   314,     0,     0,
-      77,   204,     0,   103,     0,   340,     0,   288,     0,     0,
-       0,   266,   272,     0,     0,   315,     0,   312,   183,     0,
-     180,   101,   346,     0,     0,   255,     0,     0,   264,     0,
-     279,   318,   314,   204,     0,   292,   257,     0,   261,   262,
-     263,     0,   273,   316,   184,     0,   259,   267,   302,   288,
-     148,     0,     0,   128,   114,   113,   150,   151,   152,   153,
-     154,     0,     0,     0,     0,   135,   137,   142,     0,     0,
-     136,     0,   115,     0,   131,   139,   147,   149,     0,     0,
-       0,   303,   274,   293,     0,     0,   144,   204,     0,   132,
-       0,   112,     0,   127,   173,     0,   146,   268,   204,   134,
-       0,   299,     0,     0,     0,     0,     0,     0,     0,     0,
-     148,     0,   155,     0,     0,   125,     0,     0,   129,     0,
-     173,   299,     0,   148,     0,   254,     0,     0,   138,     0,
-     117,     0,     0,   118,     0,   141,     0,   112,     0,     0,
-     124,   126,   130,   254,   140,     0,   298,     0,   300,     0,
-       0,     0,     0,     0,   145,     0,   133,   116,   300,   304,
-       0,   157,     0,     0,     0,     0,     0,     0,   157,   300,
-     253,   204,     0,   275,   120,   119,     0,   121,   122,     0,
-     269,   157,   156,   301,   173,   123,   143,   173,   305,   276,
-     270,   173,   306
+       0,     0,   230,   229,   227,   226,   225,   220,   219,   223,
+     224,   222,   221,   218,   217,   215,   216,   212,   213,   214,
+      15,    26,    24,    50,    48,    44,    20,    21,    35,    34,
+      53,    57,     0,     0,   340,   341,     0,   336,   334,     0,
+     290,   282,     0,   290,     0,     0,    86,     0,     0,   176,
+     177,     0,   194,   197,   203,     0,   102,    93,    96,     0,
+      83,     0,     0,     0,   330,    41,     0,   240,   246,     0,
+       0,   244,     0,   231,   208,   235,   234,   236,   237,     0,
+       0,   250,   251,   253,   254,   239,     0,   238,     0,    58,
+     357,   354,   347,   337,   335,     0,     0,   290,     0,   258,
+     107,   297,     0,   298,   280,   315,   316,     0,   189,     0,
+       0,   187,     0,     0,    91,     0,     0,   100,   170,   171,
+       0,     0,     0,     0,     0,     0,     0,     0,   228,   358,
+       0,     0,     0,   284,   285,   286,   287,   288,   291,     0,
+       0,     0,     0,   293,     0,   260,     0,   296,   299,   258,
+       0,   319,     0,   313,     0,   190,   186,   188,     0,   173,
+     182,    99,     0,     0,   111,   241,   242,   243,   245,   248,
+     249,   252,   350,     0,   357,   289,     0,   292,     0,     0,
+     262,   283,   262,   107,     0,   316,     0,     0,    77,   204,
+       0,   103,     0,   342,     0,   290,     0,     0,     0,   268,
+     274,     0,     0,   317,     0,   314,   183,     0,   180,   101,
+     348,     0,     0,   257,     0,     0,   266,     0,   281,   320,
+     316,   204,     0,   294,   259,     0,   263,   264,   265,     0,
+     275,   318,   184,     0,   261,   269,   304,   290,   148,     0,
+       0,   128,   114,   113,   150,   151,   152,   153,   154,     0,
+       0,     0,     0,   135,   137,   142,     0,     0,   136,     0,
+     115,     0,   131,   139,   147,   149,     0,     0,     0,   305,
+     276,   295,     0,     0,   144,   204,     0,   132,     0,   112,
+       0,   127,   173,     0,   146,   270,   204,   134,     0,   301,
+       0,     0,     0,     0,     0,     0,     0,     0,   148,     0,
+     155,     0,     0,   125,     0,     0,   129,     0,   173,   301,
+       0,   148,     0,   256,     0,     0,   138,     0,   117,     0,
+       0,   118,     0,   141,     0,   112,     0,     0,   124,   126,
+     130,   256,   140,     0,   300,     0,   302,     0,     0,     0,
+       0,     0,   145,     0,   133,   116,   302,   306,     0,   157,
+       0,     0,     0,     0,     0,     0,   157,   302,   255,   204,
+       0,   277,   120,   119,     0,   121,   122,     0,   271,   157,
+     156,   303,   173,   123,   143,   173,   307,   278,   272,   173,
+     308
 };
 
 /* YYDEFGOTO[NTERM-NUM].  */
 static const yytype_int16 yydefgoto[] =
 {
-      -1,     6,   122,    11,    12,     9,    10,    19,    89,   242,
-     180,   179,   177,   188,   189,   190,   302,     7,     8,    18,
-      57,   134,   211,   232,   439,   545,   498,    58,   205,   320,
-     138,   642,   643,   686,   664,   644,   645,   684,   646,   658,
-     680,   647,   648,   649,   681,   743,   114,   142,    60,   689,
-      61,   214,   215,   216,   329,   433,   541,   590,   432,   492,
-     493,    62,    63,   225,    64,   226,    65,   228,   682,   203,
-     247,   718,   527,   562,   581,   611,   321,   424,   598,   620,
-     691,   757,   426,   599,   618,   671,   754,   427,   532,   482,
-     521,   480,   481,   485,   531,   695,   731,   621,   670,   739,
-     761,    66,   206,   324,   428,   569,   488,   535,   567,    15,
+      -1,     6,   122,    11,    12,     9,    10,    19,    89,   244,
+     182,   181,   179,   190,   191,   192,   306,     7,     8,    18,
+      57,   134,   213,   234,   445,   553,   506,    58,   207,   324,
+     138,   650,   651,   694,   672,   652,   653,   692,   654,   666,
+     688,   655,   656,   657,   689,   751,   114,   142,    60,   697,
+      61,   216,   217,   218,   333,   439,   549,   598,   438,   500,
+     501,    62,    63,   227,    64,   228,    65,   230,   690,   205,
+     249,   726,   535,   570,   589,   619,   325,   430,   606,   628,
+     699,   765,   432,   607,   626,   679,   762,   433,   540,   490,
+     529,   488,   489,   493,   539,   703,   739,   629,   678,   747,
+     769,    66,   208,   328,   434,   577,   496,   543,   575,    15,
       16,    26,    27,   102,    13,    14,    67,    68,    23,    24,
-     423,    96,    97,   514,   417,   512
+     429,    96,    97,   522,   423,   520
 };
 
 /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
    STATE-NUM.  */
-#define YYPACT_NINF -621
+#define YYPACT_NINF -658
 static const yytype_int16 yypact[] =
 {
-     180,  -621,  -621,  -621,  -621,  -621,    27,  -621,  -621,  -621,
-    -621,  -621,    38,  -621,   -21,  -621,    23,  -621,   824,  1581,
-     111,   112,    75,   -21,  -621,   120,    23,  -621,   623,    95,
-     128,   170,   153,  -621,   201,  -621,   242,   195,   220,   223,
-     226,   238,   245,   252,   280,   285,  -621,  -621,   286,   288,
-    -621,   290,   291,   299,  -621,   315,  -621,  -621,  -621,  -621,
-     129,  -621,  -621,  -621,  -621,  -621,  -621,  -621,   206,  -621,
-     352,   242,   354,   680,  -621,   355,   359,   360,  -621,  -621,
-     361,   363,   366,   680,   367,   369,   372,  -621,   374,   266,
-     680,  -621,   378,  -621,   373,   376,   331,   253,   112,  -621,
-    -621,  -621,   338,   255,  -621,  -621,  -621,  -621,  -621,  -621,
-    -621,  -621,  -621,  -621,  -621,  -621,  -621,   402,   404,   405,
-     406,  -621,  -621,    24,   409,   411,   242,   242,   412,   242,
-       4,  -621,   418,    20,   388,   242,   423,   424,   392,  -621,
-    -621,  -621,  -621,   375,    33,  -621,    41,  -621,  -621,   680,
-     680,   680,   393,   399,   400,   401,   403,  -621,   408,   413,
-     414,   415,   417,   419,   420,   428,   429,   430,   432,   433,
-     435,   438,   680,   680,  1400,   228,  -621,   301,  -621,   302,
-       5,  -621,  -621,   381,  1756,   303,  -621,  -621,   307,  -621,
-     444,  -621,  -621,  1756,   421,   120,   120,   314,   217,   422,
-     335,   217,  -621,   680,  -621,   322,    46,  -621,  -621,    10,
-     336,  -621,  -621,   242,   425,    -2,  -621,   340,   341,   342,
-     343,   347,   348,  -621,  -621,    87,   114,    22,   349,  -621,
-    -621,   455,    32,    20,   356,   490,   491,   680,   357,   -21,
-     680,   680,  -621,   680,   680,  -621,  -621,   833,   680,   680,
-     680,   680,   680,   497,   498,   680,   503,   504,   505,   506,
-     680,   680,   509,   510,   680,   680,   511,  -621,  -621,   680,
-     680,   680,   680,   680,   680,   680,   680,   680,   680,   680,
-     680,   680,   680,   680,   680,   680,   680,   680,   680,   680,
-     680,  1756,   512,   513,  -621,   514,   680,   680,  1756,   310,
-     516,  -621,    25,  -621,   384,   387,  -621,  -621,   518,  -621,
-    -621,  -621,   -12,  -621,  1756,   623,  -621,   242,  -621,  -621,
-    -621,  -621,  -621,  -621,  -621,   525,  -621,  -621,   897,   493,
-    -621,  -621,  -621,    24,   528,  -621,  -621,  -621,  -621,  -621,
-    -621,   242,  -621,   242,   418,  -621,  -621,  -621,  -621,  -621,
-     496,    39,  -621,    86,  -621,  -621,  -621,  1420,  -621,     6,
-    1756,  1756,   691,  1756,  1756,  -621,  1022,  1042,  1440,  1460,
-    1062,   394,   395,  1082,   396,   426,   427,   436,  1480,  1500,
-     437,   440,  1102,  1524,   441,  1716,  1773,  1789,  1804,  1002,
-    1643,   987,   987,   371,   371,   371,   371,   300,   300,    37,
-      37,  -621,  -621,  -621,  1756,  1756,  1756,  -621,  -621,  -621,
-    1756,  1756,  -621,  -621,  -621,  -621,   531,   120,   232,   217,
-     480,  -621,  -621,    -7,   536,  -621,   608,   536,   680,   407,
-    -621,     3,   527,    24,  -621,   442,  -621,  -621,  -621,    20,
-    -621,  -621,  -621,   507,  -621,   443,   448,   537,  -621,  -621,
-     680,  -621,  -621,   680,   680,  -621,   680,  -621,  -621,  -621,
-    -621,  -621,  -621,   680,   680,  -621,  -621,  -621,   542,  -621,
-     680,  -621,   431,   532,  -621,  -621,  -621,    15,   522,  1693,
-     545,   461,  -621,  -621,  1736,   473,  -621,  1756,    19,   560,
-    -621,   566,     2,  -621,   481,   541,  -621,   122,    20,  -621,
-    -621,  -621,   449,  1122,  1148,  1168,  1188,  1208,  1228,   450,
-    1756,   217,   523,   120,   120,  -621,  -621,  -621,  -621,  -621,
-    -621,   451,   680,   227,   570,  -621,   558,   559,   410,  -621,
-    -621,   461,   540,   561,   563,  -621,   459,  -621,  -621,  -621,
-     596,   463,  -621,  -621,   132,    20,  -621,  -621,  -621,  -621,
-    -621,  -621,  -621,  -621,  -621,   465,   431,  -621,  1248,  -621,
-     680,   567,   520,  -621,   520,  -621,   680,    19,   680,   466,
-    -621,  -621,   517,  -621,   136,   217,   564,   248,  1274,   680,
-     585,  -621,  -621,   601,  1294,  -621,  1314,  -621,  -621,   617,
-    -621,  -621,  -621,   588,   611,  -621,  1334,   680,   214,   584,
-    -621,  -621,    19,  -621,   680,  -621,  -621,  1354,  -621,  -621,
-    -621,   586,  -621,  -621,  -621,  1374,  -621,  -621,  -621,   604,
-     736,    47,   628,   544,  -621,  -621,  -621,  -621,  -621,  -621,
-    -621,   613,   614,   242,   615,  -621,  -621,  -621,   616,   618,
-    -621,   284,  -621,   619,  -621,  -621,  -621,   736,   591,   620,
-     129,  -621,  -621,  -621,    57,   229,  -621,  -621,   625,  -621,
-     151,  -621,   626,  -621,   -31,   284,  -621,  -621,  -621,  -621,
-     598,   639,   630,   631,   533,   632,   534,   633,   636,   550,
-     736,   551,  -621,   680,    26,  -621,    16,   289,  -621,   284,
-     150,   639,   552,   736,   674,   580,   151,   151,  -621,   151,
-    -621,   151,   151,  -621,   661,  -621,  1544,   557,   562,   151,
-    -621,  -621,  -621,   580,  -621,   644,  -621,   681,  -621,   565,
-     571,    17,   574,   578,  -621,   701,  -621,  -621,  -621,  -621,
-     704,    58,   581,   582,   151,   583,   592,   593,    58,  -621,
-    -621,  -621,   705,  -621,  -621,  -621,   594,  -621,  -621,   129,
-    -621,    58,  -621,  -621,   463,  -621,  -621,   463,  -621,  -621,
-    -621,   463,  -621
+     278,  -658,  -658,  -658,  -658,  -658,   116,  -658,  -658,  -658,
+    -658,  -658,    39,  -658,   -21,  -658,    88,  -658,   818,  1636,
+     148,    67,    95,   -21,  -658,   106,    88,  -658,   889,   112,
+     126,    70,   156,  -658,   189,  -658,   225,   174,   203,   217,
+     218,   227,   231,   245,   253,   260,  -658,  -658,   281,   289,
+    -658,   290,   292,   294,  -658,   295,  -658,  -658,  -658,  -658,
+      43,  -658,  -658,  -658,  -658,  -658,  -658,  -658,   188,  -658,
+     324,   225,   329,   672,  -658,   330,   332,   336,  -658,  -658,
+     337,   341,   342,   672,   345,   350,   352,  -658,   354,   243,
+     672,  -658,   362,  -658,   353,   355,   315,   230,    67,  -658,
+    -658,  -658,   317,   241,  -658,  -658,  -658,  -658,  -658,  -658,
+    -658,  -658,  -658,  -658,  -658,  -658,  -658,   381,   388,   394,
+     395,  -658,  -658,    47,   396,   400,   225,   225,   403,   225,
+      20,  -658,   406,    21,   374,   225,   410,   411,   384,  -658,
+    -658,  -658,  -658,   366,    33,  -658,    41,  -658,  -658,   672,
+     672,   672,   390,   391,   392,   397,   399,  -658,   404,   405,
+     407,   409,   414,   417,   421,   423,   424,   436,   438,   440,
+     441,   451,   453,   454,   672,   672,  1433,   228,  -658,   301,
+    -658,   305,     5,  -658,  -658,   387,   827,   306,  -658,  -658,
+     347,  -658,   427,  -658,  -658,   827,   376,   106,   106,   351,
+     114,   380,   356,   114,  -658,   672,  -658,   291,    34,  -658,
+    -658,   105,   309,  -658,  -658,   225,   443,    -2,  -658,   363,
+     349,   360,   371,   372,   373,  -658,  -658,   127,   145,    19,
+     377,  -658,  -658,   460,    16,    21,   378,   492,   500,   672,
+     379,   -21,   672,   672,  -658,   672,   672,  -658,  -658,   776,
+     672,   672,   672,   672,   672,   429,   503,   672,   514,   520,
+     521,   522,   672,   672,   672,   672,   524,   526,   672,   672,
+     529,  -658,  -658,   672,   672,   672,   672,   672,   672,   672,
+     672,   672,   672,   672,   672,   672,   672,   672,   672,   672,
+     672,   672,   672,   672,   672,   827,   534,   536,  -658,   537,
+     672,   672,   827,    66,   538,  -658,    25,  -658,   413,   418,
+    -658,  -658,   543,  -658,  -658,  -658,   -55,  -658,   827,   889,
+    -658,   225,  -658,  -658,  -658,  -658,  -658,  -658,  -658,   545,
+    -658,  -658,   882,   513,  -658,  -658,  -658,    47,   548,  -658,
+    -658,  -658,  -658,  -658,  -658,   225,  -658,   225,   406,  -658,
+    -658,  -658,  -658,  -658,   516,    28,  -658,    32,  -658,  -658,
+    -658,  1453,  -658,     7,   827,   827,  1660,   827,   827,  -658,
+    1009,  1029,  1473,  1493,  1049,   412,   419,  1069,   422,   426,
+     428,   430,  1521,  1559,  1089,  1109,   431,   432,  1137,  1579,
+     433,  1774,  1811,  1539,  1826,   663,   988,   688,   688,   601,
+     601,   601,   601,   452,   452,   270,   270,  -658,  -658,  -658,
+     827,   827,   827,  -658,  -658,  -658,   827,   827,  -658,  -658,
+    -658,  -658,   556,   106,   220,   114,   509,  -658,  -658,    14,
+     506,  -658,   589,   506,   672,   420,  -658,     3,   551,    47,
+    -658,   435,  -658,  -658,  -658,    21,  -658,  -658,  -658,   531,
+    -658,   437,   450,   576,  -658,  -658,   672,  -658,  -658,   672,
+     672,  -658,   672,  -658,  -658,  -658,  -658,  -658,  -658,   672,
+     672,  -658,  -658,  -658,  -658,  -658,   578,  -658,   672,  -658,
+     456,   579,  -658,  -658,  -658,    15,   559,  1628,   581,   501,
+    -658,  -658,  1794,   510,  -658,   827,    27,   599,  -658,   612,
+       2,  -658,   512,   586,  -658,   118,    21,  -658,  -658,  -658,
+     473,  1157,  1177,  1197,  1217,  1237,  1265,   479,   827,   114,
+     567,   106,   106,  -658,  -658,  -658,  -658,  -658,  -658,   481,
+     672,   311,   620,  -658,   602,   605,   416,  -658,  -658,   501,
+     582,   607,   608,  -658,   504,  -658,  -658,  -658,   643,   508,
+    -658,  -658,   130,    21,  -658,  -658,  -658,  -658,  -658,  -658,
+    -658,  -658,  -658,   515,   456,  -658,  1285,  -658,   672,   614,
+     553,  -658,   553,  -658,   672,    27,   672,   517,  -658,  -658,
+     562,  -658,   134,   114,   606,   257,  1305,   672,   622,  -658,
+    -658,   359,  1325,  -658,  1345,  -658,  -658,   651,  -658,  -658,
+    -658,   625,   648,  -658,  1365,   672,   -88,   609,  -658,  -658,
+      27,  -658,   672,  -658,  -658,  1393,  -658,  -658,  -658,   621,
+    -658,  -658,  -658,  1413,  -658,  -658,  -658,   641,   728,    58,
+     664,   600,  -658,  -658,  -658,  -658,  -658,  -658,  -658,   642,
+     645,   225,   662,  -658,  -658,  -658,   668,   669,  -658,   238,
+    -658,   670,  -658,  -658,  -658,   728,   644,   671,    43,  -658,
+    -658,  -658,   310,   284,  -658,  -658,   689,  -658,    57,  -658,
+     690,  -658,   -29,   238,  -658,  -658,  -658,  -658,   675,   703,
+     696,   697,   594,   702,   596,   704,   705,   603,   728,   604,
+    -658,   672,    26,  -658,    12,   269,  -658,   238,   173,   703,
+     615,   728,   741,   657,    57,    57,  -658,    57,  -658,    57,
+      57,  -658,   710,  -658,  1599,   617,   618,    57,  -658,  -658,
+    -658,   657,  -658,   706,  -658,   740,  -658,   623,   624,    99,
+     630,   631,  -658,   772,  -658,  -658,  -658,  -658,   773,   136,
+     634,   635,    57,   636,   640,   646,   136,  -658,  -658,  -658,
+     781,  -658,  -658,  -658,   667,  -658,  -658,    43,  -658,   136,
+    -658,  -658,   508,  -658,  -658,   508,  -658,  -658,  -658,   508,
+    -658
 };
 
 /* YYPGOTO[NTERM-NUM].  */
 static const yytype_int16 yypgoto[] =
 {
-    -621,  -621,   -70,  -621,  -621,  -621,  -621,   470,  -621,  -621,
-    -621,  -621,  -621,  -621,   587,  -621,  -621,  -621,  -621,   519,
-    -621,  -621,  -621,  -221,  -621,  -621,  -621,  -621,  -444,   -13,
-    -621,   927,  -540,    29,    72,    55,  -621,  -621,    94,  -621,
-    -621,  -621,  -500,  -621,     1,  -508,  -621,  -617,  -425,  -212,
-    -621,   311,  -621,   389,  -621,  -621,  -621,  -621,  -621,  -621,
-     256,  -621,  -621,  -621,  -621,  -621,  -621,  -205,  -103,  -621,
-     -73,    34,   218,  -621,   181,  -621,  -621,  -621,  -621,  -621,
-    -621,  -621,  -621,  -621,  -621,  -621,  -621,  -621,  -621,  -621,
-    -621,  -463,   323,  -621,  -621,    65,  -620,  -621,  -621,  -621,
-    -621,  -621,  -621,  -621,  -621,  -621,  -621,  -527,  -621,  -621,
-    -621,  -621,   738,  -621,  -621,  -621,  -621,  -621,   526,   -19,
-    -621,   668,   -10,  -621,  -621,   211
+    -658,  -658,   -70,  -658,  -658,  -658,  -658,   542,  -658,  -658,
+    -658,  -658,  -658,  -658,   561,  -658,  -658,  -658,  -658,   575,
+    -658,  -658,  -658,  -223,  -658,  -658,  -658,  -658,  -448,   -13,
+    -658,   974,  -544,    82,   140,   122,  -658,  -658,   160,  -658,
+    -658,  -658,  -440,  -658,    68,  -496,  -658,  -630,  -403,  -214,
+    -658,   385,  -658,   488,  -658,  -658,  -658,  -658,  -658,  -658,
+     316,  -658,  -658,  -658,  -658,  -658,  -658,  -207,  -103,  -658,
+     -73,    97,   287,  -658,   256,  -658,  -658,  -658,  -658,  -658,
+    -658,  -658,  -658,  -658,  -658,  -658,  -658,  -658,  -658,  -658,
+    -658,  -479,   401,  -658,  -658,   131,  -657,  -658,  -658,  -658,
+    -658,  -658,  -658,  -658,  -658,  -658,  -658,  -535,  -658,  -658,
+    -658,  -658,   803,  -658,  -658,  -658,  -658,  -658,   592,   -19,
+    -658,   737,   -10,  -658,  -658,   272
 };
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
    number is the opposite.  If zero, do what YYDEFACT says.
    If YYTABLE_NINF, syntax error.  */
-#define YYTABLE_NINF -328
+#define YYTABLE_NINF -330
 static const yytype_int16 yytable[] =
 {
-     174,   145,   202,   333,    99,    59,   490,   490,   121,   294,
-     184,   204,   353,   341,   343,   103,   524,   193,   147,   148,
-     661,   661,   345,   533,   229,   230,   227,    17,   212,   415,
-     707,   624,   624,   669,  -175,    21,   348,   349,   528,   240,
-     585,   624,    20,   441,   442,   149,   150,   243,   625,   625,
-     322,   651,   151,   152,   153,  -175,   219,   220,   625,   222,
-     224,   661,    21,   448,   741,   234,   154,   155,   156,   285,
-     286,   287,   624,   157,   742,   613,   245,   246,   158,    25,
-     662,   632,   515,   516,   517,   518,   519,   159,   213,   625,
-     348,   349,   160,   161,   162,   163,   164,   165,   166,   267,
-     268,   663,   291,   323,   652,   167,    22,   168,   738,   332,
-     298,   672,   673,   688,   594,   421,    91,    90,   534,   751,
-     475,   583,   169,   231,    91,   663,   348,   349,   170,   422,
-     314,    98,   756,    22,   476,   350,   348,   349,   332,   438,
-     348,   349,   443,   330,   538,   295,   223,   491,   491,   711,
-     325,   115,   326,   171,   674,   661,   622,   520,   709,   734,
-     172,   173,   344,   639,   357,   416,   624,   360,   361,   641,
-     363,   364,   351,   241,   352,   366,   367,   368,   369,   370,
-     704,   244,   373,   625,   116,   304,   305,   378,   379,   350,
-     119,   382,   383,   715,   675,   650,   385,   386,   387,   388,
-     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
-     399,   400,   401,   402,   403,   404,   405,   406,   497,   117,
-     118,   307,   650,   410,   411,   350,   351,   332,   444,   340,
-     750,   147,   148,   661,   289,   350,   307,    92,   120,   350,
-      93,    94,    95,   758,   624,    92,   121,   425,    93,   100,
-     101,   123,   445,   446,   332,   650,   342,   124,   149,   150,
-     125,   625,   351,   126,   543,   151,   152,   153,   650,   140,
-     141,   436,   351,   437,   573,   127,   351,   544,   591,   154,
-     155,   156,   128,   677,   678,   523,   157,   593,   661,   129,
-     332,   158,   712,   661,   515,   516,   517,   518,   519,   624,
-     159,     1,     2,     3,   624,   160,   161,   162,   163,   164,
-     165,   166,     4,   412,   413,    59,   625,   130,   167,     5,
-     168,   625,   131,   132,   574,   133,   315,   135,   136,   572,
-     283,   284,   285,   286,   287,   169,   137,   143,   662,   632,
-      99,   170,   308,   672,   673,   309,   310,   311,   608,   609,
-     610,   479,   139,   484,   479,   487,   144,   308,   146,   175,
-     309,   310,   473,   176,   178,   181,   171,   182,   290,   520,
-     183,   185,   186,   172,   173,   192,   187,   503,   191,   316,
-     504,   505,   194,   506,   147,   148,   317,   296,   197,   195,
-     507,   508,   196,   318,   198,   200,   201,   510,    42,   281,
-     282,   283,   284,   285,   286,   287,   207,   472,   208,   209,
-     210,   149,   150,   217,   315,   218,   221,   319,   151,   152,
-     153,   639,   227,    52,    53,   233,   675,   235,   236,   237,
-     248,   239,   154,   155,   156,    54,   249,   250,   251,   157,
-     252,   292,   293,   299,   158,   253,   563,   300,   301,   558,
-     254,   255,   256,   159,   257,   306,   258,   259,   160,   161,
-     162,   163,   164,   165,   166,   260,   261,   262,   588,   263,
-     264,   167,   265,   168,   317,   266,   313,   303,   327,   312,
-     334,   318,   331,   335,   336,   337,    42,   578,   169,   338,
-     339,   346,   347,   584,   170,   586,   355,   356,   354,   358,
-     614,   371,   372,   555,   556,   319,   596,   374,   375,   376,
-     377,    52,    53,   380,   381,   384,   407,   408,   409,   171,
-     414,   297,   420,    54,   607,   418,   172,   173,   419,   429,
-     431,   615,   435,   440,   456,   471,   474,   457,   459,   147,
-     148,   502,   759,   494,   499,   760,   509,   489,   513,   762,
-     105,   106,   107,   108,   109,   110,   111,   112,   113,   522,
-     526,   525,   530,   656,   536,   692,   149,   150,   460,   461,
-     537,   540,   511,   477,   152,   153,   478,   542,   462,   465,
-     554,  -112,   466,   469,   496,   500,   559,   154,   155,   156,
-     501,   546,   553,   557,   157,   560,   565,   561,   566,   158,
-     568,   570,   571,   332,   579,   315,   575,   587,   159,   589,
-     706,   147,   148,   160,   161,   162,   163,   164,   165,   166,
-     580,   592,   597,   603,   483,   604,   167,   605,   168,   105,
-     106,   107,   108,   109,   110,   111,   112,   113,   149,   150,
-     612,   523,   617,   169,   653,   151,   152,   153,   667,   170,
-     654,   655,   657,   659,   693,   660,   665,   668,   600,   154,
-     155,   156,   683,   687,   694,   317,   157,   696,   697,   699,
-     701,   158,   318,   702,   171,   698,   700,    42,   716,   717,
-     159,   172,   173,   147,   148,   160,   161,   162,   163,   164,
-     165,   166,   703,   705,   714,    69,   319,   724,   167,  -128,
-     168,   729,    52,    53,   726,   737,   730,   732,   740,   753,
-     149,   150,   362,   733,    54,   169,   735,   151,   152,   153,
-     736,   170,   434,   744,   745,   747,   238,   449,   721,    70,
-     328,   154,   155,   156,   748,   749,   755,   690,   157,   708,
-     623,   666,   752,   158,   495,   582,   171,   728,   539,   564,
-     486,   624,   159,   172,   173,    71,   713,   160,   161,   162,
-     163,   164,   165,   166,   104,   359,   199,   576,   625,     0,
-     167,     0,   168,     0,     0,     0,     0,   626,   627,   628,
-     629,   630,     0,     0,     0,     0,     0,   169,     0,    72,
-     631,   632,     0,   170,     0,    73,    74,    75,    76,    77,
-     633,    78,    79,    80,     0,    81,    82,     0,    83,    84,
-      85,     0,     0,     0,     0,    86,    87,    88,   171,     0,
-       0,     0,     0,     0,     0,   172,   173,   634,    28,   635,
-       0,     0,     0,   636,     0,     0,     0,    52,    53,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,   269,   637,
-     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
-     280,   281,   282,   283,   284,   285,   286,   287,     0,   638,
-      29,    30,    31,   639,     0,     0,     0,   640,     0,   641,
-       0,     0,     0,    32,    33,    34,    35,     0,    36,    37,
-      38,     0,     0,     0,     0,     0,     0,    39,    40,    41,
-      42,    28,     0,     0,     0,     0,     0,     0,    43,    44,
+     176,   145,   204,   337,    99,    59,   498,   498,   532,   298,
+     186,   206,   357,   345,   347,   103,   669,   195,   147,   148,
+     352,   353,   349,   229,   121,   231,   232,   632,   677,   421,
+     715,   541,   447,   448,  -175,    21,   352,   353,   326,   242,
+     593,   632,   536,    20,   633,   149,   150,   245,   616,   617,
+     618,   214,   151,   152,   153,  -175,   221,   222,   633,   224,
+     226,   669,   659,    21,   454,   236,   154,   155,   156,   418,
+     419,    91,   632,   157,   427,   621,   247,   248,   158,   746,
+     670,   640,   523,   524,   525,   526,   527,   159,   428,   633,
+     759,   327,   160,   161,   162,   163,   164,   165,   166,   167,
+     168,   271,   272,   669,   295,   671,   602,   169,    22,   170,
+      91,   215,   302,   336,   632,   660,    17,   696,   311,   117,
+     118,   354,   352,   353,   171,   591,   233,   764,   542,   671,
+     172,   633,   318,   449,   352,   353,    22,   354,   352,   353,
+     336,   444,   749,   483,    25,   334,   546,   299,   630,   499,
+     499,    98,   750,   719,    90,   173,   717,   484,   355,   528,
+     356,   348,   174,   175,   225,   647,   361,   422,   115,   364,
+     365,   649,   367,   368,   355,   243,   450,   370,   371,   372,
+     373,   374,   116,   246,   377,   140,   141,   308,   309,   382,
+     383,   384,   385,   119,    92,   388,   389,    93,    94,    95,
+     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
+     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
+     411,   412,   505,   354,   311,   658,   120,   416,   417,   121,
+     123,   147,   148,    92,   293,   354,    93,   100,   101,   354,
+     124,   312,   669,   742,   313,   314,   315,   329,   712,   330,
+     758,   431,   658,   632,   125,   126,   451,   452,   149,   150,
+     355,   723,   551,   766,   127,   151,   152,   153,   128,   336,
+     633,   344,   355,   669,   581,   442,   355,   443,   599,   154,
+     155,   156,   129,   552,   632,   658,   157,   336,   669,   346,
+     130,   158,   670,   640,   531,   319,   601,   131,   658,   632,
+     159,   633,   289,   290,   291,   160,   161,   162,   163,   164,
+     165,   166,   167,   168,   669,   336,   633,   720,   132,    59,
+     169,   143,   170,   680,   681,   632,   133,   135,   144,   136,
+     582,   137,   139,   146,   177,   580,   178,   171,   685,   686,
+     180,   183,   633,   172,    99,   184,   185,   312,   320,   187,
+     313,   314,   481,   188,   194,   321,   189,   487,   193,   492,
+     487,   495,   322,   319,   680,   681,   196,    42,   173,   197,
+     294,   198,   199,   200,   202,   174,   175,   647,   523,   524,
+     525,   526,   527,   511,   203,   209,   512,   513,   323,   514,
+     147,   148,   210,   300,    52,    53,   515,   516,   211,   212,
+     219,     1,     2,     3,   220,   518,    54,   223,   683,   682,
+     229,   235,     4,   480,   237,   238,   608,   149,   150,     5,
+     319,   239,   241,   321,   151,   152,   153,   250,   251,   252,
+     322,   305,   307,   375,   253,    42,   254,   316,   154,   155,
+     156,   255,   256,   296,   257,   157,   258,   297,   303,   683,
+     158,   259,   571,   331,   260,   528,   323,   566,   261,   159,
+     262,   263,    52,    53,   160,   161,   162,   163,   164,   165,
+     166,   167,   168,   264,    54,   265,   596,   266,   267,   169,
+     321,   170,   287,   288,   289,   290,   291,   322,   268,   304,
+     269,   270,    42,   339,   310,   586,   171,   351,   359,   317,
+     335,   592,   172,   594,   340,   338,   360,   376,   622,   147,
+     148,   563,   564,   323,   604,   341,   342,   343,   378,    52,
+      53,   350,   358,   362,   379,   380,   381,   173,   386,   301,
+     387,    54,   615,   390,   174,   175,   149,   150,   413,   623,
+     414,   415,   420,   485,   152,   153,   486,   426,   767,   435,
+     437,   768,   441,   446,   462,   770,   424,   154,   155,   156,
+     479,   425,   497,   463,   157,   482,   465,   502,   507,   158,
+     466,   664,   467,   700,   468,   473,   474,   477,   159,   504,
+     510,   508,   517,   160,   161,   162,   163,   164,   165,   166,
+     167,   168,   147,   148,   509,   521,   530,   533,   169,   519,
+     170,   538,   534,   544,   548,   491,   105,   106,   107,   108,
+     109,   110,   111,   112,   113,   171,   545,   554,   714,   149,
+     150,   172,   550,   561,   562,   565,   151,   152,   153,   285,
+     286,   287,   288,   289,   290,   291,   567,  -112,   573,   568,
+     154,   155,   156,   569,   574,   576,   173,   157,   578,   579,
+     336,   587,   158,   174,   175,   588,   597,   611,   583,   605,
+     595,   159,   612,   600,   613,   620,   160,   161,   162,   163,
+     164,   165,   166,   167,   168,   147,   148,   625,   531,   662,
+     661,   169,   663,   170,   278,   279,   280,   281,   282,   283,
+     284,   285,   286,   287,   288,   289,   290,   291,   171,   665,
+     240,   675,   149,   150,   172,   667,   668,   673,   676,   151,
+     152,   153,   281,   282,   283,   284,   285,   286,   287,   288,
+     289,   290,   291,   154,   155,   156,   691,   695,   702,   173,
+     157,   701,   631,   704,   705,   158,   174,   175,   706,   707,
+     708,   709,   710,   632,   159,   724,   732,   711,   713,   160,
+     161,   162,   163,   164,   165,   166,   167,   168,   725,   722,
+     633,  -128,   734,   737,   169,   738,   170,   740,   741,   634,
+     635,   636,   637,   638,   743,   744,   745,   748,   752,   753,
+     755,   171,   639,   640,   756,   761,   366,   172,   332,   729,
+     757,   273,   641,   274,   275,   276,   277,   278,   279,   280,
+     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
+     291,   763,   173,   698,   716,   674,   547,   760,   736,   174,
+     175,   642,    28,   643,   503,   440,   572,   644,   590,   104,
+     721,    52,    53,   363,   494,   201,   584,     0,     0,     0,
+       0,     0,   273,   645,   274,   275,   276,   277,   278,   279,
+     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
+     290,   291,     0,   646,    29,    30,    31,   647,     0,     0,
+       0,   648,     0,   649,     0,     0,     0,    32,    33,    34,
+      35,     0,    36,    37,    38,     0,    28,     0,     0,     0,
+       0,    39,    40,    41,    42,   105,   106,   107,   108,   109,
+     110,   111,   112,   113,    43,    44,    45,    46,    47,    48,
+       0,     0,     0,     0,    49,    50,    51,     0,   436,     0,
+     369,    52,    53,     0,     0,     0,     0,     0,    29,    30,
+      31,     0,     0,    54,     0,     0,     0,     0,     0,     0,
+       0,    32,    33,    34,    35,    55,    36,    37,    38,     0,
+       0,  -329,     0,     0,     0,    39,    40,    41,    42,     0,
+       0,    56,     0,     0,     0,     0,     0,     0,    43,    44,
       45,    46,    47,    48,     0,     0,     0,     0,    49,    50,
       51,     0,     0,     0,     0,    52,    53,     0,     0,     0,
-       0,     0,     0,   430,     0,     0,     0,    54,     0,     0,
-       0,     0,     0,    29,    30,    31,     0,     0,     0,    55,
-       0,     0,     0,     0,     0,  -327,    32,    33,    34,    35,
-       0,    36,    37,    38,     0,    56,     0,     0,     0,     0,
-      39,    40,    41,    42,     0,   365,     0,     0,     0,     0,
-       0,    43,    44,    45,    46,    47,    48,     0,     0,     0,
-       0,    49,    50,    51,     0,     0,     0,     0,    52,    53,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-      54,   277,   278,   279,   280,   281,   282,   283,   284,   285,
-     286,   287,    55,   274,   275,   276,   277,   278,   279,   280,
-     281,   282,   283,   284,   285,   286,   287,   269,    56,   270,
-     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
-     281,   282,   283,   284,   285,   286,   287,   269,     0,   270,
-     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
-     281,   282,   283,   284,   285,   286,   287,   269,     0,   270,
-     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
-     281,   282,   283,   284,   285,   286,   287,   269,     0,   270,
-     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
-     281,   282,   283,   284,   285,   286,   287,   269,     0,   270,
-     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
-     281,   282,   283,   284,   285,   286,   287,   269,     0,   270,
-     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
-     281,   282,   283,   284,   285,   286,   287,     0,     0,     0,
-       0,     0,   450,   269,   451,   270,   271,   272,   273,   274,
-     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
-     285,   286,   287,   269,   452,   270,   271,   272,   273,   274,
-     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
-     285,   286,   287,   269,   455,   270,   271,   272,   273,   274,
-     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
-     285,   286,   287,   269,   458,   270,   271,   272,   273,   274,
-     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
-     285,   286,   287,   269,   467,   270,   271,   272,   273,   274,
-     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
-     285,   286,   287,   269,   547,   270,   271,   272,   273,   274,
-     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
-     285,   286,   287,     0,     0,     0,     0,     0,     0,   269,
-     548,   270,   271,   272,   273,   274,   275,   276,   277,   278,
-     279,   280,   281,   282,   283,   284,   285,   286,   287,   269,
-     549,   270,   271,   272,   273,   274,   275,   276,   277,   278,
-     279,   280,   281,   282,   283,   284,   285,   286,   287,   269,
-     550,   270,   271,   272,   273,   274,   275,   276,   277,   278,
-     279,   280,   281,   282,   283,   284,   285,   286,   287,   269,
-     551,   270,   271,   272,   273,   274,   275,   276,   277,   278,
-     279,   280,   281,   282,   283,   284,   285,   286,   287,   269,
-     552,   270,   271,   272,   273,   274,   275,   276,   277,   278,
-     279,   280,   281,   282,   283,   284,   285,   286,   287,   269,
-     577,   270,   271,   272,   273,   274,   275,   276,   277,   278,
-     279,   280,   281,   282,   283,   284,   285,   286,   287,     0,
-       0,     0,     0,     0,     0,   269,   595,   270,   271,   272,
-     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
-     283,   284,   285,   286,   287,   269,   601,   270,   271,   272,
-     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
-     283,   284,   285,   286,   287,   269,   602,   270,   271,   272,
-     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
-     283,   284,   285,   286,   287,   269,   606,   270,   271,   272,
-     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
-     283,   284,   285,   286,   287,   269,   616,   270,   271,   272,
-     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
-     283,   284,   285,   286,   287,   269,   619,   270,   271,   272,
-     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
-     283,   284,   285,   286,   287,     0,     0,     0,     0,   269,
-     288,   270,   271,   272,   273,   274,   275,   276,   277,   278,
-     279,   280,   281,   282,   283,   284,   285,   286,   287,   269,
-     447,   270,   271,   272,   273,   274,   275,   276,   277,   278,
-     279,   280,   281,   282,   283,   284,   285,   286,   287,     0,
-     453,   676,   679,     0,     0,    69,     0,   685,     0,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-     454,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,     0,     0,   710,   676,     0,     0,     0,     0,    70,
-     463,     0,     0,   719,   720,     0,   685,     0,   722,   723,
-       0,     0,     0,     0,     0,     0,   727,     0,     0,     0,
-     464,     0,     0,     0,     0,    71,     0,     0,   710,     0,
-       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
-       0,   746,     0,     0,   468,   275,   276,   277,   278,   279,
-     280,   281,   282,   283,   284,   285,   286,   287,     0,    72,
-       0,     0,     0,     0,   725,    73,    74,    75,    76,    77,
-     -43,    78,    79,    80,     0,    81,    82,     0,    83,    84,
-      85,     0,     0,     0,     0,    86,    87,    88,   269,     0,
-     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
-     280,   281,   282,   283,   284,   285,   286,   287,     0,     0,
-     523,   269,   470,   270,   271,   272,   273,   274,   275,   276,
-     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
-     287,   269,   529,   270,   271,   272,   273,   274,   275,   276,
-     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
-     287,   269,     0,   270,   271,   272,   273,   274,   275,   276,
-     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
-     287,   271,   272,   273,   274,   275,   276,   277,   278,   279,
-     280,   281,   282,   283,   284,   285,   286,   287,   272,   273,
+       0,     0,     0,     0,     0,     0,     0,    54,     0,     0,
+       0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
+     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
+     289,   290,   291,     0,   273,    56,   274,   275,   276,   277,
+     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
+     288,   289,   290,   291,   273,     0,   274,   275,   276,   277,
+     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
+     288,   289,   290,   291,   273,     0,   274,   275,   276,   277,
+     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
+     288,   289,   290,   291,   273,     0,   274,   275,   276,   277,
+     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
+     288,   289,   290,   291,   273,     0,   274,   275,   276,   277,
+     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
+     288,   289,   290,   291,   273,     0,   274,   275,   276,   277,
+     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
+     288,   289,   290,   291,     0,     0,     0,     0,     0,     0,
+       0,   456,   273,   457,   274,   275,   276,   277,   278,   279,
+     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
+     290,   291,   273,   458,   274,   275,   276,   277,   278,   279,
+     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
+     290,   291,   273,   461,   274,   275,   276,   277,   278,   279,
+     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
+     290,   291,   273,   464,   274,   275,   276,   277,   278,   279,
+     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
+     290,   291,   273,   471,   274,   275,   276,   277,   278,   279,
+     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
+     290,   291,   273,   472,   274,   275,   276,   277,   278,   279,
+     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
+     290,   291,     0,     0,     0,     0,     0,     0,     0,     0,
+     273,   475,   274,   275,   276,   277,   278,   279,   280,   281,
+     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
+     273,   555,   274,   275,   276,   277,   278,   279,   280,   281,
+     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
+     273,   556,   274,   275,   276,   277,   278,   279,   280,   281,
+     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
+     273,   557,   274,   275,   276,   277,   278,   279,   280,   281,
+     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
+     273,   558,   274,   275,   276,   277,   278,   279,   280,   281,
+     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
+     273,   559,   274,   275,   276,   277,   278,   279,   280,   281,
+     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
+       0,     0,     0,     0,     0,     0,     0,     0,   273,   560,
+     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
+     284,   285,   286,   287,   288,   289,   290,   291,   273,   585,
+     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
+     284,   285,   286,   287,   288,   289,   290,   291,   273,   603,
      274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
-     284,   285,   286,   287,   273,   274,   275,   276,   277,   278,
-     279,   280,   281,   282,   283,   284,   285,   286,   287
+     284,   285,   286,   287,   288,   289,   290,   291,   273,   609,
+     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
+     284,   285,   286,   287,   288,   289,   290,   291,   273,   610,
+     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
+     284,   285,   286,   287,   288,   289,   290,   291,   273,   614,
+     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
+     284,   285,   286,   287,   288,   289,   290,   291,     0,     0,
+       0,     0,     0,     0,     0,     0,   273,   624,   274,   275,
+     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
+     286,   287,   288,   289,   290,   291,     0,   627,   276,   277,
+     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
+     288,   289,   290,   291,   273,   292,   274,   275,   276,   277,
+     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
+     288,   289,   290,   291,   273,   453,   274,   275,   276,   277,
+     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
+     288,   289,   290,   291,   273,   459,   274,   275,   276,   277,
+     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
+     288,   289,   290,   291,     0,   460,   684,   687,     0,     0,
+      69,     0,   693,   273,     0,   274,   275,   276,   277,   278,
+     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
+     289,   290,   291,   469,    69,   531,     0,     0,   718,   684,
+       0,     0,     0,     0,    70,     0,     0,     0,   727,   728,
+       0,   693,     0,   730,   731,     0,     0,     0,     0,     0,
+       0,   735,     0,     0,     0,     0,   455,     0,    70,     0,
+      71,   470,     0,   718,     0,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,   754,     0,     0,     0,
+       0,   476,     0,     0,    71,     0,     0,     0,     0,     0,
+       0,     0,     0,     0,     0,     0,    72,     0,     0,     0,
+       0,   733,    73,    74,    75,    76,    77,   -43,    78,    79,
+      80,     0,    81,    82,     0,    83,    84,    85,     0,     0,
+      72,     0,    86,    87,    88,     0,    73,    74,    75,    76,
+      77,     0,    78,    79,    80,     0,    81,    82,     0,    83,
+      84,    85,     0,     0,     0,     0,    86,    87,    88,   273,
+     478,   274,   275,   276,   277,   278,   279,   280,   281,   282,
+     283,   284,   285,   286,   287,   288,   289,   290,   291,   273,
+     537,   274,   275,   276,   277,   278,   279,   280,   281,   282,
+     283,   284,   285,   286,   287,   288,   289,   290,   291,   275,
+     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
+     286,   287,   288,   289,   290,   291,   277,   278,   279,   280,
+     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
+     291
 };
 
 static const yytype_int16 yycheck[] =
 {
-      73,    71,   105,   215,    23,    18,     4,     4,     4,     4,
-      83,   114,   233,   225,   226,    25,   479,    90,     3,     4,
-       4,     4,   227,     4,     4,     5,     4,     0,     4,     4,
-       4,    15,    15,   650,    36,    56,     4,     5,   482,     6,
-     567,    15,     4,     4,     5,    30,    31,     6,    32,    32,
-       4,     4,    37,    38,    39,    57,   126,   127,    32,   129,
-     130,     4,    56,    57,     6,   135,    51,    52,    53,    32,
-      33,    34,    15,    58,    16,   602,   149,   150,    63,    56,
-      54,    55,    67,    68,    69,    70,    71,    72,    64,    32,
-       4,     5,    77,    78,    79,    80,    81,    82,    83,   172,
-     173,   641,   175,    57,    57,    90,   127,    92,   728,   140,
-     183,    54,    55,   144,   577,   127,     4,     6,    99,   739,
-     127,   565,   107,   103,     4,   665,     4,     5,   113,   141,
-     203,    56,   749,   127,   141,   103,     4,     5,   140,   344,
-       4,     5,   103,   213,   142,   140,   142,   145,   145,   689,
-     140,    56,   142,   138,    97,     4,   619,   142,   142,   142,
-     145,   146,   140,   137,   237,   140,    15,   240,   241,   143,
-     243,   244,   140,   140,   142,   248,   249,   250,   251,   252,
-     680,   140,   255,    32,    56,   195,   196,   260,   261,   103,
-      37,   264,   265,   693,   137,   620,   269,   270,   271,   272,
+      73,    71,   105,   217,    23,    18,     4,     4,   487,     4,
+      83,   114,   235,   227,   228,    25,     4,    90,     3,     4,
+       4,     5,   229,     4,     4,     4,     5,    15,   658,     4,
+       4,     4,     4,     5,    36,    56,     4,     5,     4,     6,
+     575,    15,   490,     4,    32,    30,    31,     6,   136,   137,
+     138,     4,    37,    38,    39,    57,   126,   127,    32,   129,
+     130,     4,     4,    56,    57,   135,    51,    52,    53,     3,
+       4,     4,    15,    58,   129,   610,   149,   150,    63,   736,
+      54,    55,    67,    68,    69,    70,    71,    72,   143,    32,
+     747,    57,    77,    78,    79,    80,    81,    82,    83,    84,
+      85,   174,   175,     4,   177,   649,   585,    92,   129,    94,
+       4,    64,   185,   142,    15,    57,     0,   146,     4,    49,
+      50,   105,     4,     5,   109,   573,   105,   757,   101,   673,
+     115,    32,   205,   105,     4,     5,   129,   105,     4,     5,
+     142,   348,     6,   129,    56,   215,   144,   142,   627,   147,
+     147,    56,    16,   697,     6,   140,   144,   143,   142,   144,
+     144,   142,   147,   148,   144,   139,   239,   142,    56,   242,
+     243,   145,   245,   246,   142,   142,   144,   250,   251,   252,
+     253,   254,    56,   142,   257,   142,   143,   197,   198,   262,
+     263,   264,   265,    37,   127,   268,   269,   130,   131,   132,
      273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
-     283,   284,   285,   286,   287,   288,   289,   290,   439,    49,
-      50,     4,   647,   296,   297,   103,   140,   140,   142,   142,
-     738,     3,     4,     4,     6,   103,     4,   125,    37,   103,
-     128,   129,   130,   751,    15,   125,     4,   317,   128,   129,
-     130,    56,   355,   356,   140,   680,   142,    37,    30,    31,
-      37,    32,   140,    37,   142,    37,    38,    39,   693,   140,
-     141,   341,   140,   343,   142,    37,   140,   498,   142,    51,
-      52,    53,    37,    54,    55,    37,    58,    39,     4,    37,
-     140,    63,   142,     4,    67,    68,    69,    70,    71,    15,
-      72,   121,   122,   123,    15,    77,    78,    79,    80,    81,
-      82,    83,   132,     3,     4,   328,    32,    37,    90,   139,
-      92,    32,    37,    37,   545,    37,     4,    37,    37,   541,
-      30,    31,    32,    33,    34,   107,    37,   131,    54,    55,
-     359,   113,   125,    54,    55,   128,   129,   130,   134,   135,
-     136,   424,    37,   426,   427,   428,     4,   125,     4,     4,
-     128,   129,   130,     4,     4,     4,   138,     4,   140,   142,
-       4,     4,     3,   145,   146,   109,     4,   450,     4,    57,
-     453,   454,     4,   456,     3,     4,    64,     6,    57,    16,
-     463,   464,    16,    71,   141,    57,   141,   470,    76,    28,
-      29,    30,    31,    32,    33,    34,     4,   417,     4,     4,
-       4,    30,    31,     4,     4,     4,     4,    95,    37,    38,
-      39,   137,     4,   101,   102,    37,   137,     4,     4,    37,
-      37,    56,    51,    52,    53,   113,    37,    37,    37,    58,
-      37,   140,   140,   140,    63,    37,    36,   140,     4,   522,
-      37,    37,    37,    72,    37,   141,    37,    37,    77,    78,
-      79,    80,    81,    82,    83,    37,    37,    37,   571,    37,
-      37,    90,    37,    92,    64,    37,   141,    56,   142,    57,
-     140,    71,    57,   142,   142,   142,    76,   560,   107,   142,
-     142,   142,    37,   566,   113,   568,     6,     6,   142,   142,
-     603,     4,     4,   513,   514,    95,   579,     4,     4,     4,
-       4,   101,   102,     4,     4,     4,     4,     4,     4,   138,
-       4,   140,     4,   113,   597,   141,   145,   146,   141,     4,
-      37,   604,     4,    37,   140,     4,    56,   142,   142,     3,
-       4,     4,   754,    16,    37,   757,     4,   140,    16,   761,
-       6,     7,     8,     9,    10,    11,    12,    13,    14,    37,
-      99,    16,    89,   633,     4,   668,    30,    31,   142,   142,
-       4,    90,   141,    37,    38,    39,    40,    36,   142,   142,
-      57,    37,   142,   142,   142,   142,    16,    51,    52,    53,
-     142,   142,   142,   142,    58,    37,    56,    38,    37,    63,
-      37,   142,     6,   140,    37,     4,   141,   141,    72,    92,
-     683,     3,     4,    77,    78,    79,    80,    81,    82,    83,
-     100,    57,    37,     6,    16,    37,    90,    16,    92,     6,
-       7,     8,     9,    10,    11,    12,    13,    14,    30,    31,
-      56,    37,    56,   107,    16,    37,    38,    39,    57,   113,
-      37,    37,    37,    37,    56,    37,    37,    37,    57,    51,
-      52,    53,    37,    37,    25,    64,    58,    37,    37,    37,
-      37,    63,    71,    37,   138,   142,   142,    76,     4,    99,
-      72,   145,   146,     3,     4,    77,    78,    79,    80,    81,
-      82,    83,   142,   142,   142,     4,    95,    36,    90,   142,
-      92,    57,   101,   102,   142,     4,    25,   142,     4,     4,
-      30,    31,   242,   142,   113,   107,   142,    37,    38,    39,
-     142,   113,   333,   142,   142,   142,   139,    36,   699,    38,
-     211,    51,    52,    53,   142,   142,   142,   665,    58,   684,
-       4,   647,   741,    63,   433,   564,   138,   713,   492,   531,
-     427,    15,    72,   145,   146,    64,   691,    77,    78,    79,
-      80,    81,    82,    83,    26,   239,    98,   556,    32,    -1,
-      90,    -1,    92,    -1,    -1,    -1,    -1,    41,    42,    43,
-      44,    45,    -1,    -1,    -1,    -1,    -1,   107,    -1,    98,
-      54,    55,    -1,   113,    -1,   104,   105,   106,   107,   108,
-      64,   110,   111,   112,    -1,   114,   115,    -1,   117,   118,
-     119,    -1,    -1,    -1,    -1,   124,   125,   126,   138,    -1,
-      -1,    -1,    -1,    -1,    -1,   145,   146,    91,     4,    93,
-      -1,    -1,    -1,    97,    -1,    -1,    -1,   101,   102,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    15,   113,
-      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
-      27,    28,    29,    30,    31,    32,    33,    34,    -1,   133,
-      46,    47,    48,   137,    -1,    -1,    -1,   141,    -1,   143,
-      -1,    -1,    -1,    59,    60,    61,    62,    -1,    64,    65,
-      66,    -1,    -1,    -1,    -1,    -1,    -1,    73,    74,    75,
-      76,     4,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,
-      86,    87,    88,    89,    -1,    -1,    -1,    -1,    94,    95,
-      96,    -1,    -1,    -1,    -1,   101,   102,    -1,    -1,    -1,
-      -1,    -1,    -1,    36,    -1,    -1,    -1,   113,    -1,    -1,
-      -1,    -1,    -1,    46,    47,    48,    -1,    -1,    -1,   125,
-      -1,    -1,    -1,    -1,    -1,   131,    59,    60,    61,    62,
-      -1,    64,    65,    66,    -1,   141,    -1,    -1,    -1,    -1,
-      73,    74,    75,    76,    -1,   142,    -1,    -1,    -1,    -1,
-      -1,    84,    85,    86,    87,    88,    89,    -1,    -1,    -1,
-      -1,    94,    95,    96,    -1,    -1,    -1,    -1,   101,   102,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-     113,    24,    25,    26,    27,    28,    29,    30,    31,    32,
-      33,    34,   125,    21,    22,    23,    24,    25,    26,    27,
-      28,    29,    30,    31,    32,    33,    34,    15,   141,    17,
-      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
-      28,    29,    30,    31,    32,    33,    34,    15,    -1,    17,
-      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
-      28,    29,    30,    31,    32,    33,    34,    15,    -1,    17,
-      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
-      28,    29,    30,    31,    32,    33,    34,    15,    -1,    17,
-      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
-      28,    29,    30,    31,    32,    33,    34,    15,    -1,    17,
-      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
-      28,    29,    30,    31,    32,    33,    34,    15,    -1,    17,
-      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
-      28,    29,    30,    31,    32,    33,    34,    -1,    -1,    -1,
-      -1,    -1,   140,    15,   142,    17,    18,    19,    20,    21,
-      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
-      32,    33,    34,    15,   142,    17,    18,    19,    20,    21,
-      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
-      32,    33,    34,    15,   142,    17,    18,    19,    20,    21,
-      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
-      32,    33,    34,    15,   142,    17,    18,    19,    20,    21,
-      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
-      32,    33,    34,    15,   142,    17,    18,    19,    20,    21,
-      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
-      32,    33,    34,    15,   142,    17,    18,    19,    20,    21,
+     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
+     293,   294,   445,   105,     4,   628,    37,   300,   301,     4,
+      56,     3,     4,   127,     6,   105,   130,   131,   132,   105,
+      37,   127,     4,   144,   130,   131,   132,   142,   688,   144,
+     746,   321,   655,    15,    37,    37,   359,   360,    30,    31,
+     142,   701,   144,   759,    37,    37,    38,    39,    37,   142,
+      32,   144,   142,     4,   144,   345,   142,   347,   144,    51,
+      52,    53,    37,   506,    15,   688,    58,   142,     4,   144,
+      37,    63,    54,    55,    37,     4,    39,    37,   701,    15,
+      72,    32,    32,    33,    34,    77,    78,    79,    80,    81,
+      82,    83,    84,    85,     4,   142,    32,   144,    37,   332,
+      92,   133,    94,    54,    55,    15,    37,    37,     4,    37,
+     553,    37,    37,     4,     4,   549,     4,   109,    54,    55,
+       4,     4,    32,   115,   363,     4,     4,   127,    57,     4,
+     130,   131,   132,     3,   111,    64,     4,   430,     4,   432,
+     433,   434,    71,     4,    54,    55,     4,    76,   140,    16,
+     142,    16,    57,   143,    57,   147,   148,   139,    67,    68,
+      69,    70,    71,   456,   143,     4,   459,   460,    97,   462,
+       3,     4,     4,     6,   103,   104,   469,   470,     4,     4,
+       4,   123,   124,   125,     4,   478,   115,     4,   139,    99,
+       4,    37,   134,   423,     4,     4,    57,    30,    31,   141,
+       4,    37,    56,    64,    37,    38,    39,    37,    37,    37,
+      71,     4,    56,     4,    37,    76,    37,    57,    51,    52,
+      53,    37,    37,   142,    37,    58,    37,   142,   142,   139,
+      63,    37,    36,   144,    37,   144,    97,   530,    37,    72,
+      37,    37,   103,   104,    77,    78,    79,    80,    81,    82,
+      83,    84,    85,    37,   115,    37,   579,    37,    37,    92,
+      64,    94,    30,    31,    32,    33,    34,    71,    37,   142,
+      37,    37,    76,   144,   143,   568,   109,    37,     6,   143,
+      57,   574,   115,   576,   144,   142,     6,     4,   611,     3,
+       4,   521,   522,    97,   587,   144,   144,   144,     4,   103,
+     104,   144,   144,   144,     4,     4,     4,   140,     4,   142,
+       4,   115,   605,     4,   147,   148,    30,    31,     4,   612,
+       4,     4,     4,    37,    38,    39,    40,     4,   762,     4,
+      37,   765,     4,    37,   142,   769,   143,    51,    52,    53,
+       4,   143,   142,   144,    58,    56,   144,    16,    37,    63,
+     144,   641,   144,   676,   144,   144,   144,   144,    72,   144,
+       4,   144,     4,    77,    78,    79,    80,    81,    82,    83,
+      84,    85,     3,     4,   144,    16,    37,    16,    92,   143,
+      94,    91,   101,     4,    92,    16,     6,     7,     8,     9,
+      10,    11,    12,    13,    14,   109,     4,   144,   691,    30,
+      31,   115,    36,   144,    57,   144,    37,    38,    39,    28,
+      29,    30,    31,    32,    33,    34,    16,    37,    56,    37,
+      51,    52,    53,    38,    37,    37,   140,    58,   144,     6,
+     142,    37,    63,   147,   148,   102,    94,     6,   143,    37,
+     143,    72,    37,    57,    16,    56,    77,    78,    79,    80,
+      81,    82,    83,    84,    85,     3,     4,    56,    37,    37,
+      16,    92,    37,    94,    21,    22,    23,    24,    25,    26,
+      27,    28,    29,    30,    31,    32,    33,    34,   109,    37,
+     139,    57,    30,    31,   115,    37,    37,    37,    37,    37,
+      38,    39,    24,    25,    26,    27,    28,    29,    30,    31,
+      32,    33,    34,    51,    52,    53,    37,    37,    25,   140,
+      58,    56,     4,    37,    37,    63,   147,   148,   144,    37,
+     144,    37,    37,    15,    72,     4,    36,   144,   144,    77,
+      78,    79,    80,    81,    82,    83,    84,    85,   101,   144,
+      32,   144,   144,    57,    92,    25,    94,   144,   144,    41,
+      42,    43,    44,    45,   144,   144,     4,     4,   144,   144,
+     144,   109,    54,    55,   144,     4,   244,   115,   213,   707,
+     144,    15,    64,    17,    18,    19,    20,    21,    22,    23,
+      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
+      34,   144,   140,   673,   692,   655,   500,   749,   721,   147,
+     148,    93,     4,    95,   439,   337,   539,    99,   572,    26,
+     699,   103,   104,   241,   433,    98,   564,    -1,    -1,    -1,
+      -1,    -1,    15,   115,    17,    18,    19,    20,    21,    22,
+      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
+      33,    34,    -1,   135,    46,    47,    48,   139,    -1,    -1,
+      -1,   143,    -1,   145,    -1,    -1,    -1,    59,    60,    61,
+      62,    -1,    64,    65,    66,    -1,     4,    -1,    -1,    -1,
+      -1,    73,    74,    75,    76,     6,     7,     8,     9,    10,
+      11,    12,    13,    14,    86,    87,    88,    89,    90,    91,
+      -1,    -1,    -1,    -1,    96,    97,    98,    -1,    36,    -1,
+     144,   103,   104,    -1,    -1,    -1,    -1,    -1,    46,    47,
+      48,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    59,    60,    61,    62,   127,    64,    65,    66,    -1,
+      -1,   133,    -1,    -1,    -1,    73,    74,    75,    76,    -1,
+      -1,   143,    -1,    -1,    -1,    -1,    -1,    -1,    86,    87,
+      88,    89,    90,    91,    -1,    -1,    -1,    -1,    96,    97,
+      98,    -1,    -1,    -1,    -1,   103,   104,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,   115,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
       22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
-      32,    33,    34,    -1,    -1,    -1,    -1,    -1,    -1,    15,
-     142,    17,    18,    19,    20,    21,    22,    23,    24,    25,
-      26,    27,    28,    29,    30,    31,    32,    33,    34,    15,
-     142,    17,    18,    19,    20,    21,    22,    23,    24,    25,
-      26,    27,    28,    29,    30,    31,    32,    33,    34,    15,
-     142,    17,    18,    19,    20,    21,    22,    23,    24,    25,
-      26,    27,    28,    29,    30,    31,    32,    33,    34,    15,
-     142,    17,    18,    19,    20,    21,    22,    23,    24,    25,
-      26,    27,    28,    29,    30,    31,    32,    33,    34,    15,
-     142,    17,    18,    19,    20,    21,    22,    23,    24,    25,
-      26,    27,    28,    29,    30,    31,    32,    33,    34,    15,
-     142,    17,    18,    19,    20,    21,    22,    23,    24,    25,
-      26,    27,    28,    29,    30,    31,    32,    33,    34,    -1,
-      -1,    -1,    -1,    -1,    -1,    15,   142,    17,    18,    19,
-      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
-      30,    31,    32,    33,    34,    15,   142,    17,    18,    19,
-      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
-      30,    31,    32,    33,    34,    15,   142,    17,    18,    19,
-      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
-      30,    31,    32,    33,    34,    15,   142,    17,    18,    19,
-      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
-      30,    31,    32,    33,    34,    15,   142,    17,    18,    19,
-      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
-      30,    31,    32,    33,    34,    15,   142,    17,    18,    19,
-      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
-      30,    31,    32,    33,    34,    -1,    -1,    -1,    -1,    15,
-     140,    17,    18,    19,    20,    21,    22,    23,    24,    25,
-      26,    27,    28,    29,    30,    31,    32,    33,    34,    15,
-     140,    17,    18,    19,    20,    21,    22,    23,    24,    25,
-      26,    27,    28,    29,    30,    31,    32,    33,    34,    -1,
-     140,   654,   655,    -1,    -1,     4,    -1,   660,    -1,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-     140,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,    -1,    -1,   686,   687,    -1,    -1,    -1,    -1,    38,
-     140,    -1,    -1,   696,   697,    -1,   699,    -1,   701,   702,
-      -1,    -1,    -1,    -1,    -1,    -1,   709,    -1,    -1,    -1,
-     140,    -1,    -1,    -1,    -1,    64,    -1,    -1,   721,    -1,
-      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
-      -1,   734,    -1,    -1,   140,    22,    23,    24,    25,    26,
-      27,    28,    29,    30,    31,    32,    33,    34,    -1,    98,
-      -1,    -1,    -1,    -1,   140,   104,   105,   106,   107,   108,
-     109,   110,   111,   112,    -1,   114,   115,    -1,   117,   118,
-     119,    -1,    -1,    -1,    -1,   124,   125,   126,    15,    -1,
+      32,    33,    34,    -1,    15,   143,    17,    18,    19,    20,
+      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
+      31,    32,    33,    34,    15,    -1,    17,    18,    19,    20,
+      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
+      31,    32,    33,    34,    15,    -1,    17,    18,    19,    20,
+      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
+      31,    32,    33,    34,    15,    -1,    17,    18,    19,    20,
+      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
+      31,    32,    33,    34,    15,    -1,    17,    18,    19,    20,
+      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
+      31,    32,    33,    34,    15,    -1,    17,    18,    19,    20,
+      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
+      31,    32,    33,    34,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,   142,    15,   144,    17,    18,    19,    20,    21,    22,
+      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
+      33,    34,    15,   144,    17,    18,    19,    20,    21,    22,
+      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
+      33,    34,    15,   144,    17,    18,    19,    20,    21,    22,
+      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
+      33,    34,    15,   144,    17,    18,    19,    20,    21,    22,
+      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
+      33,    34,    15,   144,    17,    18,    19,    20,    21,    22,
+      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
+      33,    34,    15,   144,    17,    18,    19,    20,    21,    22,
+      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
+      33,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
+      15,   144,    17,    18,    19,    20,    21,    22,    23,    24,
+      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
+      15,   144,    17,    18,    19,    20,    21,    22,    23,    24,
+      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
+      15,   144,    17,    18,    19,    20,    21,    22,    23,    24,
+      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
+      15,   144,    17,    18,    19,    20,    21,    22,    23,    24,
+      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
+      15,   144,    17,    18,    19,    20,    21,    22,    23,    24,
+      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
+      15,   144,    17,    18,    19,    20,    21,    22,    23,    24,
+      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
+      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    15,   144,
+      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
+      27,    28,    29,    30,    31,    32,    33,    34,    15,   144,
+      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
+      27,    28,    29,    30,    31,    32,    33,    34,    15,   144,
+      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
+      27,    28,    29,    30,    31,    32,    33,    34,    15,   144,
+      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
+      27,    28,    29,    30,    31,    32,    33,    34,    15,   144,
+      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
+      27,    28,    29,    30,    31,    32,    33,    34,    15,   144,
       17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
       27,    28,    29,    30,    31,    32,    33,    34,    -1,    -1,
-      37,    15,    16,    17,    18,    19,    20,    21,    22,    23,
-      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
-      34,    15,    16,    17,    18,    19,    20,    21,    22,    23,
-      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
-      34,    15,    -1,    17,    18,    19,    20,    21,    22,    23,
-      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
-      34,    18,    19,    20,    21,    22,    23,    24,    25,    26,
-      27,    28,    29,    30,    31,    32,    33,    34,    19,    20,
+      -1,    -1,    -1,    -1,    -1,    -1,    15,   144,    17,    18,
+      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
+      29,    30,    31,    32,    33,    34,    -1,   144,    19,    20,
+      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
+      31,    32,    33,    34,    15,   142,    17,    18,    19,    20,
       21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
-      31,    32,    33,    34,    20,    21,    22,    23,    24,    25,
-      26,    27,    28,    29,    30,    31,    32,    33,    34
+      31,    32,    33,    34,    15,   142,    17,    18,    19,    20,
+      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
+      31,    32,    33,    34,    15,   142,    17,    18,    19,    20,
+      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
+      31,    32,    33,    34,    -1,   142,   662,   663,    -1,    -1,
+       4,    -1,   668,    15,    -1,    17,    18,    19,    20,    21,
+      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
+      32,    33,    34,   142,     4,    37,    -1,    -1,   694,   695,
+      -1,    -1,    -1,    -1,    38,    -1,    -1,    -1,   704,   705,
+      -1,   707,    -1,   709,   710,    -1,    -1,    -1,    -1,    -1,
+      -1,   717,    -1,    -1,    -1,    -1,    36,    -1,    38,    -1,
+      64,   142,    -1,   729,    -1,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,   742,    -1,    -1,    -1,
+      -1,   142,    -1,    -1,    64,    -1,    -1,    -1,    -1,    -1,
+      -1,    -1,    -1,    -1,    -1,    -1,   100,    -1,    -1,    -1,
+      -1,   142,   106,   107,   108,   109,   110,   111,   112,   113,
+     114,    -1,   116,   117,    -1,   119,   120,   121,    -1,    -1,
+     100,    -1,   126,   127,   128,    -1,   106,   107,   108,   109,
+     110,    -1,   112,   113,   114,    -1,   116,   117,    -1,   119,
+     120,   121,    -1,    -1,    -1,    -1,   126,   127,   128,    15,
+      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
+      26,    27,    28,    29,    30,    31,    32,    33,    34,    15,
+      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
+      26,    27,    28,    29,    30,    31,    32,    33,    34,    18,
+      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
+      29,    30,    31,    32,    33,    34,    20,    21,    22,    23,
+      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
+      34
 };
 
 /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
    symbol of state STATE-NUM.  */
 static const yytype_uint16 yystos[] =
 {
-       0,   121,   122,   123,   132,   139,   148,   164,   165,   152,
-     153,   150,   151,   261,   262,   256,   257,     0,   166,   154,
-       4,    56,   127,   265,   266,    56,   258,   259,     4,    46,
+       0,   123,   124,   125,   134,   141,   150,   166,   167,   154,
+     155,   152,   153,   263,   264,   258,   259,     0,   168,   156,
+       4,    56,   129,   267,   268,    56,   260,   261,     4,    46,
       47,    48,    59,    60,    61,    62,    64,    65,    66,    73,
-      74,    75,    76,    84,    85,    86,    87,    88,    89,    94,
-      95,    96,   101,   102,   113,   125,   141,   167,   174,   176,
-     195,   197,   208,   209,   211,   213,   248,   263,   264,     4,
-      38,    64,    98,   104,   105,   106,   107,   108,   110,   111,
-     112,   114,   115,   117,   118,   119,   124,   125,   126,   155,
-       6,     4,   125,   128,   129,   130,   268,   269,    56,   266,
-     129,   130,   260,   269,   259,     6,     7,     8,     9,    10,
-      11,    12,    13,    14,   193,    56,    56,    49,    50,    37,
-      37,     4,   149,    56,    37,    37,    37,    37,    37,    37,
-      37,    37,    37,    37,   168,    37,    37,    37,   177,    37,
-     140,   141,   194,   131,     4,   149,     4,     3,     4,    30,
+      74,    75,    76,    86,    87,    88,    89,    90,    91,    96,
+      97,    98,   103,   104,   115,   127,   143,   169,   176,   178,
+     197,   199,   210,   211,   213,   215,   250,   265,   266,     4,
+      38,    64,   100,   106,   107,   108,   109,   110,   112,   113,
+     114,   116,   117,   119,   120,   121,   126,   127,   128,   157,
+       6,     4,   127,   130,   131,   132,   270,   271,    56,   268,
+     131,   132,   262,   271,   261,     6,     7,     8,     9,    10,
+      11,    12,    13,    14,   195,    56,    56,    49,    50,    37,
+      37,     4,   151,    56,    37,    37,    37,    37,    37,    37,
+      37,    37,    37,    37,   170,    37,    37,    37,   179,    37,
+     142,   143,   196,   133,     4,   151,     4,     3,     4,    30,
       31,    37,    38,    39,    51,    52,    53,    58,    63,    72,
-      77,    78,    79,    80,    81,    82,    83,    90,    92,   107,
-     113,   138,   145,   146,   217,     4,     4,   159,     4,   158,
-     157,     4,     4,     4,   217,     4,     3,     4,   160,   161,
-     162,     4,   109,   217,     4,    16,    16,    57,   141,   268,
-      57,   141,   215,   216,   215,   175,   249,     4,     4,     4,
-       4,   169,     4,    64,   198,   199,   200,     4,     4,   149,
-     149,     4,   149,   142,   149,   210,   212,     4,   214,     4,
-       5,   103,   170,    37,   149,     4,     4,    37,   161,    56,
-       6,   140,   156,     6,   140,   217,   217,   217,    37,    37,
+      77,    78,    79,    80,    81,    82,    83,    84,    85,    92,
+      94,   109,   115,   140,   147,   148,   219,     4,     4,   161,
+       4,   160,   159,     4,     4,     4,   219,     4,     3,     4,
+     162,   163,   164,     4,   111,   219,     4,    16,    16,    57,
+     143,   270,    57,   143,   217,   218,   217,   177,   251,     4,
+       4,     4,     4,   171,     4,    64,   200,   201,   202,     4,
+       4,   151,   151,     4,   151,   144,   151,   212,   214,     4,
+     216,     4,     5,   105,   172,    37,   151,     4,     4,    37,
+     163,    56,     6,   142,   158,     6,   142,   219,   219,   219,
       37,    37,    37,    37,    37,    37,    37,    37,    37,    37,
-      37,    37,    37,    37,    37,    37,    37,   217,   217,    15,
-      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
-      27,    28,    29,    30,    31,    32,    33,    34,   140,     6,
-     140,   217,   140,   140,     4,   140,     6,   140,   217,   140,
-     140,     4,   163,    56,   269,   269,   141,     4,   125,   128,
-     129,   130,    57,   141,   217,     4,    57,    64,    71,    95,
-     176,   223,     4,    57,   250,   140,   142,   142,   166,   201,
-     149,    57,   140,   196,   140,   142,   142,   142,   142,   142,
-     142,   196,   142,   196,   140,   214,   142,    37,     4,     5,
-     103,   140,   142,   170,   142,     6,     6,   217,   142,   265,
-     217,   217,   154,   217,   217,   142,   217,   217,   217,   217,
-     217,     4,     4,   217,     4,     4,     4,     4,   217,   217,
-       4,     4,   217,   217,     4,   217,   217,   217,   217,   217,
-     217,   217,   217,   217,   217,   217,   217,   217,   217,   217,
-     217,   217,   217,   217,   217,   217,   217,     4,     4,     4,
-     217,   217,     3,     4,     4,     4,   140,   271,   141,   141,
-       4,   127,   141,   267,   224,   149,   229,   234,   251,     4,
-      36,    37,   205,   202,   200,     4,   149,   149,   214,   171,
-      37,     4,     5,   103,   142,   215,   215,   140,    57,    36,
-     140,   142,   142,   140,   140,   142,   140,   142,   142,   142,
-     142,   142,   142,   140,   140,   142,   142,   142,   140,   142,
-      16,     4,   269,   130,    56,   127,   141,    37,    40,   217,
-     238,   239,   236,    16,   217,   240,   239,   217,   253,   140,
-       4,   145,   206,   207,    16,   198,   142,   170,   173,    37,
-     142,   142,     4,   217,   217,   217,   217,   217,   217,     4,
-     217,   141,   272,    16,   270,    67,    68,    69,    70,    71,
-     142,   237,    37,    37,   238,    16,    99,   219,   175,    16,
-      89,   241,   235,     4,    99,   254,     4,     4,   142,   207,
-      90,   203,    36,   142,   170,   172,   142,   142,   142,   142,
-     142,   142,   142,   142,    57,   269,   269,   142,   217,    16,
-      37,    38,   220,    36,   219,    56,    37,   255,    37,   252,
-     142,     6,   196,   142,   170,   141,   272,   142,   217,    37,
-     100,   221,   221,   175,   217,   254,   217,   141,   215,    92,
-     204,   142,    57,    39,   238,   142,   217,    37,   225,   230,
-      57,   142,   142,     6,    37,    16,   142,   217,   134,   135,
-     136,   222,    56,   254,   215,   217,   142,    56,   231,   142,
-     226,   244,   238,     4,    15,    32,    41,    42,    43,    44,
-      45,    54,    55,    64,    91,    93,    97,   113,   133,   137,
-     141,   143,   178,   179,   182,   183,   185,   188,   189,   190,
-     195,     4,    57,    16,    37,    37,   149,    37,   186,    37,
-      37,     4,    54,   179,   181,    37,   185,    57,    37,   194,
-     245,   232,    54,    55,    97,   137,   178,    54,    55,   178,
-     187,   191,   215,    37,   184,   178,   180,    37,   144,   196,
-     181,   227,   215,    56,    25,   242,    37,    37,   142,    37,
-     142,    37,    37,   142,   189,   142,   217,     4,   182,   142,
-     178,   179,   142,   242,   142,   189,     4,    99,   218,   178,
-     178,   180,   178,   178,    36,   140,   142,   178,   218,    57,
-      25,   243,   142,   142,   142,   142,   142,     4,   243,   246,
-       4,     6,    16,   192,   142,   142,   178,   142,   142,   142,
-     192,   243,   191,     4,   233,   142,   194,   228,   192,   196,
-     196,   247,   196
+      37,    37,    37,    37,    37,    37,    37,    37,    37,    37,
+      37,   219,   219,    15,    17,    18,    19,    20,    21,    22,
+      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
+      33,    34,   142,     6,   142,   219,   142,   142,     4,   142,
+       6,   142,   219,   142,   142,     4,   165,    56,   271,   271,
+     143,     4,   127,   130,   131,   132,    57,   143,   219,     4,
+      57,    64,    71,    97,   178,   225,     4,    57,   252,   142,
+     144,   144,   168,   203,   151,    57,   142,   198,   142,   144,
+     144,   144,   144,   144,   144,   198,   144,   198,   142,   216,
+     144,    37,     4,     5,   105,   142,   144,   172,   144,     6,
+       6,   219,   144,   267,   219,   219,   156,   219,   219,   144,
+     219,   219,   219,   219,   219,     4,     4,   219,     4,     4,
+       4,     4,   219,   219,   219,   219,     4,     4,   219,   219,
+       4,   219,   219,   219,   219,   219,   219,   219,   219,   219,
+     219,   219,   219,   219,   219,   219,   219,   219,   219,   219,
+     219,   219,   219,     4,     4,     4,   219,   219,     3,     4,
+       4,     4,   142,   273,   143,   143,     4,   129,   143,   269,
+     226,   151,   231,   236,   253,     4,    36,    37,   207,   204,
+     202,     4,   151,   151,   216,   173,    37,     4,     5,   105,
+     144,   217,   217,   142,    57,    36,   142,   144,   144,   142,
+     142,   144,   142,   144,   144,   144,   144,   144,   144,   142,
+     142,   144,   144,   144,   144,   144,   142,   144,    16,     4,
+     271,   132,    56,   129,   143,    37,    40,   219,   240,   241,
+     238,    16,   219,   242,   241,   219,   255,   142,     4,   147,
+     208,   209,    16,   200,   144,   172,   175,    37,   144,   144,
+       4,   219,   219,   219,   219,   219,   219,     4,   219,   143,
+     274,    16,   272,    67,    68,    69,    70,    71,   144,   239,
+      37,    37,   240,    16,   101,   221,   177,    16,    91,   243,
+     237,     4,   101,   256,     4,     4,   144,   209,    92,   205,
+      36,   144,   172,   174,   144,   144,   144,   144,   144,   144,
+     144,   144,    57,   271,   271,   144,   219,    16,    37,    38,
+     222,    36,   221,    56,    37,   257,    37,   254,   144,     6,
+     198,   144,   172,   143,   274,   144,   219,    37,   102,   223,
+     223,   177,   219,   256,   219,   143,   217,    94,   206,   144,
+      57,    39,   240,   144,   219,    37,   227,   232,    57,   144,
+     144,     6,    37,    16,   144,   219,   136,   137,   138,   224,
+      56,   256,   217,   219,   144,    56,   233,   144,   228,   246,
+     240,     4,    15,    32,    41,    42,    43,    44,    45,    54,
+      55,    64,    93,    95,    99,   115,   135,   139,   143,   145,
+     180,   181,   184,   185,   187,   190,   191,   192,   197,     4,
+      57,    16,    37,    37,   151,    37,   188,    37,    37,     4,
+      54,   181,   183,    37,   187,    57,    37,   196,   247,   234,
+      54,    55,    99,   139,   180,    54,    55,   180,   189,   193,
+     217,    37,   186,   180,   182,    37,   146,   198,   183,   229,
+     217,    56,    25,   244,    37,    37,   144,    37,   144,    37,
+      37,   144,   191,   144,   219,     4,   184,   144,   180,   181,
+     144,   244,   144,   191,     4,   101,   220,   180,   180,   182,
+     180,   180,    36,   142,   144,   180,   220,    57,    25,   245,
+     144,   144,   144,   144,   144,     4,   245,   248,     4,     6,
+      16,   194,   144,   144,   180,   144,   144,   144,   194,   245,
+     193,     4,   235,   144,   196,   230,   194,   198,   198,   249,
+     198
 };
 
 #define yyerrok		(yyerrstatus = 0)
@@ -1810,7 +1716,7 @@
    we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+# if YYLTYPE_IS_TRIVIAL
 #  define YY_LOCATION_PRINT(File, Loc)			\
      fprintf (File, "%d.%d-%d.%d",			\
 	      (Loc).first_line, (Loc).first_column,	\
@@ -1921,17 +1827,20 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
+yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
 #else
 static void
-yy_stack_print (bottom, top)
-    yytype_int16 *bottom;
-    yytype_int16 *top;
+yy_stack_print (yybottom, yytop)
+    yytype_int16 *yybottom;
+    yytype_int16 *yytop;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; bottom <= top; ++bottom)
-    YYFPRINTF (stderr, " %d", *bottom);
+  for (; yybottom <= yytop; yybottom++)
+    {
+      int yybot = *yybottom;
+      YYFPRINTF (stderr, " %d", yybot);
+    }
   YYFPRINTF (stderr, "\n");
 }
 
@@ -1965,11 +1874,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      fprintf (stderr, "   $%d = ", yyi + 1);
+      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       );
-      fprintf (stderr, "\n");
+      YYFPRINTF (stderr, "\n");
     }
 }
 
@@ -2249,10 +2158,8 @@
 	break;
     }
 }
-
 
 /* Prevent warnings from -Wmissing-prototypes.  */
-
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -2268,11 +2175,10 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-
-/* The look-ahead symbol.  */
+/* The lookahead symbol.  */
 int yychar;
 
-/* The semantic value of the look-ahead symbol.  */
+/* The semantic value of the lookahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
@@ -2280,9 +2186,9 @@
 
 
 
-/*----------.
-| yyparse.  |
-`----------*/
+/*-------------------------.
+| yyparse or yypush_parse.  |
+`-------------------------*/
 
 #ifdef YYPARSE_PARAM
 #if (defined __STDC__ || defined __C99__FUNC__ \
@@ -2306,14 +2212,39 @@
 #endif
 #endif
 {
-  
-  int yystate;
+
+
+    int yystate;
+    /* Number of tokens to shift before error messages enabled.  */
+    int yyerrstatus;
+
+    /* The stacks and their tools:
+       `yyss': related to states.
+       `yyvs': related to semantic values.
+
+       Refer to the stacks thru separate pointers, to allow yyoverflow
+       to reallocate them elsewhere.  */
+
+    /* The state stack.  */
+    yytype_int16 yyssa[YYINITDEPTH];
+    yytype_int16 *yyss;
+    yytype_int16 *yyssp;
+
+    /* The semantic value stack.  */
+    YYSTYPE yyvsa[YYINITDEPTH];
+    YYSTYPE *yyvs;
+    YYSTYPE *yyvsp;
+
+    YYSIZE_T yystacksize;
+
   int yyn;
   int yyresult;
-  /* Number of tokens to shift before error messages enabled.  */
-  int yyerrstatus;
-  /* Look-ahead token as an internal (translated) token number.  */
-  int yytoken = 0;
+  /* Lookahead token as an internal (translated) token number.  */
+  int yytoken;
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -2321,51 +2252,28 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
-  /* Three stacks and their tools:
-     `yyss': related to states,
-     `yyvs': related to semantic values,
-     `yyls': related to locations.
-
-     Refer to the stacks thru separate pointers, to allow yyoverflow
-     to reallocate them elsewhere.  */
-
-  /* The state stack.  */
-  yytype_int16 yyssa[YYINITDEPTH];
-  yytype_int16 *yyss = yyssa;
-  yytype_int16 *yyssp;
-
-  /* The semantic value stack.  */
-  YYSTYPE yyvsa[YYINITDEPTH];
-  YYSTYPE *yyvs = yyvsa;
-  YYSTYPE *yyvsp;
-
-
-
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
-  YYSIZE_T yystacksize = YYINITDEPTH;
-
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
-
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
+  yytoken = 0;
+  yyss = yyssa;
+  yyvs = yyvsa;
+  yystacksize = YYINITDEPTH;
+
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY;		/* Cause a token to be read.  */
+  yychar = YYEMPTY; /* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
-
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -2395,7 +2303,6 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
-
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -2403,7 +2310,6 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
-
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -2426,9 +2332,8 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss);
-	YYSTACK_RELOCATE (yyvs);
-
+	YYSTACK_RELOCATE (yyss_alloc, yyss);
+	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -2439,7 +2344,6 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
-
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -2449,6 +2353,9 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
+  if (yystate == YYFINAL)
+    YYACCEPT;
+
   goto yybackup;
 
 /*-----------.
@@ -2457,16 +2364,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     look-ahead token if we need one and don't already have one.  */
+     lookahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to look-ahead token.  */
+  /* First try to decide what to do without reference to lookahead token.  */
   yyn = yypact[yystate];
   if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a look-ahead token if don't already have one.  */
+  /* Not known => get a lookahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -2498,20 +2405,16 @@
       goto yyreduce;
     }
 
-  if (yyn == YYFINAL)
-    YYACCEPT;
-
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the look-ahead token.  */
+  /* Shift the lookahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token unless it is eof.  */
-  if (yychar != YYEOF)
-    yychar = YYEMPTY;
+  /* Discard the shifted token.  */
+  yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -2551,487 +2454,655 @@
   switch (yyn)
     {
         case 8:
+
+/* Line 1455 of yacc.c  */
 #line 174 "ldgram.y"
-    { ldlex_defsym(); }
+    { ldlex_defsym(); ;}
     break;
 
   case 9:
+
+/* Line 1455 of yacc.c  */
 #line 176 "ldgram.y"
     {
 		  ldlex_popstate();
 		  lang_add_assignment(exp_assop((yyvsp[(3) - (4)].token),(yyvsp[(2) - (4)].name),(yyvsp[(4) - (4)].etree)));
-		}
+		;}
     break;
 
   case 10:
+
+/* Line 1455 of yacc.c  */
 #line 184 "ldgram.y"
     {
 		  ldlex_mri_script ();
 		  PUSH_ERROR (_("MRI style script"));
-		}
+		;}
     break;
 
   case 11:
+
+/* Line 1455 of yacc.c  */
 #line 189 "ldgram.y"
     {
 		  ldlex_popstate ();
 		  mri_draw_tree ();
 		  POP_ERROR ();
-		}
+		;}
     break;
 
   case 16:
+
+/* Line 1455 of yacc.c  */
 #line 204 "ldgram.y"
     {
 			einfo(_("%P%F: unrecognised keyword in MRI style script '%s'\n"),(yyvsp[(1) - (1)].name));
-			}
+			;}
     break;
 
   case 17:
+
+/* Line 1455 of yacc.c  */
 #line 207 "ldgram.y"
     {
 			config.map_filename = "-";
-			}
+			;}
     break;
 
   case 20:
+
+/* Line 1455 of yacc.c  */
 #line 213 "ldgram.y"
-    { mri_public((yyvsp[(2) - (4)].name), (yyvsp[(4) - (4)].etree)); }
+    { mri_public((yyvsp[(2) - (4)].name), (yyvsp[(4) - (4)].etree)); ;}
     break;
 
   case 21:
+
+/* Line 1455 of yacc.c  */
 #line 215 "ldgram.y"
-    { mri_public((yyvsp[(2) - (4)].name), (yyvsp[(4) - (4)].etree)); }
+    { mri_public((yyvsp[(2) - (4)].name), (yyvsp[(4) - (4)].etree)); ;}
     break;
 
   case 22:
+
+/* Line 1455 of yacc.c  */
 #line 217 "ldgram.y"
-    { mri_public((yyvsp[(2) - (3)].name), (yyvsp[(3) - (3)].etree)); }
+    { mri_public((yyvsp[(2) - (3)].name), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 23:
+
+/* Line 1455 of yacc.c  */
 #line 219 "ldgram.y"
-    { mri_format((yyvsp[(2) - (2)].name)); }
+    { mri_format((yyvsp[(2) - (2)].name)); ;}
     break;
 
   case 24:
+
+/* Line 1455 of yacc.c  */
 #line 221 "ldgram.y"
-    { mri_output_section((yyvsp[(2) - (4)].name), (yyvsp[(4) - (4)].etree));}
+    { mri_output_section((yyvsp[(2) - (4)].name), (yyvsp[(4) - (4)].etree));;}
     break;
 
   case 25:
+
+/* Line 1455 of yacc.c  */
 #line 223 "ldgram.y"
-    { mri_output_section((yyvsp[(2) - (3)].name), (yyvsp[(3) - (3)].etree));}
+    { mri_output_section((yyvsp[(2) - (3)].name), (yyvsp[(3) - (3)].etree));;}
     break;
 
   case 26:
+
+/* Line 1455 of yacc.c  */
 #line 225 "ldgram.y"
-    { mri_output_section((yyvsp[(2) - (4)].name), (yyvsp[(4) - (4)].etree));}
+    { mri_output_section((yyvsp[(2) - (4)].name), (yyvsp[(4) - (4)].etree));;}
     break;
 
   case 27:
+
+/* Line 1455 of yacc.c  */
 #line 227 "ldgram.y"
-    { mri_align((yyvsp[(2) - (4)].name),(yyvsp[(4) - (4)].etree)); }
+    { mri_align((yyvsp[(2) - (4)].name),(yyvsp[(4) - (4)].etree)); ;}
     break;
 
   case 28:
+
+/* Line 1455 of yacc.c  */
 #line 229 "ldgram.y"
-    { mri_align((yyvsp[(2) - (4)].name),(yyvsp[(4) - (4)].etree)); }
+    { mri_align((yyvsp[(2) - (4)].name),(yyvsp[(4) - (4)].etree)); ;}
     break;
 
   case 29:
+
+/* Line 1455 of yacc.c  */
 #line 231 "ldgram.y"
-    { mri_alignmod((yyvsp[(2) - (4)].name),(yyvsp[(4) - (4)].etree)); }
+    { mri_alignmod((yyvsp[(2) - (4)].name),(yyvsp[(4) - (4)].etree)); ;}
     break;
 
   case 30:
+
+/* Line 1455 of yacc.c  */
 #line 233 "ldgram.y"
-    { mri_alignmod((yyvsp[(2) - (4)].name),(yyvsp[(4) - (4)].etree)); }
+    { mri_alignmod((yyvsp[(2) - (4)].name),(yyvsp[(4) - (4)].etree)); ;}
     break;
 
   case 33:
+
+/* Line 1455 of yacc.c  */
 #line 237 "ldgram.y"
-    { mri_name((yyvsp[(2) - (2)].name)); }
+    { mri_name((yyvsp[(2) - (2)].name)); ;}
     break;
 
   case 34:
+
+/* Line 1455 of yacc.c  */
 #line 239 "ldgram.y"
-    { mri_alias((yyvsp[(2) - (4)].name),(yyvsp[(4) - (4)].name),0);}
+    { mri_alias((yyvsp[(2) - (4)].name),(yyvsp[(4) - (4)].name),0);;}
     break;
 
   case 35:
+
+/* Line 1455 of yacc.c  */
 #line 241 "ldgram.y"
-    { mri_alias ((yyvsp[(2) - (4)].name), 0, (int) (yyvsp[(4) - (4)].bigint).integer); }
+    { mri_alias ((yyvsp[(2) - (4)].name), 0, (int) (yyvsp[(4) - (4)].bigint).integer); ;}
     break;
 
   case 36:
+
+/* Line 1455 of yacc.c  */
 #line 243 "ldgram.y"
-    { mri_base((yyvsp[(2) - (2)].etree)); }
+    { mri_base((yyvsp[(2) - (2)].etree)); ;}
     break;
 
   case 37:
+
+/* Line 1455 of yacc.c  */
 #line 245 "ldgram.y"
-    { mri_truncate ((unsigned int) (yyvsp[(2) - (2)].bigint).integer); }
+    { mri_truncate ((unsigned int) (yyvsp[(2) - (2)].bigint).integer); ;}
     break;
 
   case 40:
+
+/* Line 1455 of yacc.c  */
 #line 249 "ldgram.y"
-    { ldlex_script (); ldfile_open_command_file((yyvsp[(2) - (2)].name)); }
+    { ldlex_script (); ldfile_open_command_file((yyvsp[(2) - (2)].name)); ;}
     break;
 
   case 41:
+
+/* Line 1455 of yacc.c  */
 #line 251 "ldgram.y"
-    { ldlex_popstate (); }
+    { ldlex_popstate (); ;}
     break;
 
   case 42:
+
+/* Line 1455 of yacc.c  */
 #line 253 "ldgram.y"
-    { lang_add_entry ((yyvsp[(2) - (2)].name), FALSE); }
+    { lang_add_entry ((yyvsp[(2) - (2)].name), FALSE); ;}
     break;
 
   case 44:
+
+/* Line 1455 of yacc.c  */
 #line 258 "ldgram.y"
-    { mri_order((yyvsp[(3) - (3)].name)); }
+    { mri_order((yyvsp[(3) - (3)].name)); ;}
     break;
 
   case 45:
+
+/* Line 1455 of yacc.c  */
 #line 259 "ldgram.y"
-    { mri_order((yyvsp[(2) - (2)].name)); }
+    { mri_order((yyvsp[(2) - (2)].name)); ;}
     break;
 
   case 47:
+
+/* Line 1455 of yacc.c  */
 #line 265 "ldgram.y"
-    { mri_load((yyvsp[(1) - (1)].name)); }
+    { mri_load((yyvsp[(1) - (1)].name)); ;}
     break;
 
   case 48:
+
+/* Line 1455 of yacc.c  */
 #line 266 "ldgram.y"
-    { mri_load((yyvsp[(3) - (3)].name)); }
+    { mri_load((yyvsp[(3) - (3)].name)); ;}
     break;
 
   case 49:
+
+/* Line 1455 of yacc.c  */
 #line 271 "ldgram.y"
-    { mri_only_load((yyvsp[(1) - (1)].name)); }
+    { mri_only_load((yyvsp[(1) - (1)].name)); ;}
     break;
 
   case 50:
+
+/* Line 1455 of yacc.c  */
 #line 273 "ldgram.y"
-    { mri_only_load((yyvsp[(3) - (3)].name)); }
+    { mri_only_load((yyvsp[(3) - (3)].name)); ;}
     break;
 
   case 51:
+
+/* Line 1455 of yacc.c  */
 #line 277 "ldgram.y"
-    { (yyval.name) = NULL; }
+    { (yyval.name) = NULL; ;}
     break;
 
   case 54:
+
+/* Line 1455 of yacc.c  */
 #line 284 "ldgram.y"
-    { ldlex_expression (); }
+    { ldlex_expression (); ;}
     break;
 
   case 55:
+
+/* Line 1455 of yacc.c  */
 #line 286 "ldgram.y"
-    { ldlex_popstate (); }
+    { ldlex_popstate (); ;}
     break;
 
   case 56:
+
+/* Line 1455 of yacc.c  */
 #line 290 "ldgram.y"
-    { ldlang_add_undef ((yyvsp[(1) - (1)].name)); }
+    { ldlang_add_undef ((yyvsp[(1) - (1)].name)); ;}
     break;
 
   case 57:
+
+/* Line 1455 of yacc.c  */
 #line 292 "ldgram.y"
-    { ldlang_add_undef ((yyvsp[(2) - (2)].name)); }
+    { ldlang_add_undef ((yyvsp[(2) - (2)].name)); ;}
     break;
 
   case 58:
+
+/* Line 1455 of yacc.c  */
 #line 294 "ldgram.y"
-    { ldlang_add_undef ((yyvsp[(3) - (3)].name)); }
+    { ldlang_add_undef ((yyvsp[(3) - (3)].name)); ;}
     break;
 
   case 59:
+
+/* Line 1455 of yacc.c  */
 #line 298 "ldgram.y"
-    { ldlex_both(); }
+    { ldlex_both(); ;}
     break;
 
   case 60:
+
+/* Line 1455 of yacc.c  */
 #line 300 "ldgram.y"
-    { ldlex_popstate(); }
+    { ldlex_popstate(); ;}
     break;
 
   case 73:
+
+/* Line 1455 of yacc.c  */
 #line 321 "ldgram.y"
-    { lang_add_target((yyvsp[(3) - (4)].name)); }
+    { lang_add_target((yyvsp[(3) - (4)].name)); ;}
     break;
 
   case 74:
+
+/* Line 1455 of yacc.c  */
 #line 323 "ldgram.y"
-    { ldfile_add_library_path ((yyvsp[(3) - (4)].name), FALSE); }
+    { ldfile_add_library_path ((yyvsp[(3) - (4)].name), FALSE); ;}
     break;
 
   case 75:
+
+/* Line 1455 of yacc.c  */
 #line 325 "ldgram.y"
-    { lang_add_output((yyvsp[(3) - (4)].name), 1); }
+    { lang_add_output((yyvsp[(3) - (4)].name), 1); ;}
     break;
 
   case 76:
+
+/* Line 1455 of yacc.c  */
 #line 327 "ldgram.y"
     { lang_add_output_format ((yyvsp[(3) - (4)].name), (char *) NULL,
-					    (char *) NULL, 1); }
+					    (char *) NULL, 1); ;}
     break;
 
   case 77:
+
+/* Line 1455 of yacc.c  */
 #line 330 "ldgram.y"
-    { lang_add_output_format ((yyvsp[(3) - (8)].name), (yyvsp[(5) - (8)].name), (yyvsp[(7) - (8)].name), 1); }
+    { lang_add_output_format ((yyvsp[(3) - (8)].name), (yyvsp[(5) - (8)].name), (yyvsp[(7) - (8)].name), 1); ;}
     break;
 
   case 78:
+
+/* Line 1455 of yacc.c  */
 #line 332 "ldgram.y"
-    { ldfile_set_output_arch ((yyvsp[(3) - (4)].name), bfd_arch_unknown); }
+    { ldfile_set_output_arch ((yyvsp[(3) - (4)].name), bfd_arch_unknown); ;}
     break;
 
   case 79:
+
+/* Line 1455 of yacc.c  */
 #line 334 "ldgram.y"
-    { command_line.force_common_definition = TRUE ; }
+    { command_line.force_common_definition = TRUE ; ;}
     break;
 
   case 80:
+
+/* Line 1455 of yacc.c  */
 #line 336 "ldgram.y"
-    { command_line.inhibit_common_definition = TRUE ; }
+    { command_line.inhibit_common_definition = TRUE ; ;}
     break;
 
   case 82:
+
+/* Line 1455 of yacc.c  */
 #line 339 "ldgram.y"
-    { lang_enter_group (); }
+    { lang_enter_group (); ;}
     break;
 
   case 83:
+
+/* Line 1455 of yacc.c  */
 #line 341 "ldgram.y"
-    { lang_leave_group (); }
+    { lang_leave_group (); ;}
     break;
 
   case 84:
+
+/* Line 1455 of yacc.c  */
 #line 343 "ldgram.y"
-    { lang_add_map((yyvsp[(3) - (4)].name)); }
+    { lang_add_map((yyvsp[(3) - (4)].name)); ;}
     break;
 
   case 85:
+
+/* Line 1455 of yacc.c  */
 #line 345 "ldgram.y"
-    { ldlex_script (); ldfile_open_command_file((yyvsp[(2) - (2)].name)); }
+    { ldlex_script (); ldfile_open_command_file((yyvsp[(2) - (2)].name)); ;}
     break;
 
   case 86:
+
+/* Line 1455 of yacc.c  */
 #line 347 "ldgram.y"
-    { ldlex_popstate (); }
+    { ldlex_popstate (); ;}
     break;
 
   case 87:
+
+/* Line 1455 of yacc.c  */
 #line 349 "ldgram.y"
     {
 		  lang_add_nocrossref ((yyvsp[(3) - (4)].nocrossref));
-		}
+		;}
     break;
 
   case 89:
+
+/* Line 1455 of yacc.c  */
 #line 354 "ldgram.y"
-    { lang_add_insert ((yyvsp[(3) - (3)].name), 0); }
+    { lang_add_insert ((yyvsp[(3) - (3)].name), 0); ;}
     break;
 
   case 90:
+
+/* Line 1455 of yacc.c  */
 #line 356 "ldgram.y"
-    { lang_add_insert ((yyvsp[(3) - (3)].name), 1); }
+    { lang_add_insert ((yyvsp[(3) - (3)].name), 1); ;}
     break;
 
   case 91:
+
+/* Line 1455 of yacc.c  */
 #line 358 "ldgram.y"
-    { lang_memory_region_alias ((yyvsp[(3) - (6)].name), (yyvsp[(5) - (6)].name)); }
+    { lang_memory_region_alias ((yyvsp[(3) - (6)].name), (yyvsp[(5) - (6)].name)); ;}
     break;
 
   case 92:
+
+/* Line 1455 of yacc.c  */
 #line 363 "ldgram.y"
     { lang_add_input_file((yyvsp[(1) - (1)].name),lang_input_file_is_search_file_enum,
-				 (char *)NULL); }
+				 (char *)NULL); ;}
     break;
 
   case 93:
+
+/* Line 1455 of yacc.c  */
 #line 366 "ldgram.y"
     { lang_add_input_file((yyvsp[(3) - (3)].name),lang_input_file_is_search_file_enum,
-				 (char *)NULL); }
+				 (char *)NULL); ;}
     break;
 
   case 94:
+
+/* Line 1455 of yacc.c  */
 #line 369 "ldgram.y"
     { lang_add_input_file((yyvsp[(2) - (2)].name),lang_input_file_is_search_file_enum,
-				 (char *)NULL); }
+				 (char *)NULL); ;}
     break;
 
   case 95:
+
+/* Line 1455 of yacc.c  */
 #line 372 "ldgram.y"
     { lang_add_input_file((yyvsp[(1) - (1)].name),lang_input_file_is_l_enum,
-				 (char *)NULL); }
+				 (char *)NULL); ;}
     break;
 
   case 96:
+
+/* Line 1455 of yacc.c  */
 #line 375 "ldgram.y"
     { lang_add_input_file((yyvsp[(3) - (3)].name),lang_input_file_is_l_enum,
-				 (char *)NULL); }
+				 (char *)NULL); ;}
     break;
 
   case 97:
+
+/* Line 1455 of yacc.c  */
 #line 378 "ldgram.y"
     { lang_add_input_file((yyvsp[(2) - (2)].name),lang_input_file_is_l_enum,
-				 (char *)NULL); }
+				 (char *)NULL); ;}
     break;
 
   case 98:
+
+/* Line 1455 of yacc.c  */
 #line 381 "ldgram.y"
-    { (yyval.integer) = as_needed; as_needed = TRUE; }
+    { (yyval.integer) = as_needed; as_needed = TRUE; ;}
     break;
 
   case 99:
+
+/* Line 1455 of yacc.c  */
 #line 383 "ldgram.y"
-    { as_needed = (yyvsp[(3) - (5)].integer); }
+    { as_needed = (yyvsp[(3) - (5)].integer); ;}
     break;
 
   case 100:
+
+/* Line 1455 of yacc.c  */
 #line 385 "ldgram.y"
-    { (yyval.integer) = as_needed; as_needed = TRUE; }
+    { (yyval.integer) = as_needed; as_needed = TRUE; ;}
     break;
 
   case 101:
+
+/* Line 1455 of yacc.c  */
 #line 387 "ldgram.y"
-    { as_needed = (yyvsp[(5) - (7)].integer); }
+    { as_needed = (yyvsp[(5) - (7)].integer); ;}
     break;
 
   case 102:
+
+/* Line 1455 of yacc.c  */
 #line 389 "ldgram.y"
-    { (yyval.integer) = as_needed; as_needed = TRUE; }
+    { (yyval.integer) = as_needed; as_needed = TRUE; ;}
     break;
 
   case 103:
+
+/* Line 1455 of yacc.c  */
 #line 391 "ldgram.y"
-    { as_needed = (yyvsp[(4) - (6)].integer); }
+    { as_needed = (yyvsp[(4) - (6)].integer); ;}
     break;
 
   case 108:
+
+/* Line 1455 of yacc.c  */
 #line 406 "ldgram.y"
-    { lang_add_entry ((yyvsp[(3) - (4)].name), FALSE); }
+    { lang_add_entry ((yyvsp[(3) - (4)].name), FALSE); ;}
     break;
 
   case 110:
+
+/* Line 1455 of yacc.c  */
 #line 408 "ldgram.y"
-    {ldlex_expression ();}
+    {ldlex_expression ();;}
     break;
 
   case 111:
+
+/* Line 1455 of yacc.c  */
 #line 409 "ldgram.y"
     { ldlex_popstate ();
-		  lang_add_assignment (exp_assert ((yyvsp[(4) - (7)].etree), (yyvsp[(6) - (7)].name))); }
+		  lang_add_assignment (exp_assert ((yyvsp[(4) - (7)].etree), (yyvsp[(6) - (7)].name))); ;}
     break;
 
   case 112:
+
+/* Line 1455 of yacc.c  */
 #line 417 "ldgram.y"
     {
 			  (yyval.cname) = (yyvsp[(1) - (1)].name);
-			}
+			;}
     break;
 
   case 113:
+
+/* Line 1455 of yacc.c  */
 #line 421 "ldgram.y"
     {
 			  (yyval.cname) = "*";
-			}
+			;}
     break;
 
   case 114:
+
+/* Line 1455 of yacc.c  */
 #line 425 "ldgram.y"
     {
 			  (yyval.cname) = "?";
-			}
+			;}
     break;
 
   case 115:
+
+/* Line 1455 of yacc.c  */
 #line 432 "ldgram.y"
     {
 			  (yyval.wildcard).name = (yyvsp[(1) - (1)].cname);
 			  (yyval.wildcard).sorted = none;
 			  (yyval.wildcard).exclude_name_list = NULL;
-			}
+			;}
     break;
 
   case 116:
+
+/* Line 1455 of yacc.c  */
 #line 438 "ldgram.y"
     {
 			  (yyval.wildcard).name = (yyvsp[(5) - (5)].cname);
 			  (yyval.wildcard).sorted = none;
 			  (yyval.wildcard).exclude_name_list = (yyvsp[(3) - (5)].name_list);
-			}
+			;}
     break;
 
   case 117:
+
+/* Line 1455 of yacc.c  */
 #line 444 "ldgram.y"
     {
 			  (yyval.wildcard).name = (yyvsp[(3) - (4)].cname);
 			  (yyval.wildcard).sorted = by_name;
 			  (yyval.wildcard).exclude_name_list = NULL;
-			}
+			;}
     break;
 
   case 118:
+
+/* Line 1455 of yacc.c  */
 #line 450 "ldgram.y"
     {
 			  (yyval.wildcard).name = (yyvsp[(3) - (4)].cname);
 			  (yyval.wildcard).sorted = by_alignment;
 			  (yyval.wildcard).exclude_name_list = NULL;
-			}
+			;}
     break;
 
   case 119:
+
+/* Line 1455 of yacc.c  */
 #line 456 "ldgram.y"
     {
 			  (yyval.wildcard).name = (yyvsp[(5) - (7)].cname);
 			  (yyval.wildcard).sorted = by_name_alignment;
 			  (yyval.wildcard).exclude_name_list = NULL;
-			}
+			;}
     break;
 
   case 120:
+
+/* Line 1455 of yacc.c  */
 #line 462 "ldgram.y"
     {
 			  (yyval.wildcard).name = (yyvsp[(5) - (7)].cname);
 			  (yyval.wildcard).sorted = by_name;
 			  (yyval.wildcard).exclude_name_list = NULL;
-			}
+			;}
     break;
 
   case 121:
+
+/* Line 1455 of yacc.c  */
 #line 468 "ldgram.y"
     {
 			  (yyval.wildcard).name = (yyvsp[(5) - (7)].cname);
 			  (yyval.wildcard).sorted = by_alignment_name;
 			  (yyval.wildcard).exclude_name_list = NULL;
-			}
+			;}
     break;
 
   case 122:
+
+/* Line 1455 of yacc.c  */
 #line 474 "ldgram.y"
     {
 			  (yyval.wildcard).name = (yyvsp[(5) - (7)].cname);
 			  (yyval.wildcard).sorted = by_alignment;
 			  (yyval.wildcard).exclude_name_list = NULL;
-			}
+			;}
     break;
 
   case 123:
+
+/* Line 1455 of yacc.c  */
 #line 480 "ldgram.y"
     {
 			  (yyval.wildcard).name = (yyvsp[(7) - (8)].cname);
 			  (yyval.wildcard).sorted = by_name;
 			  (yyval.wildcard).exclude_name_list = (yyvsp[(5) - (8)].name_list);
-			}
+			;}
     break;
 
   case 124:
+
+/* Line 1455 of yacc.c  */
 #line 489 "ldgram.y"
     {
 			  struct name_list *tmp;
@@ -3039,10 +3110,12 @@
 			  tmp->name = (yyvsp[(2) - (2)].cname);
 			  tmp->next = (yyvsp[(1) - (2)].name_list);
 			  (yyval.name_list) = tmp;
-			}
+			;}
     break;
 
   case 125:
+
+/* Line 1455 of yacc.c  */
 #line 498 "ldgram.y"
     {
 			  struct name_list *tmp;
@@ -3050,10 +3123,12 @@
 			  tmp->name = (yyvsp[(1) - (1)].cname);
 			  tmp->next = NULL;
 			  (yyval.name_list) = tmp;
-			}
+			;}
     break;
 
   case 126:
+
+/* Line 1455 of yacc.c  */
 #line 509 "ldgram.y"
     {
 			  struct wildcard_list *tmp;
@@ -3061,10 +3136,12 @@
 			  tmp->next = (yyvsp[(1) - (3)].wildcard_list);
 			  tmp->spec = (yyvsp[(3) - (3)].wildcard);
 			  (yyval.wildcard_list) = tmp;
-			}
+			;}
     break;
 
   case 127:
+
+/* Line 1455 of yacc.c  */
 #line 518 "ldgram.y"
     {
 			  struct wildcard_list *tmp;
@@ -3072,10 +3149,12 @@
 			  tmp->next = NULL;
 			  tmp->spec = (yyvsp[(1) - (1)].wildcard);
 			  (yyval.wildcard_list) = tmp;
-			}
+			;}
     break;
 
   case 128:
+
+/* Line 1455 of yacc.c  */
 #line 529 "ldgram.y"
     {
 			  struct wildcard_spec tmp;
@@ -3083,181 +3162,243 @@
 			  tmp.exclude_name_list = NULL;
 			  tmp.sorted = none;
 			  lang_add_wild (&tmp, NULL, ldgram_had_keep);
-			}
+			;}
     break;
 
   case 129:
+
+/* Line 1455 of yacc.c  */
 #line 537 "ldgram.y"
     {
 			  lang_add_wild (NULL, (yyvsp[(2) - (3)].wildcard_list), ldgram_had_keep);
-			}
+			;}
     break;
 
   case 130:
+
+/* Line 1455 of yacc.c  */
 #line 541 "ldgram.y"
     {
 			  lang_add_wild (&(yyvsp[(1) - (4)].wildcard), (yyvsp[(3) - (4)].wildcard_list), ldgram_had_keep);
-			}
+			;}
     break;
 
   case 132:
+
+/* Line 1455 of yacc.c  */
 #line 549 "ldgram.y"
-    { ldgram_had_keep = TRUE; }
+    { ldgram_had_keep = TRUE; ;}
     break;
 
   case 133:
+
+/* Line 1455 of yacc.c  */
 #line 551 "ldgram.y"
-    { ldgram_had_keep = FALSE; }
+    { ldgram_had_keep = FALSE; ;}
     break;
 
   case 135:
+
+/* Line 1455 of yacc.c  */
 #line 557 "ldgram.y"
     {
  		lang_add_attribute(lang_object_symbols_statement_enum);
-	      	}
+	      	;}
     break;
 
   case 137:
+
+/* Line 1455 of yacc.c  */
 #line 562 "ldgram.y"
     {
 
 		  lang_add_attribute(lang_constructors_statement_enum);
-		}
+		;}
     break;
 
   case 138:
+
+/* Line 1455 of yacc.c  */
 #line 567 "ldgram.y"
     {
 		  constructors_sorted = TRUE;
 		  lang_add_attribute (lang_constructors_statement_enum);
-		}
+		;}
     break;
 
   case 140:
+
+/* Line 1455 of yacc.c  */
 #line 573 "ldgram.y"
     {
 			  lang_add_data ((int) (yyvsp[(1) - (4)].integer), (yyvsp[(3) - (4)].etree));
-			}
+			;}
     break;
 
   case 141:
+
+/* Line 1455 of yacc.c  */
 #line 578 "ldgram.y"
     {
 			  lang_add_fill ((yyvsp[(3) - (4)].fill));
-			}
+			;}
     break;
 
   case 142:
+
+/* Line 1455 of yacc.c  */
 #line 581 "ldgram.y"
-    {ldlex_expression ();}
+    {ldlex_expression ();;}
     break;
 
   case 143:
+
+/* Line 1455 of yacc.c  */
 #line 582 "ldgram.y"
     { ldlex_popstate ();
-			  lang_add_assignment (exp_assert ((yyvsp[(4) - (8)].etree), (yyvsp[(6) - (8)].name))); }
+			  lang_add_assignment (exp_assert ((yyvsp[(4) - (8)].etree), (yyvsp[(6) - (8)].name))); ;}
     break;
 
   case 144:
+
+/* Line 1455 of yacc.c  */
 #line 585 "ldgram.y"
-    { ldlex_script (); ldfile_open_command_file((yyvsp[(2) - (2)].name)); }
+    { ldlex_script (); ldfile_open_command_file((yyvsp[(2) - (2)].name)); ;}
     break;
 
   case 145:
+
+/* Line 1455 of yacc.c  */
 #line 587 "ldgram.y"
-    { ldlex_popstate (); }
+    { ldlex_popstate (); ;}
     break;
 
   case 150:
+
+/* Line 1455 of yacc.c  */
 #line 602 "ldgram.y"
-    { (yyval.integer) = (yyvsp[(1) - (1)].token); }
+    { (yyval.integer) = (yyvsp[(1) - (1)].token); ;}
     break;
 
   case 151:
+
+/* Line 1455 of yacc.c  */
 #line 604 "ldgram.y"
-    { (yyval.integer) = (yyvsp[(1) - (1)].token); }
+    { (yyval.integer) = (yyvsp[(1) - (1)].token); ;}
     break;
 
   case 152:
+
+/* Line 1455 of yacc.c  */
 #line 606 "ldgram.y"
-    { (yyval.integer) = (yyvsp[(1) - (1)].token); }
+    { (yyval.integer) = (yyvsp[(1) - (1)].token); ;}
     break;
 
   case 153:
+
+/* Line 1455 of yacc.c  */
 #line 608 "ldgram.y"
-    { (yyval.integer) = (yyvsp[(1) - (1)].token); }
+    { (yyval.integer) = (yyvsp[(1) - (1)].token); ;}
     break;
 
   case 154:
+
+/* Line 1455 of yacc.c  */
 #line 610 "ldgram.y"
-    { (yyval.integer) = (yyvsp[(1) - (1)].token); }
+    { (yyval.integer) = (yyvsp[(1) - (1)].token); ;}
     break;
 
   case 155:
+
+/* Line 1455 of yacc.c  */
 #line 615 "ldgram.y"
     {
 		  (yyval.fill) = exp_get_fill ((yyvsp[(1) - (1)].etree), 0, "fill value");
-		}
+		;}
     break;
 
   case 156:
+
+/* Line 1455 of yacc.c  */
 #line 622 "ldgram.y"
-    { (yyval.fill) = (yyvsp[(2) - (2)].fill); }
+    { (yyval.fill) = (yyvsp[(2) - (2)].fill); ;}
     break;
 
   case 157:
+
+/* Line 1455 of yacc.c  */
 #line 623 "ldgram.y"
-    { (yyval.fill) = (fill_type *) 0; }
+    { (yyval.fill) = (fill_type *) 0; ;}
     break;
 
   case 158:
+
+/* Line 1455 of yacc.c  */
 #line 628 "ldgram.y"
-    { (yyval.token) = '+'; }
+    { (yyval.token) = '+'; ;}
     break;
 
   case 159:
+
+/* Line 1455 of yacc.c  */
 #line 630 "ldgram.y"
-    { (yyval.token) = '-'; }
+    { (yyval.token) = '-'; ;}
     break;
 
   case 160:
+
+/* Line 1455 of yacc.c  */
 #line 632 "ldgram.y"
-    { (yyval.token) = '*'; }
+    { (yyval.token) = '*'; ;}
     break;
 
   case 161:
+
+/* Line 1455 of yacc.c  */
 #line 634 "ldgram.y"
-    { (yyval.token) = '/'; }
+    { (yyval.token) = '/'; ;}
     break;
 
   case 162:
+
+/* Line 1455 of yacc.c  */
 #line 636 "ldgram.y"
-    { (yyval.token) = LSHIFT; }
+    { (yyval.token) = LSHIFT; ;}
     break;
 
   case 163:
+
+/* Line 1455 of yacc.c  */
 #line 638 "ldgram.y"
-    { (yyval.token) = RSHIFT; }
+    { (yyval.token) = RSHIFT; ;}
     break;
 
   case 164:
+
+/* Line 1455 of yacc.c  */
 #line 640 "ldgram.y"
-    { (yyval.token) = '&'; }
+    { (yyval.token) = '&'; ;}
     break;
 
   case 165:
+
+/* Line 1455 of yacc.c  */
 #line 642 "ldgram.y"
-    { (yyval.token) = '|'; }
+    { (yyval.token) = '|'; ;}
     break;
 
   case 168:
+
+/* Line 1455 of yacc.c  */
 #line 652 "ldgram.y"
     {
 		  lang_add_assignment (exp_assop ((yyvsp[(2) - (3)].token), (yyvsp[(1) - (3)].name), (yyvsp[(3) - (3)].etree)));
-		}
+		;}
     break;
 
   case 169:
+
+/* Line 1455 of yacc.c  */
 #line 656 "ldgram.y"
     {
 		  lang_add_assignment (exp_assop ('=', (yyvsp[(1) - (3)].name),
@@ -3265,116 +3406,156 @@
 							     exp_nameop (NAME,
 									 (yyvsp[(1) - (3)].name)),
 							     (yyvsp[(3) - (3)].etree))));
-		}
+		;}
     break;
 
   case 170:
+
+/* Line 1455 of yacc.c  */
 #line 664 "ldgram.y"
     {
 		  lang_add_assignment (exp_provide ((yyvsp[(3) - (6)].name), (yyvsp[(5) - (6)].etree), FALSE));
-		}
+		;}
     break;
 
   case 171:
+
+/* Line 1455 of yacc.c  */
 #line 668 "ldgram.y"
     {
 		  lang_add_assignment (exp_provide ((yyvsp[(3) - (6)].name), (yyvsp[(5) - (6)].etree), TRUE));
-		}
+		;}
     break;
 
   case 179:
+
+/* Line 1455 of yacc.c  */
 #line 691 "ldgram.y"
-    { region = lang_memory_region_lookup ((yyvsp[(1) - (1)].name), TRUE); }
+    { region = lang_memory_region_lookup ((yyvsp[(1) - (1)].name), TRUE); ;}
     break;
 
   case 180:
+
+/* Line 1455 of yacc.c  */
 #line 694 "ldgram.y"
-    {}
+    {;}
     break;
 
   case 181:
+
+/* Line 1455 of yacc.c  */
 #line 696 "ldgram.y"
-    { ldlex_script (); ldfile_open_command_file((yyvsp[(2) - (2)].name)); }
+    { ldlex_script (); ldfile_open_command_file((yyvsp[(2) - (2)].name)); ;}
     break;
 
   case 182:
+
+/* Line 1455 of yacc.c  */
 #line 698 "ldgram.y"
-    { ldlex_popstate (); }
+    { ldlex_popstate (); ;}
     break;
 
   case 183:
+
+/* Line 1455 of yacc.c  */
 #line 703 "ldgram.y"
     {
 		  region->origin = exp_get_vma ((yyvsp[(3) - (3)].etree), 0, "origin");
 		  region->current = region->origin;
-		}
+		;}
     break;
 
   case 184:
+
+/* Line 1455 of yacc.c  */
 #line 711 "ldgram.y"
     {
 		  region->length = exp_get_vma ((yyvsp[(3) - (3)].etree), -1, "length");
-		}
+		;}
     break;
 
   case 185:
+
+/* Line 1455 of yacc.c  */
 #line 718 "ldgram.y"
-    { /* dummy action to avoid bison 1.25 error message */ }
+    { /* dummy action to avoid bison 1.25 error message */ ;}
     break;
 
   case 189:
+
+/* Line 1455 of yacc.c  */
 #line 729 "ldgram.y"
-    { lang_set_flags (region, (yyvsp[(1) - (1)].name), 0); }
+    { lang_set_flags (region, (yyvsp[(1) - (1)].name), 0); ;}
     break;
 
   case 190:
+
+/* Line 1455 of yacc.c  */
 #line 731 "ldgram.y"
-    { lang_set_flags (region, (yyvsp[(2) - (2)].name), 1); }
+    { lang_set_flags (region, (yyvsp[(2) - (2)].name), 1); ;}
     break;
 
   case 191:
+
+/* Line 1455 of yacc.c  */
 #line 736 "ldgram.y"
-    { lang_startup((yyvsp[(3) - (4)].name)); }
+    { lang_startup((yyvsp[(3) - (4)].name)); ;}
     break;
 
   case 193:
+
+/* Line 1455 of yacc.c  */
 #line 742 "ldgram.y"
-    { ldemul_hll((char *)NULL); }
+    { ldemul_hll((char *)NULL); ;}
     break;
 
   case 194:
+
+/* Line 1455 of yacc.c  */
 #line 747 "ldgram.y"
-    { ldemul_hll((yyvsp[(3) - (3)].name)); }
+    { ldemul_hll((yyvsp[(3) - (3)].name)); ;}
     break;
 
   case 195:
+
+/* Line 1455 of yacc.c  */
 #line 749 "ldgram.y"
-    { ldemul_hll((yyvsp[(1) - (1)].name)); }
+    { ldemul_hll((yyvsp[(1) - (1)].name)); ;}
     break;
 
   case 197:
+
+/* Line 1455 of yacc.c  */
 #line 757 "ldgram.y"
-    { ldemul_syslib((yyvsp[(3) - (3)].name)); }
+    { ldemul_syslib((yyvsp[(3) - (3)].name)); ;}
     break;
 
   case 199:
+
+/* Line 1455 of yacc.c  */
 #line 763 "ldgram.y"
-    { lang_float(TRUE); }
+    { lang_float(TRUE); ;}
     break;
 
   case 200:
+
+/* Line 1455 of yacc.c  */
 #line 765 "ldgram.y"
-    { lang_float(FALSE); }
+    { lang_float(FALSE); ;}
     break;
 
   case 201:
+
+/* Line 1455 of yacc.c  */
 #line 770 "ldgram.y"
     {
 		  (yyval.nocrossref) = NULL;
-		}
+		;}
     break;
 
   case 202:
+
+/* Line 1455 of yacc.c  */
 #line 774 "ldgram.y"
     {
 		  struct lang_nocrossref *n;
@@ -3383,10 +3564,12 @@
 		  n->name = (yyvsp[(1) - (2)].name);
 		  n->next = (yyvsp[(2) - (2)].nocrossref);
 		  (yyval.nocrossref) = n;
-		}
+		;}
     break;
 
   case 203:
+
+/* Line 1455 of yacc.c  */
 #line 783 "ldgram.y"
     {
 		  struct lang_nocrossref *n;
@@ -3395,215 +3578,299 @@
 		  n->name = (yyvsp[(1) - (3)].name);
 		  n->next = (yyvsp[(3) - (3)].nocrossref);
 		  (yyval.nocrossref) = n;
-		}
+		;}
     break;
 
   case 204:
+
+/* Line 1455 of yacc.c  */
 #line 793 "ldgram.y"
-    { ldlex_expression (); }
+    { ldlex_expression (); ;}
     break;
 
   case 205:
+
+/* Line 1455 of yacc.c  */
 #line 795 "ldgram.y"
-    { ldlex_popstate (); (yyval.etree)=(yyvsp[(2) - (2)].etree);}
+    { ldlex_popstate (); (yyval.etree)=(yyvsp[(2) - (2)].etree);;}
     break;
 
   case 206:
+
+/* Line 1455 of yacc.c  */
 #line 800 "ldgram.y"
-    { (yyval.etree) = exp_unop ('-', (yyvsp[(2) - (2)].etree)); }
+    { (yyval.etree) = exp_unop ('-', (yyvsp[(2) - (2)].etree)); ;}
     break;
 
   case 207:
+
+/* Line 1455 of yacc.c  */
 #line 802 "ldgram.y"
-    { (yyval.etree) = (yyvsp[(2) - (3)].etree); }
+    { (yyval.etree) = (yyvsp[(2) - (3)].etree); ;}
     break;
 
   case 208:
+
+/* Line 1455 of yacc.c  */
 #line 804 "ldgram.y"
-    { (yyval.etree) = exp_unop ((int) (yyvsp[(1) - (4)].integer),(yyvsp[(3) - (4)].etree)); }
+    { (yyval.etree) = exp_unop ((int) (yyvsp[(1) - (4)].integer),(yyvsp[(3) - (4)].etree)); ;}
     break;
 
   case 209:
+
+/* Line 1455 of yacc.c  */
 #line 806 "ldgram.y"
-    { (yyval.etree) = exp_unop ('!', (yyvsp[(2) - (2)].etree)); }
+    { (yyval.etree) = exp_unop ('!', (yyvsp[(2) - (2)].etree)); ;}
     break;
 
   case 210:
+
+/* Line 1455 of yacc.c  */
 #line 808 "ldgram.y"
-    { (yyval.etree) = (yyvsp[(2) - (2)].etree); }
+    { (yyval.etree) = (yyvsp[(2) - (2)].etree); ;}
     break;
 
   case 211:
+
+/* Line 1455 of yacc.c  */
 #line 810 "ldgram.y"
-    { (yyval.etree) = exp_unop ('~', (yyvsp[(2) - (2)].etree));}
+    { (yyval.etree) = exp_unop ('~', (yyvsp[(2) - (2)].etree));;}
     break;
 
   case 212:
+
+/* Line 1455 of yacc.c  */
 #line 813 "ldgram.y"
-    { (yyval.etree) = exp_binop ('*', (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop ('*', (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 213:
+
+/* Line 1455 of yacc.c  */
 #line 815 "ldgram.y"
-    { (yyval.etree) = exp_binop ('/', (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop ('/', (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 214:
+
+/* Line 1455 of yacc.c  */
 #line 817 "ldgram.y"
-    { (yyval.etree) = exp_binop ('%', (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop ('%', (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 215:
+
+/* Line 1455 of yacc.c  */
 #line 819 "ldgram.y"
-    { (yyval.etree) = exp_binop ('+', (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop ('+', (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 216:
+
+/* Line 1455 of yacc.c  */
 #line 821 "ldgram.y"
-    { (yyval.etree) = exp_binop ('-' , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop ('-' , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 217:
+
+/* Line 1455 of yacc.c  */
 #line 823 "ldgram.y"
-    { (yyval.etree) = exp_binop (LSHIFT , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop (LSHIFT , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 218:
+
+/* Line 1455 of yacc.c  */
 #line 825 "ldgram.y"
-    { (yyval.etree) = exp_binop (RSHIFT , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop (RSHIFT , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 219:
+
+/* Line 1455 of yacc.c  */
 #line 827 "ldgram.y"
-    { (yyval.etree) = exp_binop (EQ , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop (EQ , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 220:
+
+/* Line 1455 of yacc.c  */
 #line 829 "ldgram.y"
-    { (yyval.etree) = exp_binop (NE , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop (NE , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 221:
+
+/* Line 1455 of yacc.c  */
 #line 831 "ldgram.y"
-    { (yyval.etree) = exp_binop (LE , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop (LE , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 222:
+
+/* Line 1455 of yacc.c  */
 #line 833 "ldgram.y"
-    { (yyval.etree) = exp_binop (GE , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop (GE , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 223:
+
+/* Line 1455 of yacc.c  */
 #line 835 "ldgram.y"
-    { (yyval.etree) = exp_binop ('<' , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop ('<' , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 224:
+
+/* Line 1455 of yacc.c  */
 #line 837 "ldgram.y"
-    { (yyval.etree) = exp_binop ('>' , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop ('>' , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 225:
+
+/* Line 1455 of yacc.c  */
 #line 839 "ldgram.y"
-    { (yyval.etree) = exp_binop ('&' , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop ('&' , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 226:
+
+/* Line 1455 of yacc.c  */
 #line 841 "ldgram.y"
-    { (yyval.etree) = exp_binop ('^' , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop ('^' , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 227:
+
+/* Line 1455 of yacc.c  */
 #line 843 "ldgram.y"
-    { (yyval.etree) = exp_binop ('|' , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop ('|' , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 228:
+
+/* Line 1455 of yacc.c  */
 #line 845 "ldgram.y"
-    { (yyval.etree) = exp_trinop ('?' , (yyvsp[(1) - (5)].etree), (yyvsp[(3) - (5)].etree), (yyvsp[(5) - (5)].etree)); }
+    { (yyval.etree) = exp_trinop ('?' , (yyvsp[(1) - (5)].etree), (yyvsp[(3) - (5)].etree), (yyvsp[(5) - (5)].etree)); ;}
     break;
 
   case 229:
+
+/* Line 1455 of yacc.c  */
 #line 847 "ldgram.y"
-    { (yyval.etree) = exp_binop (ANDAND , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop (ANDAND , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 230:
+
+/* Line 1455 of yacc.c  */
 #line 849 "ldgram.y"
-    { (yyval.etree) = exp_binop (OROR , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); }
+    { (yyval.etree) = exp_binop (OROR , (yyvsp[(1) - (3)].etree), (yyvsp[(3) - (3)].etree)); ;}
     break;
 
   case 231:
+
+/* Line 1455 of yacc.c  */
 #line 851 "ldgram.y"
-    { (yyval.etree) = exp_nameop (DEFINED, (yyvsp[(3) - (4)].name)); }
+    { (yyval.etree) = exp_nameop (DEFINED, (yyvsp[(3) - (4)].name)); ;}
     break;
 
   case 232:
+
+/* Line 1455 of yacc.c  */
 #line 853 "ldgram.y"
-    { (yyval.etree) = exp_bigintop ((yyvsp[(1) - (1)].bigint).integer, (yyvsp[(1) - (1)].bigint).str); }
+    { (yyval.etree) = exp_bigintop ((yyvsp[(1) - (1)].bigint).integer, (yyvsp[(1) - (1)].bigint).str); ;}
     break;
 
   case 233:
+
+/* Line 1455 of yacc.c  */
 #line 855 "ldgram.y"
-    { (yyval.etree) = exp_nameop (SIZEOF_HEADERS,0); }
+    { (yyval.etree) = exp_nameop (SIZEOF_HEADERS,0); ;}
     break;
 
   case 234:
+
+/* Line 1455 of yacc.c  */
 #line 858 "ldgram.y"
-    { (yyval.etree) = exp_nameop (ALIGNOF,(yyvsp[(3) - (4)].name)); }
+    { (yyval.etree) = exp_nameop (ALIGNOF,(yyvsp[(3) - (4)].name)); ;}
     break;
 
   case 235:
+
+/* Line 1455 of yacc.c  */
 #line 860 "ldgram.y"
-    { (yyval.etree) = exp_nameop (SIZEOF,(yyvsp[(3) - (4)].name)); }
+    { (yyval.etree) = exp_nameop (SIZEOF,(yyvsp[(3) - (4)].name)); ;}
     break;
 
   case 236:
+
+/* Line 1455 of yacc.c  */
 #line 862 "ldgram.y"
-    { (yyval.etree) = exp_nameop (ADDR,(yyvsp[(3) - (4)].name)); }
+    { (yyval.etree) = exp_nameop (ADDR,(yyvsp[(3) - (4)].name)); ;}
     break;
 
   case 237:
+
+/* Line 1455 of yacc.c  */
 #line 864 "ldgram.y"
-    { (yyval.etree) = exp_nameop (LOADADDR,(yyvsp[(3) - (4)].name)); }
+    { (yyval.etree) = exp_nameop (LOADADDR,(yyvsp[(3) - (4)].name)); ;}
     break;
 
   case 238:
+
+/* Line 1455 of yacc.c  */
 #line 866 "ldgram.y"
-    { (yyval.etree) = exp_nameop (CONSTANT,(yyvsp[(3) - (4)].name)); }
+    { (yyval.etree) = exp_nameop (CONSTANT,(yyvsp[(3) - (4)].name)); ;}
     break;
 
   case 239:
+
+/* Line 1455 of yacc.c  */
 #line 868 "ldgram.y"
-    { (yyval.etree) = exp_unop (ABSOLUTE, (yyvsp[(3) - (4)].etree)); }
+    { (yyval.etree) = exp_unop (ABSOLUTE, (yyvsp[(3) - (4)].etree)); ;}
     break;
 
   case 240:
+
+/* Line 1455 of yacc.c  */
 #line 870 "ldgram.y"
-    { (yyval.etree) = exp_unop (ALIGN_K,(yyvsp[(3) - (4)].etree)); }
+    { (yyval.etree) = exp_unop (ALIGN_K,(yyvsp[(3) - (4)].etree)); ;}
     break;
 
   case 241:
+
+/* Line 1455 of yacc.c  */
 #line 872 "ldgram.y"
-    { (yyval.etree) = exp_binop (ALIGN_K,(yyvsp[(3) - (6)].etree),(yyvsp[(5) - (6)].etree)); }
+    { (yyval.etree) = exp_binop (ALIGN_K,(yyvsp[(3) - (6)].etree),(yyvsp[(5) - (6)].etree)); ;}
     break;
 
   case 242:
+
+/* Line 1455 of yacc.c  */
 #line 874 "ldgram.y"
-    { (yyval.etree) = exp_binop (DATA_SEGMENT_ALIGN, (yyvsp[(3) - (6)].etree), (yyvsp[(5) - (6)].etree)); }
+    { (yyval.etree) = exp_binop (DATA_SEGMENT_ALIGN, (yyvsp[(3) - (6)].etree), (yyvsp[(5) - (6)].etree)); ;}
     break;
 
   case 243:
+
+/* Line 1455 of yacc.c  */
 #line 876 "ldgram.y"
-    { (yyval.etree) = exp_binop (DATA_SEGMENT_RELRO_END, (yyvsp[(5) - (6)].etree), (yyvsp[(3) - (6)].etree)); }
+    { (yyval.etree) = exp_binop (DATA_SEGMENT_RELRO_END, (yyvsp[(5) - (6)].etree), (yyvsp[(3) - (6)].etree)); ;}
     break;
 
   case 244:
+
+/* Line 1455 of yacc.c  */
 #line 878 "ldgram.y"
-    { (yyval.etree) = exp_unop (DATA_SEGMENT_END, (yyvsp[(3) - (4)].etree)); }
+    { (yyval.etree) = exp_unop (DATA_SEGMENT_END, (yyvsp[(3) - (4)].etree)); ;}
     break;
 
   case 245:
+
+/* Line 1455 of yacc.c  */
 #line 880 "ldgram.y"
     { /* The operands to the expression node are
 			     placed in the opposite order from the way
@@ -3612,290 +3879,410 @@
 			     fold_binary.  */
 			  (yyval.etree) = exp_binop (SEGMENT_START,
 					  (yyvsp[(5) - (6)].etree),
-					  exp_nameop (NAME, (yyvsp[(3) - (6)].name))); }
+					  exp_nameop (NAME, (yyvsp[(3) - (6)].name))); ;}
     break;
 
   case 246:
+
+/* Line 1455 of yacc.c  */
 #line 889 "ldgram.y"
-    { (yyval.etree) = exp_unop (ALIGN_K,(yyvsp[(3) - (4)].etree)); }
+    { (yyval.etree) = exp_unop (ALIGN_K,(yyvsp[(3) - (4)].etree)); ;}
     break;
 
   case 247:
+
+/* Line 1455 of yacc.c  */
 #line 891 "ldgram.y"
-    { (yyval.etree) = exp_nameop (NAME,(yyvsp[(1) - (1)].name)); }
+    { (yyval.etree) = exp_nameop (NAME,(yyvsp[(1) - (1)].name)); ;}
     break;
 
   case 248:
+
+/* Line 1455 of yacc.c  */
 #line 893 "ldgram.y"
-    { (yyval.etree) = exp_binop (MAX_K, (yyvsp[(3) - (6)].etree), (yyvsp[(5) - (6)].etree) ); }
+    { (yyval.etree) = exp_binop (MAX_K, (yyvsp[(3) - (6)].etree), (yyvsp[(5) - (6)].etree) ); ;}
     break;
 
   case 249:
+
+/* Line 1455 of yacc.c  */
 #line 895 "ldgram.y"
-    { (yyval.etree) = exp_binop (MIN_K, (yyvsp[(3) - (6)].etree), (yyvsp[(5) - (6)].etree) ); }
+    { (yyval.etree) = exp_binop (MIN_K, (yyvsp[(3) - (6)].etree), (yyvsp[(5) - (6)].etree) ); ;}
     break;
 
   case 250:
+
+/* Line 1455 of yacc.c  */
 #line 897 "ldgram.y"
-    { (yyval.etree) = exp_assert ((yyvsp[(3) - (6)].etree), (yyvsp[(5) - (6)].name)); }
+    { (yyval.etree) = exp_unop (CEILP2, (yyvsp[(3) - (4)].etree)); ;}
     break;
 
   case 251:
+
+/* Line 1455 of yacc.c  */
 #line 899 "ldgram.y"
-    { (yyval.etree) = exp_nameop (ORIGIN, (yyvsp[(3) - (4)].name)); }
+    { (yyval.etree) = exp_unop (NACL_MASK, (yyvsp[(3) - (4)].etree)); ;}
     break;
 
   case 252:
+
+/* Line 1455 of yacc.c  */
 #line 901 "ldgram.y"
-    { (yyval.etree) = exp_nameop (LENGTH, (yyvsp[(3) - (4)].name)); }
+    { (yyval.etree) = exp_assert ((yyvsp[(3) - (6)].etree), (yyvsp[(5) - (6)].name)); ;}
     break;
 
   case 253:
-#line 906 "ldgram.y"
-    { (yyval.name) = (yyvsp[(3) - (3)].name); }
+
+/* Line 1455 of yacc.c  */
+#line 903 "ldgram.y"
+    { (yyval.etree) = exp_nameop (ORIGIN, (yyvsp[(3) - (4)].name)); ;}
     break;
 
   case 254:
-#line 907 "ldgram.y"
-    { (yyval.name) = 0; }
+
+/* Line 1455 of yacc.c  */
+#line 905 "ldgram.y"
+    { (yyval.etree) = exp_nameop (LENGTH, (yyvsp[(3) - (4)].name)); ;}
     break;
 
   case 255:
-#line 911 "ldgram.y"
-    { (yyval.etree) = (yyvsp[(3) - (4)].etree); }
+
+/* Line 1455 of yacc.c  */
+#line 910 "ldgram.y"
+    { (yyval.name) = (yyvsp[(3) - (3)].name); ;}
     break;
 
   case 256:
-#line 912 "ldgram.y"
-    { (yyval.etree) = 0; }
+
+/* Line 1455 of yacc.c  */
+#line 911 "ldgram.y"
+    { (yyval.name) = 0; ;}
     break;
 
   case 257:
-#line 916 "ldgram.y"
-    { (yyval.etree) = (yyvsp[(3) - (4)].etree); }
+
+/* Line 1455 of yacc.c  */
+#line 915 "ldgram.y"
+    { (yyval.etree) = (yyvsp[(3) - (4)].etree); ;}
     break;
 
   case 258:
-#line 917 "ldgram.y"
-    { (yyval.etree) = 0; }
+
+/* Line 1455 of yacc.c  */
+#line 916 "ldgram.y"
+    { (yyval.etree) = 0; ;}
     break;
 
   case 259:
-#line 921 "ldgram.y"
-    { (yyval.etree) = (yyvsp[(3) - (4)].etree); }
+
+/* Line 1455 of yacc.c  */
+#line 920 "ldgram.y"
+    { (yyval.etree) = (yyvsp[(3) - (4)].etree); ;}
     break;
 
   case 260:
-#line 922 "ldgram.y"
-    { (yyval.etree) = 0; }
+
+/* Line 1455 of yacc.c  */
+#line 921 "ldgram.y"
+    { (yyval.etree) = 0; ;}
     break;
 
   case 261:
-#line 926 "ldgram.y"
-    { (yyval.token) = ONLY_IF_RO; }
+
+/* Line 1455 of yacc.c  */
+#line 925 "ldgram.y"
+    { (yyval.etree) = (yyvsp[(3) - (4)].etree); ;}
     break;
 
   case 262:
-#line 927 "ldgram.y"
-    { (yyval.token) = ONLY_IF_RW; }
+
+/* Line 1455 of yacc.c  */
+#line 926 "ldgram.y"
+    { (yyval.etree) = 0; ;}
     break;
 
   case 263:
-#line 928 "ldgram.y"
-    { (yyval.token) = SPECIAL; }
+
+/* Line 1455 of yacc.c  */
+#line 930 "ldgram.y"
+    { (yyval.token) = ONLY_IF_RO; ;}
     break;
 
   case 264:
-#line 929 "ldgram.y"
-    { (yyval.token) = 0; }
+
+/* Line 1455 of yacc.c  */
+#line 931 "ldgram.y"
+    { (yyval.token) = ONLY_IF_RW; ;}
     break;
 
   case 265:
+
+/* Line 1455 of yacc.c  */
 #line 932 "ldgram.y"
-    { ldlex_expression(); }
+    { (yyval.token) = SPECIAL; ;}
     break;
 
   case 266:
-#line 936 "ldgram.y"
-    { ldlex_popstate (); ldlex_script (); }
+
+/* Line 1455 of yacc.c  */
+#line 933 "ldgram.y"
+    { (yyval.token) = 0; ;}
     break;
 
   case 267:
-#line 939 "ldgram.y"
-    {
-			  lang_enter_output_section_statement((yyvsp[(1) - (9)].name), (yyvsp[(3) - (9)].etree),
-							      sectype,
-							      (yyvsp[(5) - (9)].etree), (yyvsp[(6) - (9)].etree), (yyvsp[(4) - (9)].etree), (yyvsp[(8) - (9)].token));
-			}
+
+/* Line 1455 of yacc.c  */
+#line 936 "ldgram.y"
+    { ldlex_expression(); ;}
     break;
 
   case 268:
-#line 945 "ldgram.y"
-    { ldlex_popstate (); ldlex_expression (); }
+
+/* Line 1455 of yacc.c  */
+#line 940 "ldgram.y"
+    { ldlex_popstate (); ldlex_script (); ;}
     break;
 
   case 269:
-#line 947 "ldgram.y"
+
+/* Line 1455 of yacc.c  */
+#line 943 "ldgram.y"
     {
-		  ldlex_popstate ();
-		  lang_leave_output_section_statement ((yyvsp[(17) - (17)].fill), (yyvsp[(14) - (17)].name), (yyvsp[(16) - (17)].section_phdr), (yyvsp[(15) - (17)].name));
-		}
+			  lang_enter_output_section_statement((yyvsp[(1) - (9)].name), (yyvsp[(3) - (9)].etree),
+							      sectype,
+							      (yyvsp[(5) - (9)].etree), (yyvsp[(6) - (9)].etree), (yyvsp[(4) - (9)].etree), (yyvsp[(8) - (9)].token));
+			;}
     break;
 
   case 270:
-#line 952 "ldgram.y"
-    {}
+
+/* Line 1455 of yacc.c  */
+#line 949 "ldgram.y"
+    { ldlex_popstate (); ldlex_expression (); ;}
     break;
 
   case 271:
-#line 954 "ldgram.y"
-    { ldlex_expression (); }
+
+/* Line 1455 of yacc.c  */
+#line 951 "ldgram.y"
+    {
+		  ldlex_popstate ();
+		  lang_leave_output_section_statement ((yyvsp[(17) - (17)].fill), (yyvsp[(14) - (17)].name), (yyvsp[(16) - (17)].section_phdr), (yyvsp[(15) - (17)].name));
+		;}
     break;
 
   case 272:
+
+/* Line 1455 of yacc.c  */
 #line 956 "ldgram.y"
-    { ldlex_popstate (); ldlex_script (); }
+    {;}
     break;
 
   case 273:
+
+/* Line 1455 of yacc.c  */
 #line 958 "ldgram.y"
-    {
-			  lang_enter_overlay ((yyvsp[(3) - (8)].etree), (yyvsp[(6) - (8)].etree));
-			}
+    { ldlex_expression (); ;}
     break;
 
   case 274:
-#line 963 "ldgram.y"
-    { ldlex_popstate (); ldlex_expression (); }
+
+/* Line 1455 of yacc.c  */
+#line 960 "ldgram.y"
+    { ldlex_popstate (); ldlex_script (); ;}
     break;
 
   case 275:
-#line 965 "ldgram.y"
+
+/* Line 1455 of yacc.c  */
+#line 962 "ldgram.y"
+    {
+			  lang_enter_overlay ((yyvsp[(3) - (8)].etree), (yyvsp[(6) - (8)].etree));
+			;}
+    break;
+
+  case 276:
+
+/* Line 1455 of yacc.c  */
+#line 967 "ldgram.y"
+    { ldlex_popstate (); ldlex_expression (); ;}
+    break;
+
+  case 277:
+
+/* Line 1455 of yacc.c  */
+#line 969 "ldgram.y"
     {
 			  ldlex_popstate ();
 			  lang_leave_overlay ((yyvsp[(5) - (16)].etree), (int) (yyvsp[(4) - (16)].integer),
 					      (yyvsp[(16) - (16)].fill), (yyvsp[(13) - (16)].name), (yyvsp[(15) - (16)].section_phdr), (yyvsp[(14) - (16)].name));
-			}
+			;}
     break;
 
-  case 277:
-#line 975 "ldgram.y"
-    { ldlex_expression (); }
-    break;
+  case 279:
 
-  case 278:
-#line 977 "ldgram.y"
-    {
-		  ldlex_popstate ();
-		  lang_add_assignment (exp_assop ('=', ".", (yyvsp[(3) - (3)].etree)));
-		}
+/* Line 1455 of yacc.c  */
+#line 979 "ldgram.y"
+    { ldlex_expression (); ;}
     break;
 
   case 280:
-#line 983 "ldgram.y"
-    { ldlex_script (); ldfile_open_command_file((yyvsp[(2) - (2)].name)); }
-    break;
 
-  case 281:
-#line 985 "ldgram.y"
-    { ldlex_popstate (); }
+/* Line 1455 of yacc.c  */
+#line 981 "ldgram.y"
+    {
+		  ldlex_popstate ();
+		  lang_add_assignment (exp_assop ('=', ".", (yyvsp[(3) - (3)].etree)));
+		;}
     break;
 
   case 282:
-#line 989 "ldgram.y"
-    { sectype = noload_section; }
+
+/* Line 1455 of yacc.c  */
+#line 987 "ldgram.y"
+    { ldlex_script (); ldfile_open_command_file((yyvsp[(2) - (2)].name)); ;}
     break;
 
   case 283:
-#line 990 "ldgram.y"
-    { sectype = noalloc_section; }
+
+/* Line 1455 of yacc.c  */
+#line 989 "ldgram.y"
+    { ldlex_popstate (); ;}
     break;
 
   case 284:
-#line 991 "ldgram.y"
-    { sectype = noalloc_section; }
+
+/* Line 1455 of yacc.c  */
+#line 993 "ldgram.y"
+    { sectype = noload_section; ;}
     break;
 
   case 285:
-#line 992 "ldgram.y"
-    { sectype = noalloc_section; }
+
+/* Line 1455 of yacc.c  */
+#line 994 "ldgram.y"
+    { sectype = noalloc_section; ;}
     break;
 
   case 286:
-#line 993 "ldgram.y"
-    { sectype = noalloc_section; }
+
+/* Line 1455 of yacc.c  */
+#line 995 "ldgram.y"
+    { sectype = noalloc_section; ;}
     break;
 
-  case 288:
-#line 998 "ldgram.y"
-    { sectype = normal_section; }
+  case 287:
+
+/* Line 1455 of yacc.c  */
+#line 996 "ldgram.y"
+    { sectype = noalloc_section; ;}
     break;
 
-  case 289:
-#line 999 "ldgram.y"
-    { sectype = normal_section; }
+  case 288:
+
+/* Line 1455 of yacc.c  */
+#line 997 "ldgram.y"
+    { sectype = noalloc_section; ;}
     break;
 
   case 290:
-#line 1003 "ldgram.y"
-    { (yyval.etree) = (yyvsp[(1) - (3)].etree); }
+
+/* Line 1455 of yacc.c  */
+#line 1002 "ldgram.y"
+    { sectype = normal_section; ;}
     break;
 
   case 291:
-#line 1004 "ldgram.y"
-    { (yyval.etree) = (etree_type *)NULL;  }
+
+/* Line 1455 of yacc.c  */
+#line 1003 "ldgram.y"
+    { sectype = normal_section; ;}
     break;
 
   case 292:
-#line 1009 "ldgram.y"
-    { (yyval.etree) = (yyvsp[(3) - (6)].etree); }
+
+/* Line 1455 of yacc.c  */
+#line 1007 "ldgram.y"
+    { (yyval.etree) = (yyvsp[(1) - (3)].etree); ;}
     break;
 
   case 293:
-#line 1011 "ldgram.y"
-    { (yyval.etree) = (yyvsp[(3) - (10)].etree); }
+
+/* Line 1455 of yacc.c  */
+#line 1008 "ldgram.y"
+    { (yyval.etree) = (etree_type *)NULL;  ;}
     break;
 
   case 294:
-#line 1015 "ldgram.y"
-    { (yyval.etree) = (yyvsp[(1) - (2)].etree); }
+
+/* Line 1455 of yacc.c  */
+#line 1013 "ldgram.y"
+    { (yyval.etree) = (yyvsp[(3) - (6)].etree); ;}
     break;
 
   case 295:
-#line 1016 "ldgram.y"
-    { (yyval.etree) = (etree_type *) NULL;  }
+
+/* Line 1455 of yacc.c  */
+#line 1015 "ldgram.y"
+    { (yyval.etree) = (yyvsp[(3) - (10)].etree); ;}
     break;
 
   case 296:
-#line 1021 "ldgram.y"
-    { (yyval.integer) = 0; }
+
+/* Line 1455 of yacc.c  */
+#line 1019 "ldgram.y"
+    { (yyval.etree) = (yyvsp[(1) - (2)].etree); ;}
     break;
 
   case 297:
-#line 1023 "ldgram.y"
-    { (yyval.integer) = 1; }
+
+/* Line 1455 of yacc.c  */
+#line 1020 "ldgram.y"
+    { (yyval.etree) = (etree_type *) NULL;  ;}
     break;
 
   case 298:
-#line 1028 "ldgram.y"
-    { (yyval.name) = (yyvsp[(2) - (2)].name); }
+
+/* Line 1455 of yacc.c  */
+#line 1025 "ldgram.y"
+    { (yyval.integer) = 0; ;}
     break;
 
   case 299:
-#line 1029 "ldgram.y"
-    { (yyval.name) = DEFAULT_MEMORY_REGION; }
+
+/* Line 1455 of yacc.c  */
+#line 1027 "ldgram.y"
+    { (yyval.integer) = 1; ;}
     break;
 
   case 300:
-#line 1034 "ldgram.y"
-    {
-		  (yyval.section_phdr) = NULL;
-		}
+
+/* Line 1455 of yacc.c  */
+#line 1032 "ldgram.y"
+    { (yyval.name) = (yyvsp[(2) - (2)].name); ;}
     break;
 
   case 301:
+
+/* Line 1455 of yacc.c  */
+#line 1033 "ldgram.y"
+    { (yyval.name) = DEFAULT_MEMORY_REGION; ;}
+    break;
+
+  case 302:
+
+/* Line 1455 of yacc.c  */
 #line 1038 "ldgram.y"
     {
+		  (yyval.section_phdr) = NULL;
+		;}
+    break;
+
+  case 303:
+
+/* Line 1455 of yacc.c  */
+#line 1042 "ldgram.y"
+    {
 		  struct lang_output_section_phdr_list *n;
 
 		  n = ((struct lang_output_section_phdr_list *)
@@ -3904,50 +4291,64 @@
 		  n->used = FALSE;
 		  n->next = (yyvsp[(1) - (3)].section_phdr);
 		  (yyval.section_phdr) = n;
-		}
+		;}
     break;
 
-  case 303:
-#line 1054 "ldgram.y"
+  case 305:
+
+/* Line 1455 of yacc.c  */
+#line 1058 "ldgram.y"
     {
 			  ldlex_script ();
 			  lang_enter_overlay_section ((yyvsp[(2) - (2)].name));
-			}
+			;}
     break;
 
-  case 304:
-#line 1059 "ldgram.y"
-    { ldlex_popstate (); ldlex_expression (); }
+  case 306:
+
+/* Line 1455 of yacc.c  */
+#line 1063 "ldgram.y"
+    { ldlex_popstate (); ldlex_expression (); ;}
     break;
 
-  case 305:
-#line 1061 "ldgram.y"
+  case 307:
+
+/* Line 1455 of yacc.c  */
+#line 1065 "ldgram.y"
     {
 			  ldlex_popstate ();
 			  lang_leave_overlay_section ((yyvsp[(9) - (9)].fill), (yyvsp[(8) - (9)].section_phdr));
-			}
+			;}
     break;
 
-  case 310:
-#line 1078 "ldgram.y"
-    { ldlex_expression (); }
+  case 312:
+
+/* Line 1455 of yacc.c  */
+#line 1082 "ldgram.y"
+    { ldlex_expression (); ;}
     break;
 
-  case 311:
-#line 1079 "ldgram.y"
-    { ldlex_popstate (); }
+  case 313:
+
+/* Line 1455 of yacc.c  */
+#line 1083 "ldgram.y"
+    { ldlex_popstate (); ;}
     break;
 
-  case 312:
-#line 1081 "ldgram.y"
+  case 314:
+
+/* Line 1455 of yacc.c  */
+#line 1085 "ldgram.y"
     {
 		  lang_new_phdr ((yyvsp[(1) - (6)].name), (yyvsp[(3) - (6)].etree), (yyvsp[(4) - (6)].phdr).filehdr, (yyvsp[(4) - (6)].phdr).phdrs, (yyvsp[(4) - (6)].phdr).at,
 				 (yyvsp[(4) - (6)].phdr).flags);
-		}
+		;}
     break;
 
-  case 313:
-#line 1089 "ldgram.y"
+  case 315:
+
+/* Line 1455 of yacc.c  */
+#line 1093 "ldgram.y"
     {
 		  (yyval.etree) = (yyvsp[(1) - (1)].etree);
 
@@ -3987,18 +4388,22 @@
 			    }
 			}
 		    }
-		}
+		;}
     break;
 
-  case 314:
-#line 1133 "ldgram.y"
+  case 316:
+
+/* Line 1455 of yacc.c  */
+#line 1137 "ldgram.y"
     {
 		  memset (&(yyval.phdr), 0, sizeof (struct phdr_info));
-		}
+		;}
     break;
 
-  case 315:
-#line 1137 "ldgram.y"
+  case 317:
+
+/* Line 1455 of yacc.c  */
+#line 1141 "ldgram.y"
     {
 		  (yyval.phdr) = (yyvsp[(3) - (3)].phdr);
 		  if (strcmp ((yyvsp[(1) - (3)].name), "FILEHDR") == 0 && (yyvsp[(2) - (3)].etree) == NULL)
@@ -4009,262 +4414,331 @@
 		    (yyval.phdr).flags = (yyvsp[(2) - (3)].etree);
 		  else
 		    einfo (_("%X%P:%S: PHDRS syntax error at `%s'\n"), (yyvsp[(1) - (3)].name));
-		}
+		;}
     break;
 
-  case 316:
-#line 1149 "ldgram.y"
+  case 318:
+
+/* Line 1455 of yacc.c  */
+#line 1153 "ldgram.y"
     {
 		  (yyval.phdr) = (yyvsp[(5) - (5)].phdr);
 		  (yyval.phdr).at = (yyvsp[(3) - (5)].etree);
-		}
+		;}
     break;
 
-  case 317:
-#line 1157 "ldgram.y"
+  case 319:
+
+/* Line 1455 of yacc.c  */
+#line 1161 "ldgram.y"
     {
 		  (yyval.etree) = NULL;
-		}
+		;}
     break;
 
-  case 318:
-#line 1161 "ldgram.y"
+  case 320:
+
+/* Line 1455 of yacc.c  */
+#line 1165 "ldgram.y"
     {
 		  (yyval.etree) = (yyvsp[(2) - (3)].etree);
-		}
+		;}
     break;
 
-  case 319:
-#line 1167 "ldgram.y"
+  case 321:
+
+/* Line 1455 of yacc.c  */
+#line 1171 "ldgram.y"
     {
 		  ldlex_version_file ();
 		  PUSH_ERROR (_("dynamic list"));
-		}
+		;}
     break;
 
-  case 320:
-#line 1172 "ldgram.y"
+  case 322:
+
+/* Line 1455 of yacc.c  */
+#line 1176 "ldgram.y"
     {
 		  ldlex_popstate ();
 		  POP_ERROR ();
-		}
+		;}
     break;
 
-  case 324:
-#line 1189 "ldgram.y"
+  case 326:
+
+/* Line 1455 of yacc.c  */
+#line 1193 "ldgram.y"
     {
 		  lang_append_dynamic_list ((yyvsp[(1) - (2)].versyms));
-		}
+		;}
     break;
 
-  case 325:
-#line 1197 "ldgram.y"
+  case 327:
+
+/* Line 1455 of yacc.c  */
+#line 1201 "ldgram.y"
     {
 		  ldlex_version_file ();
 		  PUSH_ERROR (_("VERSION script"));
-		}
+		;}
     break;
 
-  case 326:
-#line 1202 "ldgram.y"
+  case 328:
+
+/* Line 1455 of yacc.c  */
+#line 1206 "ldgram.y"
     {
 		  ldlex_popstate ();
 		  POP_ERROR ();
-		}
+		;}
     break;
 
-  case 327:
-#line 1211 "ldgram.y"
+  case 329:
+
+/* Line 1455 of yacc.c  */
+#line 1215 "ldgram.y"
     {
 		  ldlex_version_script ();
-		}
+		;}
     break;
 
-  case 328:
-#line 1215 "ldgram.y"
+  case 330:
+
+/* Line 1455 of yacc.c  */
+#line 1219 "ldgram.y"
     {
 		  ldlex_popstate ();
-		}
+		;}
     break;
 
-  case 331:
-#line 1227 "ldgram.y"
+  case 333:
+
+/* Line 1455 of yacc.c  */
+#line 1231 "ldgram.y"
     {
 		  lang_register_vers_node (NULL, (yyvsp[(2) - (4)].versnode), NULL);
-		}
+		;}
     break;
 
-  case 332:
-#line 1231 "ldgram.y"
+  case 334:
+
+/* Line 1455 of yacc.c  */
+#line 1235 "ldgram.y"
     {
 		  lang_register_vers_node ((yyvsp[(1) - (5)].name), (yyvsp[(3) - (5)].versnode), NULL);
-		}
+		;}
     break;
 
-  case 333:
-#line 1235 "ldgram.y"
+  case 335:
+
+/* Line 1455 of yacc.c  */
+#line 1239 "ldgram.y"
     {
 		  lang_register_vers_node ((yyvsp[(1) - (6)].name), (yyvsp[(3) - (6)].versnode), (yyvsp[(5) - (6)].deflist));
-		}
+		;}
     break;
 
-  case 334:
-#line 1242 "ldgram.y"
+  case 336:
+
+/* Line 1455 of yacc.c  */
+#line 1246 "ldgram.y"
     {
 		  (yyval.deflist) = lang_add_vers_depend (NULL, (yyvsp[(1) - (1)].name));
-		}
+		;}
     break;
 
-  case 335:
-#line 1246 "ldgram.y"
+  case 337:
+
+/* Line 1455 of yacc.c  */
+#line 1250 "ldgram.y"
     {
 		  (yyval.deflist) = lang_add_vers_depend ((yyvsp[(1) - (2)].deflist), (yyvsp[(2) - (2)].name));
-		}
+		;}
     break;
 
-  case 336:
-#line 1253 "ldgram.y"
+  case 338:
+
+/* Line 1455 of yacc.c  */
+#line 1257 "ldgram.y"
     {
 		  (yyval.versnode) = lang_new_vers_node (NULL, NULL);
-		}
+		;}
     break;
 
-  case 337:
-#line 1257 "ldgram.y"
+  case 339:
+
+/* Line 1455 of yacc.c  */
+#line 1261 "ldgram.y"
     {
 		  (yyval.versnode) = lang_new_vers_node ((yyvsp[(1) - (2)].versyms), NULL);
-		}
+		;}
     break;
 
-  case 338:
-#line 1261 "ldgram.y"
+  case 340:
+
+/* Line 1455 of yacc.c  */
+#line 1265 "ldgram.y"
     {
 		  (yyval.versnode) = lang_new_vers_node ((yyvsp[(3) - (4)].versyms), NULL);
-		}
+		;}
     break;
 
-  case 339:
-#line 1265 "ldgram.y"
+  case 341:
+
+/* Line 1455 of yacc.c  */
+#line 1269 "ldgram.y"
     {
 		  (yyval.versnode) = lang_new_vers_node (NULL, (yyvsp[(3) - (4)].versyms));
-		}
+		;}
     break;
 
-  case 340:
-#line 1269 "ldgram.y"
+  case 342:
+
+/* Line 1455 of yacc.c  */
+#line 1273 "ldgram.y"
     {
 		  (yyval.versnode) = lang_new_vers_node ((yyvsp[(3) - (8)].versyms), (yyvsp[(7) - (8)].versyms));
-		}
+		;}
     break;
 
-  case 341:
-#line 1276 "ldgram.y"
+  case 343:
+
+/* Line 1455 of yacc.c  */
+#line 1280 "ldgram.y"
     {
 		  (yyval.versyms) = lang_new_vers_pattern (NULL, (yyvsp[(1) - (1)].name), ldgram_vers_current_lang, FALSE);
-		}
+		;}
     break;
 
-  case 342:
-#line 1280 "ldgram.y"
+  case 344:
+
+/* Line 1455 of yacc.c  */
+#line 1284 "ldgram.y"
     {
 		  (yyval.versyms) = lang_new_vers_pattern (NULL, (yyvsp[(1) - (1)].name), ldgram_vers_current_lang, TRUE);
-		}
+		;}
     break;
 
-  case 343:
-#line 1284 "ldgram.y"
+  case 345:
+
+/* Line 1455 of yacc.c  */
+#line 1288 "ldgram.y"
     {
 		  (yyval.versyms) = lang_new_vers_pattern ((yyvsp[(1) - (3)].versyms), (yyvsp[(3) - (3)].name), ldgram_vers_current_lang, FALSE);
-		}
+		;}
     break;
 
-  case 344:
-#line 1288 "ldgram.y"
+  case 346:
+
+/* Line 1455 of yacc.c  */
+#line 1292 "ldgram.y"
     {
 		  (yyval.versyms) = lang_new_vers_pattern ((yyvsp[(1) - (3)].versyms), (yyvsp[(3) - (3)].name), ldgram_vers_current_lang, TRUE);
-		}
+		;}
     break;
 
-  case 345:
-#line 1292 "ldgram.y"
+  case 347:
+
+/* Line 1455 of yacc.c  */
+#line 1296 "ldgram.y"
     {
 			  (yyval.name) = ldgram_vers_current_lang;
 			  ldgram_vers_current_lang = (yyvsp[(4) - (5)].name);
-			}
+			;}
     break;
 
-  case 346:
-#line 1297 "ldgram.y"
+  case 348:
+
+/* Line 1455 of yacc.c  */
+#line 1301 "ldgram.y"
     {
 			  struct bfd_elf_version_expr *pat;
 			  for (pat = (yyvsp[(7) - (9)].versyms); pat->next != NULL; pat = pat->next);
 			  pat->next = (yyvsp[(1) - (9)].versyms);
 			  (yyval.versyms) = (yyvsp[(7) - (9)].versyms);
 			  ldgram_vers_current_lang = (yyvsp[(6) - (9)].name);
-			}
+			;}
     break;
 
-  case 347:
-#line 1305 "ldgram.y"
+  case 349:
+
+/* Line 1455 of yacc.c  */
+#line 1309 "ldgram.y"
     {
 			  (yyval.name) = ldgram_vers_current_lang;
 			  ldgram_vers_current_lang = (yyvsp[(2) - (3)].name);
-			}
+			;}
     break;
 
-  case 348:
-#line 1310 "ldgram.y"
+  case 350:
+
+/* Line 1455 of yacc.c  */
+#line 1314 "ldgram.y"
     {
 			  (yyval.versyms) = (yyvsp[(5) - (7)].versyms);
 			  ldgram_vers_current_lang = (yyvsp[(4) - (7)].name);
-			}
+			;}
     break;
 
-  case 349:
-#line 1315 "ldgram.y"
+  case 351:
+
+/* Line 1455 of yacc.c  */
+#line 1319 "ldgram.y"
     {
 		  (yyval.versyms) = lang_new_vers_pattern (NULL, "global", ldgram_vers_current_lang, FALSE);
-		}
+		;}
     break;
 
-  case 350:
-#line 1319 "ldgram.y"
+  case 352:
+
+/* Line 1455 of yacc.c  */
+#line 1323 "ldgram.y"
     {
 		  (yyval.versyms) = lang_new_vers_pattern ((yyvsp[(1) - (3)].versyms), "global", ldgram_vers_current_lang, FALSE);
-		}
+		;}
     break;
 
-  case 351:
-#line 1323 "ldgram.y"
+  case 353:
+
+/* Line 1455 of yacc.c  */
+#line 1327 "ldgram.y"
     {
 		  (yyval.versyms) = lang_new_vers_pattern (NULL, "local", ldgram_vers_current_lang, FALSE);
-		}
+		;}
     break;
 
-  case 352:
-#line 1327 "ldgram.y"
+  case 354:
+
+/* Line 1455 of yacc.c  */
+#line 1331 "ldgram.y"
     {
 		  (yyval.versyms) = lang_new_vers_pattern ((yyvsp[(1) - (3)].versyms), "local", ldgram_vers_current_lang, FALSE);
-		}
+		;}
     break;
 
-  case 353:
-#line 1331 "ldgram.y"
+  case 355:
+
+/* Line 1455 of yacc.c  */
+#line 1335 "ldgram.y"
     {
 		  (yyval.versyms) = lang_new_vers_pattern (NULL, "extern", ldgram_vers_current_lang, FALSE);
-		}
+		;}
     break;
 
-  case 354:
-#line 1335 "ldgram.y"
+  case 356:
+
+/* Line 1455 of yacc.c  */
+#line 1339 "ldgram.y"
     {
 		  (yyval.versyms) = lang_new_vers_pattern ((yyvsp[(1) - (3)].versyms), "extern", ldgram_vers_current_lang, FALSE);
-		}
+		;}
     break;
 
 
-/* Line 1267 of yacc.c.  */
-#line 4268 "ldgram.c"
+
+/* Line 1455 of yacc.c  */
+#line 4742 "ldgram.tab.c"
       default: break;
     }
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
@@ -4275,7 +4749,6 @@
 
   *++yyvsp = yyval;
 
-
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -4340,7 +4813,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse look-ahead token after an
+      /* If just tried and failed to reuse lookahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -4357,7 +4830,7 @@
 	}
     }
 
-  /* Else will try to reuse look-ahead token after shifting the error
+  /* Else will try to reuse lookahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -4414,9 +4887,6 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
-  if (yyn == YYFINAL)
-    YYACCEPT;
-
   *++yyvsp = yylval;
 
 
@@ -4441,7 +4911,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#ifndef yyoverflow
+#if !defined(yyoverflow) || YYERROR_VERBOSE
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -4452,7 +4922,7 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEOF && yychar != YYEMPTY)
+  if (yychar != YYEMPTY)
      yydestruct ("Cleanup: discarding lookahead",
 		 yytoken, &yylval);
   /* Do not reclaim the symbols of the rule which action triggered
@@ -4478,7 +4948,9 @@
 }
 
 
-#line 1345 "ldgram.y"
+
+/* Line 1675 of yacc.c  */
+#line 1349 "ldgram.y"
 
 void
 yyerror(arg)
diff -uNr binutils-2.20.orig/ld/ldgram.h binutils-2.20/ld/ldgram.h
--- binutils-2.20.orig/ld/ldgram.h	2009-10-16 13:52:15.000000000 +0200
+++ binutils-2.20/ld/ldgram.h	2009-11-24 13:03:03.000000000 +0100
@@ -1,24 +1,23 @@
-/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Skeleton interface for Bison's Yacc-like parsers in C
+/* A Bison parser, made by GNU Bison 2.4.1.  */
 
-   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+/* Skeleton interface for Bison's Yacc-like parsers in C
+   
+      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
    Free Software Foundation, Inc.
-
-   This program is free software; you can redistribute it and/or modify
+   
+   This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation; either version 2, or (at your option)
-   any later version.
-
+   the Free Software Foundation, either version 3 of the License, or
+   (at your option) any later version.
+   
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-
+   
    You should have received a copy of the GNU General Public License
-   along with this program; if not, write to the Free Software
-   Foundation, Inc., 51 Franklin Street, Fifth Floor,
-   Boston, MA 02110-1301, USA.  */
+   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -29,10 +28,11 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-
+   
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
+
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -104,194 +104,76 @@
      LOADADDR = 320,
      MAX_K = 321,
      MIN_K = 322,
-     STARTUP = 323,
-     HLL = 324,
-     SYSLIB = 325,
-     FLOAT = 326,
-     NOFLOAT = 327,
-     NOCROSSREFS = 328,
-     ORIGIN = 329,
-     FILL = 330,
-     LENGTH = 331,
-     CREATE_OBJECT_SYMBOLS = 332,
-     INPUT = 333,
-     GROUP = 334,
-     OUTPUT = 335,
-     CONSTRUCTORS = 336,
-     ALIGNMOD = 337,
-     AT = 338,
-     SUBALIGN = 339,
-     PROVIDE = 340,
-     PROVIDE_HIDDEN = 341,
-     AS_NEEDED = 342,
-     CHIP = 343,
-     LIST = 344,
-     SECT = 345,
-     ABSOLUTE = 346,
-     LOAD = 347,
-     NEWLINE = 348,
-     ENDWORD = 349,
-     ORDER = 350,
-     NAMEWORD = 351,
-     ASSERT_K = 352,
-     FORMAT = 353,
-     PUBLIC = 354,
-     DEFSYMEND = 355,
-     BASE = 356,
-     ALIAS = 357,
-     TRUNCATE = 358,
-     REL = 359,
-     INPUT_SCRIPT = 360,
-     INPUT_MRI_SCRIPT = 361,
-     INPUT_DEFSYM = 362,
-     CASE = 363,
-     EXTERN = 364,
-     START = 365,
-     VERS_TAG = 366,
-     VERS_IDENTIFIER = 367,
-     GLOBAL = 368,
-     LOCAL = 369,
-     VERSIONK = 370,
-     INPUT_VERSION_SCRIPT = 371,
-     KEEP = 372,
-     ONLY_IF_RO = 373,
-     ONLY_IF_RW = 374,
-     SPECIAL = 375,
-     EXCLUDE_FILE = 376,
-     CONSTANT = 377,
-     INPUT_DYNAMIC_LIST = 378
+     CEILP2 = 323,
+     NACL_MASK = 324,
+     STARTUP = 325,
+     HLL = 326,
+     SYSLIB = 327,
+     FLOAT = 328,
+     NOFLOAT = 329,
+     NOCROSSREFS = 330,
+     ORIGIN = 331,
+     FILL = 332,
+     LENGTH = 333,
+     CREATE_OBJECT_SYMBOLS = 334,
+     INPUT = 335,
+     GROUP = 336,
+     OUTPUT = 337,
+     CONSTRUCTORS = 338,
+     ALIGNMOD = 339,
+     AT = 340,
+     SUBALIGN = 341,
+     PROVIDE = 342,
+     PROVIDE_HIDDEN = 343,
+     AS_NEEDED = 344,
+     CHIP = 345,
+     LIST = 346,
+     SECT = 347,
+     ABSOLUTE = 348,
+     LOAD = 349,
+     NEWLINE = 350,
+     ENDWORD = 351,
+     ORDER = 352,
+     NAMEWORD = 353,
+     ASSERT_K = 354,
+     FORMAT = 355,
+     PUBLIC = 356,
+     DEFSYMEND = 357,
+     BASE = 358,
+     ALIAS = 359,
+     TRUNCATE = 360,
+     REL = 361,
+     INPUT_SCRIPT = 362,
+     INPUT_MRI_SCRIPT = 363,
+     INPUT_DEFSYM = 364,
+     CASE = 365,
+     EXTERN = 366,
+     START = 367,
+     VERS_TAG = 368,
+     VERS_IDENTIFIER = 369,
+     GLOBAL = 370,
+     LOCAL = 371,
+     VERSIONK = 372,
+     INPUT_VERSION_SCRIPT = 373,
+     KEEP = 374,
+     ONLY_IF_RO = 375,
+     ONLY_IF_RW = 376,
+     SPECIAL = 377,
+     EXCLUDE_FILE = 378,
+     CONSTANT = 379,
+     INPUT_DYNAMIC_LIST = 380
    };
 #endif
-/* Tokens.  */
-#define INT 258
-#define NAME 259
-#define LNAME 260
-#define OREQ 261
-#define ANDEQ 262
-#define RSHIFTEQ 263
-#define LSHIFTEQ 264
-#define DIVEQ 265
-#define MULTEQ 266
-#define MINUSEQ 267
-#define PLUSEQ 268
-#define OROR 269
-#define ANDAND 270
-#define NE 271
-#define EQ 272
-#define GE 273
-#define LE 274
-#define RSHIFT 275
-#define LSHIFT 276
-#define UNARY 277
-#define END 278
-#define ALIGN_K 279
-#define BLOCK 280
-#define BIND 281
-#define QUAD 282
-#define SQUAD 283
-#define LONG 284
-#define SHORT 285
-#define BYTE 286
-#define SECTIONS 287
-#define PHDRS 288
-#define INSERT_K 289
-#define AFTER 290
-#define BEFORE 291
-#define DATA_SEGMENT_ALIGN 292
-#define DATA_SEGMENT_RELRO_END 293
-#define DATA_SEGMENT_END 294
-#define SORT_BY_NAME 295
-#define SORT_BY_ALIGNMENT 296
-#define SIZEOF_HEADERS 297
-#define OUTPUT_FORMAT 298
-#define FORCE_COMMON_ALLOCATION 299
-#define OUTPUT_ARCH 300
-#define INHIBIT_COMMON_ALLOCATION 301
-#define SEGMENT_START 302
-#define INCLUDE 303
-#define MEMORY 304
-#define REGION_ALIAS 305
-#define NOLOAD 306
-#define DSECT 307
-#define COPY 308
-#define INFO 309
-#define OVERLAY 310
-#define DEFINED 311
-#define TARGET_K 312
-#define SEARCH_DIR 313
-#define MAP 314
-#define ENTRY 315
-#define NEXT 316
-#define SIZEOF 317
-#define ALIGNOF 318
-#define ADDR 319
-#define LOADADDR 320
-#define MAX_K 321
-#define MIN_K 322
-#define STARTUP 323
-#define HLL 324
-#define SYSLIB 325
-#define FLOAT 326
-#define NOFLOAT 327
-#define NOCROSSREFS 328
-#define ORIGIN 329
-#define FILL 330
-#define LENGTH 331
-#define CREATE_OBJECT_SYMBOLS 332
-#define INPUT 333
-#define GROUP 334
-#define OUTPUT 335
-#define CONSTRUCTORS 336
-#define ALIGNMOD 337
-#define AT 338
-#define SUBALIGN 339
-#define PROVIDE 340
-#define PROVIDE_HIDDEN 341
-#define AS_NEEDED 342
-#define CHIP 343
-#define LIST 344
-#define SECT 345
-#define ABSOLUTE 346
-#define LOAD 347
-#define NEWLINE 348
-#define ENDWORD 349
-#define ORDER 350
-#define NAMEWORD 351
-#define ASSERT_K 352
-#define FORMAT 353
-#define PUBLIC 354
-#define DEFSYMEND 355
-#define BASE 356
-#define ALIAS 357
-#define TRUNCATE 358
-#define REL 359
-#define INPUT_SCRIPT 360
-#define INPUT_MRI_SCRIPT 361
-#define INPUT_DEFSYM 362
-#define CASE 363
-#define EXTERN 364
-#define START 365
-#define VERS_TAG 366
-#define VERS_IDENTIFIER 367
-#define GLOBAL 368
-#define LOCAL 369
-#define VERSIONK 370
-#define INPUT_VERSION_SCRIPT 371
-#define KEEP 372
-#define ONLY_IF_RO 373
-#define ONLY_IF_RW 374
-#define SPECIAL 375
-#define EXCLUDE_FILE 376
-#define CONSTANT 377
-#define INPUT_DYNAMIC_LIST 378
-
 
 
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-#line 62 "ldgram.y"
 {
+
+/* Line 1676 of yacc.c  */
+#line 62 "ldgram.y"
+
   bfd_vma integer;
   struct big_int
     {
@@ -318,14 +200,17 @@
   struct bfd_elf_version_deps *deflist;
   struct bfd_elf_version_expr *versyms;
   struct bfd_elf_version_tree *versnode;
-}
-/* Line 1529 of yacc.c.  */
-#line 324 "ldgram.h"
-	YYSTYPE;
+
+
+
+/* Line 1676 of yacc.c  */
+#line 208 "ldgram.tab.h"
+} YYSTYPE;
+# define YYSTYPE_IS_TRIVIAL 1
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
-# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 extern YYSTYPE yylval;
 
+
diff -uNr binutils-2.20.orig/ld/ldlex.c binutils-2.20/ld/ldlex.c
--- binutils-2.20.orig/ld/ldlex.c	2009-10-16 13:52:15.000000000 +0200
+++ binutils-2.20/ld/ldlex.c	2009-11-24 13:03:37.000000000 +0100
@@ -1,5 +1,5 @@
 
-#line 3 "ldlex.c"
+#line 3 "lex.yy.c"
 
 #define  YY_INT_ALIGNED short int
 
@@ -152,12 +152,7 @@
 typedef struct yy_buffer_state *YY_BUFFER_STATE;
 #endif
 
-#ifndef YY_TYPEDEF_YY_SIZE_T
-#define YY_TYPEDEF_YY_SIZE_T
-typedef size_t yy_size_t;
-#endif
-
-extern yy_size_t yyleng;
+extern int yyleng;
 
 extern FILE *yyin, *yyout;
 
@@ -183,6 +178,11 @@
 
 #define unput(c) yyunput( c, (yytext_ptr)  )
 
+#ifndef YY_TYPEDEF_YY_SIZE_T
+#define YY_TYPEDEF_YY_SIZE_T
+typedef size_t yy_size_t;
+#endif
+
 #ifndef YY_STRUCT_YY_BUFFER_STATE
 #define YY_STRUCT_YY_BUFFER_STATE
 struct yy_buffer_state
@@ -200,7 +200,7 @@
 	/* Number of characters read into yy_ch_buf, not including EOB
 	 * characters.
 	 */
-	yy_size_t yy_n_chars;
+	int yy_n_chars;
 
 	/* Whether we "own" the buffer - i.e., we know we created it,
 	 * and can realloc() it to grow it, and should free() it to
@@ -270,8 +270,8 @@
 
 /* yy_hold_char holds the character lost when yytext is formed. */
 static char yy_hold_char;
-static yy_size_t yy_n_chars;		/* number of characters read into yy_ch_buf */
-yy_size_t yyleng;
+static int yy_n_chars;		/* number of characters read into yy_ch_buf */
+int yyleng;
 
 /* Points to current character in buffer. */
 static char *yy_c_buf_p = (char *) 0;
@@ -299,7 +299,7 @@
 
 YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );
 YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );
-YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,yy_size_t len  );
+YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,int len  );
 
 void *yyalloc (yy_size_t  );
 void *yyrealloc (void *,yy_size_t  );
@@ -359,8 +359,8 @@
 	*yy_cp = '\0'; \
 	(yy_c_buf_p) = yy_cp;
 
-#define YY_NUM_RULES 190
-#define YY_END_OF_BUFFER 191
+#define YY_NUM_RULES 192
+#define YY_END_OF_BUFFER 193
 /* This struct is not used in this scanner,
    but its presence is necessary. */
 struct yy_trans_info
@@ -368,182 +368,186 @@
 	flex_int32_t yy_verify;
 	flex_int32_t yy_nxt;
 	};
-static yyconst flex_int16_t yy_accept[1591] =
+static yyconst flex_int16_t yy_accept[1617] =
     {   0,
-        0,    0,  170,  170,    0,    0,    0,    0,    0,    0,
-        0,    0,    0,    0,    0,    0,    0,    0,  191,  190,
-      188,  173,  172,   32,  188,  170,   38,   29,   44,   43,
-       34,   35,   28,   36,  170,   37,    8,    8,   45,   46,
-       39,   40,   27,   33,  170,  170,  170,  170,  170,  170,
-      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
-      170,  170,  170,  170,   10,    9,  170,  115,  113,  170,
-       42,   30,   41,   31,  189,  173,   32,  189,  168,   38,
-       29,   44,   43,   34,   35,   28,   36,  168,   37,    8,
-        8,   45,   46,   39,   40,   27,   33,  168,  168,  168,
+        0,    0,  172,  172,    0,    0,    0,    0,    0,    0,
+        0,    0,    0,    0,    0,    0,    0,    0,  193,  192,
+      190,  175,  174,   32,  190,  172,   38,   29,   44,   43,
+       34,   35,   28,   36,  172,   37,    8,    8,   45,   46,
+       39,   40,   27,   33,  172,  172,  172,  172,  172,  172,
+      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
+      172,  172,  172,  172,   10,    9,  172,  117,  115,  172,
+       42,   30,   41,   31,  191,  175,   32,  191,  170,   38,
+       29,   44,   43,   34,   35,   28,   36,  170,   37,    8,
+        8,   45,   46,   39,   40,   27,   33,  170,  170,  170,
 
-      168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
-      168,  168,   10,    9,  168,  168,   42,   30,   41,   31,
-      166,   36,  166,   37,    8,    8,  166,  166,  166,  166,
-      166,  166,  166,  166,  166,  166,  166,  166,  166,  166,
-      166,  166,  166,  166,  166,  166,  166,  115,  113,  166,
-       31,    4,    3,    2,    4,    5,  127,  126,  165,   34,
-       35,   28,   36,  165,   37,    8,    8,   45,   46,   40,
-       33,  165,  165,  165,  165,  165,  165,  165,  165,  165,
-      165,  165,  165,   10,    9,  165,  165,  165,  165,  165,
-      165,  165,  165,  165,  165,  165,   31,  187,  185,  186,
-
-      188,  180,  179,  174,  181,  182,  178,  178,  178,  178,
-      183,  184,  173,   15,    0,  171,  170,    8,   26,   24,
-       22,   20,   21,    1,   23,    8,    8,  170,   18,   17,
-       14,   16,   19,  170,  170,  170,  170,  170,  119,  170,
-      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
-      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
-      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
       170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
-      170,  170,  170,  170,  170,  170,   25,   13,  168,    6,
+      170,  170,   10,    9,  170,  170,   42,   30,   41,   31,
+      168,   36,  168,   37,    8,    8,  168,  168,  168,  168,
+      168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
+      168,  168,  168,  168,  168,  168,  168,  117,  115,  168,
+       31,    4,    3,    2,    4,    5,  129,  128,  167,   34,
+       35,   28,   36,  167,   37,    8,    8,   45,   46,   40,
+       33,  167,  167,  167,  167,  167,  167,  167,  167,  167,
+      167,  167,  167,   10,    9,  167,  167,  167,  167,  167,
+      167,  167,  167,  167,  167,  167,   31,  189,  187,  188,
+
+      190,  182,  181,  176,  183,  184,  180,  180,  180,  180,
+      185,  186,  175,   15,    0,  173,  172,    8,   26,   24,
+       22,   20,   21,    1,   23,    8,    8,  172,   18,   17,
+       14,   16,   19,  172,  172,  172,  172,  172,  121,  172,
+      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
+      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
+      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
+      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
+      172,  172,  172,  172,  172,  172,   25,   13,  170,    6,
        22,   20,   21,    0,    1,   23,    8,    0,    7,    7,
 
-        8,    7,   14,  168,    7,    7,    7,  168,  168,  119,
-        7,  168,  168,    7,  168,  168,  168,    7,  168,  168,
-      168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
-      168,  168,  168,  168,  168,    7,  168,  166,    8,    0,
-       23,    8,    0,  166,  166,  166,  166,  166,  119,  166,
-      166,  166,  166,  166,  166,  166,  166,  166,  166,  166,
-      166,  166,  166,  166,  166,  166,  166,  166,  166,  166,
-      166,  166,  166,  166,  166,  166,  166,  166,  166,  166,
-      166,  166,  166,  166,  166,  166,  166,  166,  166,  166,
-      166,  166,  166,  166,  166,  166,  166,    4,    4,  126,
-
-      126,  165,    6,  128,   22,  129,  165,    7,    7,    7,
-      165,  165,  165,    7,  165,    7,    7,  165,  165,  165,
-      165,  165,  165,  165,  165,    7,  165,  165,  165,    7,
-      165,    7,    7,  165,  165,  165,  165,  165,  165,  165,
-      165,  187,  186,  179,  178,    0,  178,  178,  178,   11,
-       12,  170,  170,  170,  170,  170,  170,  170,  170,  170,
-      170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
-      170,  170,  170,  170,   91,  170,  170,  170,  170,  170,
-      170,  170,  170,  170,   70,  170,  170,  170,  170,  170,
+        8,    7,   14,  170,    7,    7,    7,  170,  170,  121,
+        7,  170,  170,  170,    7,  170,  170,  170,    7,  170,
       170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
+      170,  170,  170,  170,  170,  170,  170,    7,  170,  168,
+        8,    0,   23,    8,    0,  168,  168,  168,  168,  168,
+      121,  168,  168,  168,  168,  168,  168,  168,  168,  168,
+      168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
+      168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
+      168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
+      168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
 
+      168,    4,    4,  128,  128,  167,    6,  130,   22,  131,
+      167,    7,    7,    7,  167,  167,  167,    7,  167,    7,
+        7,  167,  167,  167,  167,  167,  167,  167,  167,    7,
+      167,  167,  167,    7,  167,    7,    7,  167,  167,  167,
+      167,  167,  167,  167,  167,  189,  188,  181,  180,    0,
+      180,  180,  180,   11,   12,  172,  172,  172,  172,  172,
+      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
+      172,  172,  172,  172,  172,  172,  172,  172,   93,  172,
+      172,  172,  172,  172,  172,  172,  172,  172,   72,  172,
+      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
+
+      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
+      172,  172,  172,  172,  172,  172,  118,  116,  172,    8,
+      171,    8,  170,    7,  170,  170,  170,  170,  170,  170,
       170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
-      170,  170,  116,  114,  170,    8,  169,    8,  168,    7,
+      170,  170,   61,   62,  170,  170,  170,  170,  170,  170,
+      170,  170,  170,  170,  170,  170,  170,  170,    8,  169,
       168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
-      168,  168,  168,  168,  168,  168,  168,   61,   62,  168,
       168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
-      168,  168,    8,  167,  166,  166,  166,  166,  166,  166,
-      166,  166,  166,  166,  166,  166,  166,  166,  166,  166,
-      166,  166,  166,  166,  166,  166,  166,   91,  166,  166,
-      166,  166,  166,  166,  166,  166,  166,   70,   61,  166,
-       62,  166,  166,  166,  166,  166,  166,  166,  166,  166,
-
-      166,  166,  166,  166,  166,  166,  166,  166,  166,  166,
-      166,  166,  166,  166,  166,  166,  166,  116,  114,  166,
-        4,    8,  165,  165,  165,  165,  165,  130,  165,  165,
-      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
-      165,  165,  165,  147,  165,  165,  165,  165,  165,  165,
-      165,  165,  165,  165,  178,  178,  178,  170,   58,  170,
-      170,  170,  170,  170,   52,  170,   98,  170,  107,  170,
-      170,  170,  170,  170,  170,  170,   87,  170,  170,  170,
-      170,  108,  170,  170,  170,  123,  170,  170,   96,  170,
-       66,  170,  170,  170,  170,  170,  170,  170,  170,  170,
-
-       94,  170,  170,  170,  170,  170,  170,  104,  170,  170,
-      170,  170,  170,  170,  170,  170,  170,  168,   58,  168,
-      168,  168,   52,  168,  168,  107,  168,  168,  168,  168,
-      168,  168,  108,  123,  168,  168,   66,  168,  168,  168,
-      168,  168,  168,  168,  168,  168,  168,  168,  168,  166,
-       58,  166,  166,  166,  166,  166,   52,  166,   98,  166,
-      107,  166,  166,  166,  166,  166,  166,  166,   87,  166,
-      166,  166,  166,  108,  166,  166,  166,  123,  166,  166,
-       96,  166,   66,  166,  166,  166,  166,  166,  166,  166,
-      166,  166,   94,  166,  166,  166,  166,  166,  166,  104,
-
-      166,  166,  166,  166,  166,  166,  166,  166,  166,  165,
-      165,  165,  134,  142,  133,  165,  165,  144,  137,  140,
-      165,  165,  145,  165,  165,  165,  165,  165,  151,  159,
-      150,  165,  165,  162,  154,  157,  165,  165,  163,  165,
-      165,  178,  178,  178,  170,   85,   54,  170,  170,  170,
-       51,  170,  170,  170,  170,  106,   64,  170,  170,   93,
-      170,   76,  170,  170,   75,  170,  170,  170,  170,  170,
-      170,  170,  170,  170,  170,  170,  118,  170,  170,  170,
-      170,  170,   97,  170,  170,  170,   95,  170,  170,  170,
-      170,  170,  170,  170,  168,   54,  168,  168,   51,  168,
+      168,  168,  168,  168,   93,  168,  168,  168,  168,  168,
+      168,  168,  168,  168,   72,   61,  168,   62,  168,  168,
 
-      168,  168,  106,  168,   76,  168,  168,  168,  168,  168,
       168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
-      166,   85,   54,  166,  166,  166,   51,  166,  166,  166,
-      166,  106,   64,  166,  166,   93,  166,   76,  166,  166,
-       75,  166,  166,  166,  166,  166,  166,  166,  166,  166,
-      166,  166,  118,  166,  166,  166,  166,  166,   97,  166,
-      166,  166,   95,  166,  166,  166,  166,  166,  166,  166,
-      165,  135,  132,  165,  165,  144,  144,  139,  165,  143,
-      165,  165,  152,  149,  165,  165,  162,  162,  156,  165,
-      161,  165,  178,  178,  176,  170,  170,   63,  170,   86,
-
-      170,  170,  170,  170,  170,  170,   65,  170,  170,  170,
-       84,   53,  170,   47,  170,  170,  105,  170,   49,   74,
-      170,  170,  170,  170,  170,  170,   71,  170,  170,  170,
-      170,   92,   72,  170,  170,  170,  168,  168,   63,  168,
-      168,  168,  168,  168,  168,   53,  168,  168,  105,  168,
-       49,  168,  168,  168,   71,  168,  168,  168,  168,  166,
-      166,   63,  166,   86,  166,  166,  166,  166,  166,  166,
-       65,  166,  166,  166,   84,   53,  166,   47,  166,  166,
-      105,  166,   49,   74,  166,  166,  166,  166,  166,  166,
-       71,  166,  166,  166,  166,   92,   72,  166,  166,  166,
-
-      165,  165,   65,  141,  138,  165,  165,  165,  160,  158,
-      155,  165,  177,  175,  170,   60,  170,  170,  170,  170,
-      170,   78,  170,  170,  117,  170,  170,  170,   99,  170,
-      170,  101,  121,  170,  170,  170,  170,  170,  170,  112,
-       88,  170,   50,  170,  170,  168,   60,  168,  168,  168,
-       78,  168,  117,  168,  168,  168,  109,  121,  168,  168,
-      112,  168,  168,  168,  166,   60,  166,  166,  166,  166,
-      166,   78,  166,  166,  117,  166,  166,  166,   99,  166,
-      166,  101,  121,  166,  166,  166,  166,  166,  166,  112,
-       88,  166,   50,  166,  166,  165,  165,  165,  165,  165,
-
-      165,  146,  170,  125,  170,  170,  170,  170,  170,  170,
-       59,  170,  170,  170,  170,  170,  170,  170,   83,  170,
-      170,  170,  120,  164,  170,  146,  168,  125,  168,  168,
-       59,  168,  168,  168,  168,  168,  120,  164,  168,  146,
-      166,  125,  166,  166,  166,  166,  166,  166,   59,  166,
-      166,  166,  166,  166,  166,  166,   83,  166,  166,  166,
-      120,  164,  166,  146,  131,  136,  164,  148,  153,   77,
+      168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
+      168,  168,  168,  168,  168,  118,  116,  168,    4,    8,
+      167,  167,  167,  167,  167,  132,  167,  167,  167,  167,
+      167,  167,  167,  167,  167,  167,  167,  167,  167,  167,
+      167,  149,  167,  167,  167,  167,  167,  167,  167,  167,
+      167,  167,  180,  180,  180,  172,   58,  172,  172,  172,
+      172,  172,   52,  172,  100,  172,  109,  172,  172,  172,
+      172,  172,  172,  172,   89,  172,  172,  172,  172,  110,
+      172,  172,  172,  125,  172,  172,   98,  172,   68,  172,
+
+      172,  172,  172,  172,  172,  172,  172,  172,   96,  172,
+      172,  172,  172,  172,  172,  106,  172,  172,  172,  172,
+      172,  172,  172,  172,  172,  170,   58,  170,  170,  170,
+       52,  170,  170,  170,  109,  170,  170,  170,  170,  170,
+      170,  110,  125,  170,  170,  170,   68,  170,  170,  170,
+      170,  170,  170,  170,  170,  170,  170,  170,  170,  168,
+       58,  168,  168,  168,  168,  168,   52,  168,  100,  168,
+      168,  109,  168,  168,  168,  168,  168,  168,  168,   89,
+      168,  168,  168,  168,  110,  168,  168,  168,  125,  168,
+      168,   98,  168,  168,   68,  168,  168,  168,  168,  168,
+
+      168,  168,  168,  168,   96,  168,  168,  168,  168,  168,
+      168,  106,  168,  168,  168,  168,  168,  168,  168,  168,
+      168,  167,  167,  167,  136,  144,  135,  167,  167,  146,
+      139,  142,  167,  167,  147,  167,  167,  167,  167,  167,
+      153,  161,  152,  167,  167,  164,  156,  159,  167,  167,
+      165,  167,  167,  180,  180,  180,  172,   87,   54,  172,
+      172,  172,   51,  172,  172,  172,  172,  108,   66,  172,
+      172,   95,  172,   78,  172,  172,   77,  172,  172,  172,
+      172,  172,  172,  172,  172,  172,  172,  172,  120,  172,
+      172,  172,  172,  172,   99,  172,  172,  172,   97,  172,
+
+      172,  172,  172,  172,  172,  172,  170,   54,  170,  170,
+       51,  170,  170,  170,  170,  108,  170,   78,  170,  170,
       170,  170,  170,  170,  170,  170,  170,  170,  170,  170,
-      170,  170,  170,  170,  170,  170,  170,  170,   77,  168,
-      168,  168,  168,  168,  168,  168,  168,   77,  166,  166,
+      170,  170,  170,  170,  168,   87,   54,  168,  168,  168,
+       51,  168,  168,  168,  168,  168,  108,   66,  168,  168,
+       95,  168,   78,  168,  168,   77,  168,  168,  168,  168,
+      168,  168,  168,  168,  168,  168,  168,  168,  120,  168,
+      168,  168,  168,  168,   99,  168,  168,  168,   97,  168,
+      168,  168,  168,  168,  168,  168,  167,  137,  134,  167,
+      167,  146,  146,  141,  167,  145,  167,  167,  154,  151,
+
+      167,  167,  164,  164,  158,  167,  163,  167,  180,  180,
+      178,  172,  172,   65,  172,   88,  172,  172,  172,  172,
+      172,  172,   67,  172,  172,  172,   86,   53,  172,   47,
+      172,  172,  107,  172,   49,   76,  172,  172,  172,  172,
+      172,  172,   73,  172,  172,  172,  172,   94,   74,  172,
+      172,  172,  170,  170,   65,  170,   63,  170,  170,  170,
+      170,  170,   53,  170,  170,  170,  107,  170,   49,  170,
+      170,  170,   73,  170,  170,  170,  170,  168,  168,   65,
+      168,   88,   63,  168,  168,  168,  168,  168,  168,   67,
+      168,  168,  168,   86,   53,  168,   47,  168,  168,  168,
+
+      107,  168,   49,   76,  168,  168,  168,  168,  168,  168,
+       73,  168,  168,  168,  168,   94,   74,  168,  168,  168,
+      167,  167,   67,  143,  140,  167,  167,  167,  162,  160,
+      157,  167,  179,  177,  172,   60,  172,  172,  172,  172,
+      172,   80,  172,  172,  119,  172,  172,  172,  101,  172,
+      172,  103,  123,  172,  172,  172,  172,  172,  172,  114,
+       90,  172,   50,  172,  172,  170,   60,  170,  170,  170,
+       80,  170,  119,  170,  170,  170,  170,  111,  123,  170,
+      170,  114,  170,  170,  170,  168,   60,  168,  168,  168,
+      168,  168,   80,  168,  168,  119,  168,  168,  168,  168,
+
+      101,  168,  168,  103,  123,  168,  168,  168,  168,  168,
+      168,  114,   90,  168,   50,  168,  168,  167,  167,  167,
+      167,  167,  167,  148,  172,  127,  172,  172,  172,  172,
+      172,  172,   59,  172,  172,  172,  172,  172,  172,  172,
+       85,  172,  172,  172,  122,  166,  172,  148,  170,  127,
+      170,  170,   59,  170,  170,  170,  170,  170,  170,  122,
+      166,  170,  148,  168,  127,  168,  168,  168,  168,  168,
+      168,   59,  168,  168,  168,  168,  168,  168,  168,  168,
+       85,  168,  168,  168,  122,  166,  168,  148,  133,  138,
+      166,  150,  155,   79,  172,  172,  172,  172,  172,  172,
+
+      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
+      172,  172,   79,  170,  170,   64,  170,  170,  170,  170,
+      170,  170,   79,  168,  168,  168,  168,  168,  168,   64,
+      168,  168,  168,  168,  168,  168,  168,  168,  168,  168,
+      168,  168,  172,  172,  172,  172,  172,  172,  172,  112,
+      113,  172,  172,  172,  172,   75,  172,  172,  172,  172,
+      172,  170,  170,  170,  112,  113,  170,  170,  170,  170,
+      168,  168,  168,  168,  168,  168,  168,  112,  113,  168,
+      168,  168,  168,   75,  168,  168,  168,  168,  168,  172,
+      172,  172,  172,  172,  172,  102,   92,  172,  172,  172,
+
+      172,  172,  172,  172,  172,  170,  170,  102,  170,  170,
+      170,  170,  168,  168,  168,  168,  168,  168,  102,   92,
+      168,  168,  168,  168,  168,  168,  168,  168,   82,  172,
+      172,  126,  172,  172,  172,  172,   48,  172,  172,  172,
+      104,  172,  170,  126,  170,  170,  170,  170,   82,  168,
+      168,  126,  168,  168,  168,  168,   48,  168,  168,  168,
+      104,  168,  172,  172,  172,  172,   91,  172,   71,  172,
+      172,  172,  170,  170,   71,  170,  170,  168,  168,  168,
+      168,   91,  168,   71,  168,  168,  168,  172,  172,  172,
+      172,  172,  172,  124,   70,  172,   69,  170,  170,  170,
+
+      124,   70,   69,  168,  168,  168,  168,  168,  168,  124,
+       70,  168,   69,  172,  172,  172,  172,  172,  172,  172,
+      170,  170,  170,  168,  168,  168,  168,  168,  168,  168,
+      172,  172,   57,  172,  172,  172,  172,  170,   57,  170,
+      168,  168,   57,  168,  168,  168,  168,  172,  172,  172,
+      172,  172,  105,  170,  170,  168,  168,  168,  168,  168,
+      105,  172,   55,  172,  172,  172,   55,  170,  168,   55,
+      168,  168,  168,  172,  172,  172,  172,  170,  168,  168,
+      168,  168,  172,  172,  172,  172,  170,  168,  168,  168,
+      168,   81,  172,  172,  172,  170,   81,  168,  168,  168,
 
-      166,  166,  166,  166,  166,  166,  166,  166,  166,  166,
-      166,  166,  166,  166,  166,  166,  170,  170,  170,  170,
-      170,  170,  170,  110,  111,  170,  170,  170,  170,   73,
-      170,  170,  170,  170,  170,  168,  168,  168,  110,  111,
-      168,  168,  168,  168,  166,  166,  166,  166,  166,  166,
-      166,  110,  111,  166,  166,  166,  166,   73,  166,  166,
-      166,  166,  166,  170,  170,  170,  170,  170,  170,  100,
-       90,  170,  170,  170,  170,  170,  170,  170,  170,  168,
-      168,  100,  168,  168,  168,  168,  166,  166,  166,  166,
-      166,  166,  100,   90,  166,  166,  166,  166,  166,  166,
-
-      166,  166,   80,  170,  170,  124,  170,  170,  170,  170,
-       48,  170,  170,  170,  102,  170,  168,  124,  168,  168,
-      168,  168,   80,  166,  166,  124,  166,  166,  166,  166,
-       48,  166,  166,  166,  102,  166,  170,  170,  170,  170,
-       89,  170,   69,  170,  170,  170,  168,  168,   69,  168,
-      168,  166,  166,  166,  166,   89,  166,   69,  166,  166,
-      166,  170,  170,  170,  170,  170,  170,  122,   68,  170,
-       67,  168,  168,  168,  122,   68,   67,  166,  166,  166,
-      166,  166,  166,  122,   68,  166,   67,  170,  170,  170,
-      170,  170,  170,  170,  168,  168,  168,  166,  166,  166,
-
-      166,  166,  166,  166,  170,  170,   57,  170,  170,  170,
-      170,  168,   57,  168,  166,  166,   57,  166,  166,  166,
-      166,  170,  170,  170,  170,  170,  103,  168,  168,  166,
-      166,  166,  166,  166,  103,  170,   55,  170,  170,  170,
-       55,  168,  166,   55,  166,  166,  166,  170,  170,  170,
-      170,  168,  166,  166,  166,  166,  170,  170,  170,  170,
-      168,  166,  166,  166,  166,   79,  170,  170,  170,  168,
-       79,  166,  166,  166,   56,  170,  170,   56,   56,  166,
-      166,   81,  170,   81,  166,  170,  166,   82,   82,    0
+       56,  172,  172,   56,   56,  168,  168,   83,  172,   83,
+      168,  172,  168,   84,   84,    0
     } ;
 
 static yyconst flex_int32_t yy_ec[256] =
@@ -552,16 +556,16 @@
         1,    1,    2,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    2,    4,    5,    6,    7,    8,    9,    1,   10,
-       11,   12,   13,   14,   15,   16,   17,   18,   19,   19,
-       19,   19,   19,   19,   19,   19,   19,   20,   21,   22,
-       23,   24,   25,    1,   26,   27,   28,   29,   30,   31,
-       32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
-       42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
-       52,   53,   54,   55,   56,    1,   57,   58,   59,   60,
-
-       61,   62,   63,   64,   65,   16,   66,   67,   68,   69,
-       70,   71,   16,   72,   73,   74,   75,   16,   16,   76,
-       16,   77,   78,   79,   80,   81,    1,    1,    1,    1,
+       11,   12,   13,   14,   15,   16,   17,   18,   19,   20,
+       19,   19,   19,   19,   19,   19,   19,   21,   22,   23,
+       24,   25,   26,    1,   27,   28,   29,   30,   31,   32,
+       33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
+       43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
+       53,   54,   55,   56,   57,    1,   58,   59,   60,   61,
+
+       62,   63,   64,   65,   66,   16,   67,   68,   69,   70,
+       71,   72,   16,   73,   74,   75,   76,   16,   16,   77,
+       16,   78,   79,   80,   81,   82,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
@@ -578,678 +582,689 @@
         1,    1,    1,    1,    1
     } ;
 
-static yyconst flex_int32_t yy_meta[82] =
+static yyconst flex_int32_t yy_meta[83] =
     {   0,
         1,    1,    2,    3,    1,    1,    4,    1,    1,    1,
-        1,    5,    6,    7,    8,    9,   10,   11,   11,    8,
-        1,    1,    7,    1,    5,   11,   11,   11,   11,   11,
-       11,    9,    9,    9,    9,    9,    9,    9,    9,    9,
-        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
-        9,    8,    4,    8,    3,    9,   11,   11,   11,   11,
+        1,    5,    6,    7,    8,    9,   10,   11,   11,   11,
+        8,    1,    1,    7,    1,    5,   11,   11,   11,   11,
        11,   11,    9,    9,    9,    9,    9,    9,    9,    9,
-        9,    9,    9,    9,    9,    9,    9,    1,    1,    1,
-       10
+        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
+        9,    9,    8,    4,    8,    3,    9,   11,   11,   11,
+       11,   11,   11,    9,    9,    9,    9,    9,    9,    9,
+        9,    9,    9,    9,    9,    9,    9,    9,    1,    1,
+        1,   10
     } ;
 
-static yyconst flex_int16_t yy_base[1615] =
+static yyconst flex_int16_t yy_base[1641] =
     {   0,
-        0,    0,    0,    0,   81,    0,  162,    0,  243,  323,
-      403,    0,  271,  273,  484,  565,  646,  727, 2549, 2550,
-     2550, 2546, 2550, 2524, 2541,  791, 2550,  260, 2550, 2550,
-     2522, 2521,    0, 2520,    0,  247,  321,  492,    0, 2550,
-      249, 2519,  257,    0,  255,  257,  253,  259,  262,  268,
-     2498, 2503, 2500, 2508,  274,  280,  279,  315,  317, 2491,
-     2506,  350, 2509, 2504,    0,    0, 2475, 2471, 2459, 2465,
-     2550,  237, 2550,    0, 2550, 2527, 2505, 2522,  836, 2550,
-      343, 2550, 2550, 2503, 2502, 2550,  289,    0,  341,  881,
-      306, 2550, 2550,  295, 2501,  344, 2550,  940,  487,  506,
-
-      565,  577,  571, 2480, 2483, 2491,  333,  345,  346,  476,
-     2477,  488, 2550, 2550,  644, 2454, 2550,  290, 2550,    0,
-      999,  477,    0,  362,  735,  747,  596,  511,  477,  567,
-      349,  515, 2475, 2480, 2477, 2485,  517,  573,  594,  589,
-      596, 2468, 2483,  645, 2486, 2481, 2452, 2448, 2436, 2442,
-        0, 1044, 2550, 2550,    0, 2550, 2550, 2503, 1089, 2482,
-     2481, 2550, 2480,    0, 2479,    0,  323, 2550,    0, 2478,
-     2550, 1134,  635,  666,  647,  667,  671,  519, 2474, 2456,
-     2452,  482, 2454, 2550, 2550,  685,  730,  732,  694,  754,
-      250, 2439, 2423, 2419,  320, 2421,    0, 2490, 2550,    0,
-
-     2479, 2550,    0, 2550, 2550, 2550, 2470,  505,  534,  610,
-     2550, 2550, 2487, 2550, 2483, 2550,    0, 1193, 2550, 2550,
-        0,    0,    0,    0,    0,  757,    0,  736, 2464, 2550,
-        0, 2550, 2463, 2441, 2455, 2438, 2448,  594,    0, 2450,
-     2441, 2439, 2433,  501, 2447, 2431, 2444, 2444, 2428,  568,
-     2435, 2431, 2427, 2429, 2431,  798, 2437, 2427,  487, 2424,
-     2426, 2414,  686, 2425, 2427, 2415, 2429, 2429, 2417, 2430,
-     2423,  730, 2414, 2402, 2409, 2421, 2404, 2423, 2421, 2403,
-     2403, 2402, 2371, 2374, 2379, 2364, 2550, 2550,    0, 1244,
-     2550, 2550, 2550,    0, 2550, 2550,  582,  809,    0, 2550,
-
-     2550,    0, 2550,  842,  845,  889,    0, 2406,  724,    0,
-      917, 2400, 2398,  679,  949,  976, 2407, 2408, 2395,  669,
-     2404, 2394, 2406, 2382, 2391, 2380,  668, 2391, 2393, 2396,
-     2385, 2392, 2372, 2392, 2394,  995, 2343,    0, 1295,    0,
-        0,  884,    0, 2375, 2389, 2372, 2382,  742,    0, 2384,
-     2375, 2373, 2367,  738, 2381, 2365, 2378, 2378, 2362,  733,
-     2369, 2365, 2361, 2363, 2365,  802, 2371, 2361,  716,  751,
-     2361, 2359, 2348,  900, 2359, 2361, 2349, 2363, 2363, 2351,
-     2364, 2357,  806, 2348, 2336, 2343, 2355, 2338, 2357, 2355,
-     2337, 2337, 2336, 2305, 2308, 2313, 2298,    0, 1346, 2371,
-
-     2550,    0, 1397,    0,    0,    0,  833,  888,  841,    0,
-     2339,  928,  937, 2338, 2342, 2325, 2326, 2324, 2341, 2328,
-     2336, 2337, 2335, 2336, 2315,  854, 2295,  969,  982, 2294,
-     2298, 2283, 2284, 2282, 2297, 2285, 2292, 2293, 2291, 2292,
-     2273, 2345,    0,    0, 2326, 2325,  690,  836,  617, 2550,
-     2550, 2304, 2300, 2312, 2309, 2310, 2300, 2298, 2308, 2308,
-     2305, 2290, 2283, 2306, 2305, 2296, 2301, 2285, 2290, 2296,
-     2288, 2298, 2295, 2276,    0, 2284, 2280, 2285, 2272, 2287,
-     2275, 2283, 2285, 2281,    0, 2272, 2266, 2267, 2272, 2268,
-     2257, 2274, 2264, 2261, 2260, 2255, 2272, 2266, 2256, 2253,
-
-     2259, 2253, 2265, 2249, 2265, 2266, 2248, 2264, 2252, 2256,
-     2243, 2216,    0,    0, 2224,    0,    0,  998, 2244, 1004,
-     2251, 2252, 2242, 2251, 2251, 2234, 2227, 2250, 1049, 2247,
-     2237, 2227, 2235, 2231, 2229, 2237, 2239,    0,    0, 2222,
-     2223, 2225, 2214, 2231, 2219, 2214, 2222, 2229, 2230, 2231,
-     2186, 2194,    0,    0, 2214, 2210, 2222, 2219, 2220, 2210,
-     2208, 2218, 2218, 2215, 2200, 2193, 2216, 2215, 2206, 2211,
-     2195, 2200, 2206, 2198, 2208, 2205, 2186,    0, 2194, 2190,
-     2195, 2182, 2197, 2185, 2193, 2195, 2191,    0,    0, 2182,
-        0, 2176, 2177, 2182, 2178, 2167, 2184, 2174, 2171, 2170,
-
-     2165, 2182, 2176, 2166, 2163, 2169, 2163, 2175, 2159, 2175,
-     2176, 2158, 2174, 2162, 2166, 2153, 2126,    0,    0, 2134,
-        0,    0, 2154,  651, 2163, 2162, 2150,    0, 2160, 2151,
-     2143, 2158, 2156, 2155, 2147, 2138, 2139, 2142, 2110,  866,
-     2118, 2117, 2106,    0, 2115, 2107, 2100, 2113, 2111, 2110,
-     2103, 2095, 2096, 2098,  592,  681,  585, 2129,    0, 2122,
-     2125, 2120, 2132, 2118,    0, 2124,    0, 2114,    0, 2113,
-     2101, 2117, 2110, 2104, 2107, 2109,    0, 2106, 2120, 2108,
-     2102,    0, 2120, 2101, 2102,    0, 2099, 2117,    0, 2099,
-        0, 2101, 2100, 2113, 2082, 2103, 2090, 2098, 2090, 2099,
-
-        0, 2092, 2103, 2096, 2099, 2083, 2087, 2070, 2091, 2095,
-     2078, 2085, 2087, 2090, 2085, 2051, 2047, 2079,    0, 2076,
-     2071, 2083,    0, 2076, 2066,    0, 2054, 2070, 2063, 2061,
-     2065, 2059,    0,    0, 2059, 2077,    0, 2062, 2075, 2044,
-     2065, 2061, 2063, 2066, 2055, 2060, 2056, 2025, 2021, 2053,
-        0, 2046, 2049, 2044, 2056, 2042,    0, 2048,    0, 2038,
-        0, 2037, 2025, 2041, 2034, 2028, 2031, 2033,    0, 2030,
-     2044, 2032, 2017,    0, 2025, 1996, 1987,    0, 1977, 1990,
-        0, 1971,    0, 1971, 1968, 1981, 1946, 1957, 1934, 1932,
-     1919, 1927,    0, 1905, 1916, 1909, 1912, 1889, 1888,  222,
-
-      331,  364,  446,  519,  538,  652,  681,  652,  664,  723,
-      738,  758,    0,    0,    0,  756,  786, 1465,    0,    0,
-      771,  782,    0,  791,  809,  773,  768,  775,    0,    0,
-        0,  785,  802, 1545,    0,    0,  789,  808,    0,  802,
-      821,  863,  933,  881,  838,    0,  848,  847,  874,  875,
-        0,  949,  883,  880,  906,    0,    0,  927,  921,    0,
-      907,    0,  950,  948,    0,  938,  954,  959,  941,  951,
-      982,  982,  978,  975,  970,  997,    0, 1006,  998, 1005,
-     1003, 1005,    0, 1014, 1019, 1024,    0, 1005, 1018, 1026,
-     1009, 1025,  992, 1007, 1031, 1039, 1035, 1051,    0, 1056,
-
-     1040, 1055,    0, 1058,    0, 1059, 1056, 1061, 1047, 1063,
-     1061, 1057, 1071, 1069, 1060, 1069, 1083, 1076, 1036, 1050,
-     1067,    0, 1074, 1076, 1092, 1093,    0, 1098, 1095, 1082,
-     1097,    0,    0, 1099, 1090,    0, 1074,    0, 1102, 1098,
-        0, 1088, 1101, 1106, 1086, 1093, 1112, 1110, 1106, 1103,
-     1098, 1118,    0, 1116, 1115, 1122, 1116, 1118,    0, 1127,
-     1132, 1140,    0, 1122, 1135, 1143, 1127, 1133, 1100, 1114,
-     1131,    0, 1140, 1140, 1135,    0, 1625,    0, 1153,    0,
-     1156, 1109,    0, 1117, 1117, 1113,    0, 1705,    0, 1129,
-        0, 1132, 1170, 1177, 1179, 1155, 1170,    0, 1173,    0,
-
-     1164, 1159, 1150, 1177, 1179, 1179,    0, 1185, 1184, 1170,
-        0,    0, 1187,    0, 1173, 1173,    0, 1194,    0, 1170,
-     1177, 1198, 1174, 1176, 1194, 1189, 1179, 1186, 1200, 1197,
-     1208,    0,    0, 1202, 1168, 1187, 1200, 1215,    0, 1218,
-     1209, 1219, 1227, 1227, 1228,    0, 1231, 1220,    0, 1234,
-        0, 1216, 1237, 1223, 1213, 1239, 1245, 1204, 1223, 1236,
-     1252,    0, 1255,    0, 1246, 1240, 1231, 1258, 1260, 1260,
-        0, 1263, 1262, 1248,    0,    0, 1265,    0, 1251, 1251,
-        0, 1266,    0, 1242, 1249, 1270, 1251, 1252, 1270, 1266,
-     1259, 1266, 1280, 1277, 1287,    0,    0, 1281, 1253, 1272,
-
-     1284, 1290,    0,    0,    0, 1287, 1260, 1265,    0,    0,
-        0, 1262, 1317, 1318, 1309,    0, 1310, 1296, 1314, 1303,
-     1312,    0, 1289, 1306,    0, 1291, 1305, 1306,    0, 1294,
-     1336,    0, 1295, 1332, 1330, 1316, 1310, 1335, 1313,    0,
-        0, 1331,    0, 1310, 1314, 1349,    0, 1350, 1336, 1351,
-        0, 1329,    0, 1343, 1344, 1332,    0, 1333, 1334, 1358,
-        0, 1353, 1332, 1330, 1365,    0, 1366, 1352, 1370, 1359,
-     1368,    0, 1345, 1362,    0, 1353, 1367, 1368,    0, 1357,
-     1391,    0, 1362, 1393, 1391, 1377, 1373, 1397, 1375,    0,
-        0, 1393,    0, 1373, 1372, 1407, 1409, 1409, 1379, 1381,
-
-     1381,    0, 1414,    0, 1399, 1418, 1408, 1416, 1410, 1421,
-        0, 1420, 1408, 1409, 1413, 1427, 1424, 1428,    0, 1420,
-     1438, 1446,    0,    0, 1417,    0, 1451,    0, 1443, 1451,
-        0, 1453, 1441, 1458, 1448, 1463,    0,    0, 1433,    0,
-     1466,    0, 1451, 1470, 1460, 1468, 1462, 1473,    0, 1472,
-     1460, 1461, 1465, 1473, 1470, 1474,    0, 1465, 1480, 1485,
-        0,    0, 1451,    0,    0,    0,    0,    0,    0,    0,
-     1473, 1479, 1485, 1482, 1479, 1478, 1488, 1481, 1494, 1480,
-     1491, 1492, 1484, 1483, 1504, 1494, 1506, 1476,    0, 1504,
-     1501, 1505, 1500, 1503, 1493, 1513, 1484,    0, 1502, 1517,
-
-     1528, 1526, 1523, 1522, 1532, 1524, 1537, 1528, 1539, 1540,
-     1532, 1531, 1551, 1541, 1553, 1523, 1538, 1552, 1544, 1547,
-     1545, 1548, 1543,    0,    0, 1555, 1551, 1561, 1565,    0,
-     1566, 1564, 1560, 1557, 1536, 1558, 1561, 1555,    0,    0,
-     1572, 1576, 1574, 1544, 1562, 1576, 1568, 1571, 1569, 1572,
-     1567,    0,    0, 1579, 1575, 1585, 1589,    0, 1590, 1588,
-     1584, 1581, 1560, 1577, 1594, 1583, 1602, 1599, 1602,    0,
-        0, 1615, 1613, 1599, 1601, 1615, 1619, 1622, 1592, 1609,
-     1625,    0, 1627, 1614, 1628, 1598, 1616, 1633, 1617, 1633,
-     1625, 1627,    0,    0, 1640, 1638, 1624, 1626, 1640, 1639,
-
-     1642, 1612,    0, 1629, 1619,    0, 1620, 1637, 1633, 1649,
-        0, 1636, 1639, 1644,    0, 1612, 1629,    0, 1656, 1642,
-     1645, 1617,    0, 1645, 1635,    0, 1636, 1653, 1649, 1665,
-        0, 1651, 1654, 1659,    0, 1627, 1644, 1682, 1675, 1663,
-        0, 1679,    0, 1676, 1683, 1649, 1705, 1684,    0, 1680,
-     1659, 1677, 1708, 1710, 1698,    0, 1700,    0, 1696, 1703,
-     1669, 1699, 1707, 1706, 1716, 1710, 1693,    0,    0, 1720,
-        0, 1715, 1714, 1724,    0,    0,    0, 1711, 1719, 1718,
-     1728, 1722, 1705,    0,    0, 1732,    0, 1713, 1730, 1736,
-     1729, 1730, 1742, 1730, 1736, 1742, 1735, 1723, 1740, 1746,
-
-     1739, 1740, 1752, 1740, 1742, 1749,    0, 1739, 1746, 1750,
-     1743, 1757,    0, 1747, 1753, 1760,    0, 1750, 1754, 1758,
-     1751, 1770, 1759, 1759, 1772, 1764,    0, 1763, 1763, 1777,
-     1766, 1766, 1779, 1771,    0, 1769,    0, 1754, 1785, 1772,
-        0, 1757, 1774,    0, 1759, 1790, 1777, 1781, 1789, 1775,
-     1793, 1792, 1786, 1794, 1780, 1798, 1783, 1789, 1795, 1804,
-     1792, 1788, 1794, 1800, 1809,    0, 1807, 1797, 1793, 1810,
-        0, 1811, 1801, 1797,    0, 1804, 1810,    0,    0, 1806,
-     1812,    0, 1807,    0, 1808, 1810, 1811,    0,    0, 2550,
-     1850, 1861, 1872, 1883, 1894, 1905, 1913, 1921, 1929, 1937,
-
-     1948, 1956, 1967, 1978, 1989, 1992, 2001, 2009, 1915, 2017,
-     2028, 2039, 2050, 2061
+        0,    0,    0,    0,   82,    0,  164,    0,  246,  327,
+      408,    0,  275,  277,  490,  572,  654,  736, 2610, 2611,
+     2611, 2607, 2611, 2584, 2602,  801, 2611,  264, 2611, 2611,
+     2582, 2581,    0, 2580,    0,  250,  581,  499,    0, 2611,
+      252, 2579,  260,    0,  259,  255,  254,  269,  263,  274,
+     2558, 2563, 2560, 2568,  276,  289,  277,  315,  277, 2551,
+     2566,  326, 2569, 2564,    0,    0, 2535, 2531, 2519, 2525,
+     2611,  239, 2611,    0, 2611, 2588, 2565, 2583,  847, 2611,
+      334, 2611, 2611, 2563, 2562, 2611,  298,    0,  352,  893,
+      294, 2611, 2611,  300, 2561,  350, 2611,  953,  351,  357,
+
+      494,  503,  576, 2540, 2543, 2551,  353,  343,  496,  486,
+     2537,  516, 2611, 2611,  652, 2514, 2611,  482, 2611,    0,
+     1013,  496,    0,  380,  745,  757,  655,  572,  511,  534,
+      350,  519, 2535, 2540, 2537, 2545,  360,  578,  588,  590,
+      568, 2528, 2543,  661, 2546, 2541, 2512, 2508, 2496, 2502,
+        0, 1059, 2611, 2611,    0, 2611, 2611, 2564, 1105, 2542,
+     2541, 2611, 2540,    0, 2539,    0,  479, 2611,    0, 2538,
+     2611, 1151,  605,  608,  611,  677,  653,  358, 2534, 2516,
+     2512,  504, 2514, 2611, 2611,  661,  685,  734,  765,  681,
+      545, 2499, 2483, 2479,  704, 2481,    0, 2551, 2611,    0,
+
+     2540, 2611,    0, 2611, 2611, 2611, 2530,  567,  620,  546,
+     2611, 2611, 2548, 2611, 2544, 2611,    0, 1211, 2611, 2611,
+        0,    0,    0,    0,    0,  769,    0,  744, 2524, 2611,
+        0, 2611, 2523, 2501, 2515, 2498, 2508,  669,    0, 2510,
+     2501, 2499, 2493,  605, 2507, 2491, 2504, 2504, 2488,  640,
+     2495, 2491, 2487, 2489, 2491,  805, 2497, 2487,  740, 2484,
+     2486, 2474,  692, 2485, 2487, 2475, 2489, 2489, 2477, 2490,
+     2483,  741, 2474, 2462, 2469, 2481, 2464, 2483, 2481, 2463,
+     2463, 2462, 2431, 2434, 2439, 2424, 2611, 2611,    0, 1263,
+     2611, 2611, 2611,    0, 2611, 2611,  701,  864,    0, 2611,
+
+     2611,    0, 2611,  842,  929,  962,    0, 2466,  683,    0,
+      989, 2460, 2458, 1018,  729, 1009, 1064, 2467, 2468, 2455,
+      773, 2464, 2454, 2466, 2442, 2451, 2461, 2439,  632, 2450,
+     2452, 2455, 2444, 2451, 2431, 2451, 2453, 1021, 2402,    0,
+     1315,    0,    0,  878,    0, 2434, 2448, 2431, 2441,  728,
+        0, 2443, 2434, 2432, 2426, 2436,  767, 2439, 2423, 2436,
+     2436, 2420,  702, 2427, 2423, 2419, 2421, 2423,  811, 2429,
+     2419,  770,  799, 2419, 2417, 2427, 2405,  819, 2416, 2418,
+     2406, 2420, 2420, 2408, 2421, 2414,  825, 2405, 2393, 2400,
+     2412, 2395, 2414, 2412, 2394, 2394, 2393, 2362, 2365, 2370,
+
+     2355,    0, 1367, 2429, 2611,    0, 1419,    0,    0,    0,
+      763,  857,  843,    0, 2396,  890,  891, 2395, 2399, 2382,
+     2383, 2381, 2398, 2385, 2393, 2394, 2392, 2393, 2372,  866,
+     2352,  948,  951, 2351, 2355, 2340, 2341, 2339, 2354, 2342,
+     2349, 2350, 2348, 2349, 2330, 2403,    0,    0, 2383, 2382,
+      711,  802,  878, 2611, 2611, 2361, 2357, 2369, 2366, 2367,
+     2357, 2355, 2365, 2365, 2362, 2347, 2340, 2363, 2362, 2353,
+     2358, 2342, 2347, 2353, 2345, 2355, 2352, 2333,    0, 2341,
+     2337, 2342, 2329, 2344, 2332, 2340, 2342, 2338,    0, 2329,
+     2323, 2324, 2329, 2325, 2314, 2331, 2321, 2318, 2317, 2312,
+
+     2329, 2323, 2313, 2310, 2316, 2310, 2322, 2306, 2322, 2323,
+     2305, 2321, 2309, 2313, 2300, 2273,    0,    0, 2281,    0,
+        0,  926, 2301, 1055, 2308, 2309, 2299, 2308, 2308, 2298,
+     2290, 2283, 2306, 1110, 2303, 2293, 2283, 2291, 2287, 2285,
+     2293, 2295,    0,    0, 2286, 2277, 2278, 2280, 2269, 2286,
+     2274, 2269, 2277, 2284, 2285, 2286, 2241, 2249,    0,    0,
+     2269, 2265, 2277, 2274, 2275, 2265, 2263, 2273, 2273, 2270,
+     2262, 2254, 2247, 2270, 2269, 2260, 2265, 2249, 2254, 2260,
+     2252, 2262, 2259, 2240,    0, 2248, 2244, 2249, 2236, 2251,
+     2239, 2247, 2249, 2245,    0,    0, 2236,    0, 2238, 2229,
+
+     2230, 2235, 2231, 2220, 2237, 2227, 2224, 2223, 2218, 2235,
+     2229, 2219, 2216, 2222, 2216, 2228, 2212, 2228, 2229, 2211,
+     2227, 2215, 2219, 2206, 2179,    0,    0, 2187,    0,    0,
+     2207,  859, 2216, 2215, 2203,    0, 2213, 2204, 2196, 2211,
+     2209, 2208, 2200, 2191, 2192, 2195, 2163,  884, 2171, 2170,
+     2159,    0, 2168, 2160, 2153, 2166, 2164, 2163, 2156, 2148,
+     2149, 2151,  663,  834,  769, 2182,    0, 2175, 2178, 2173,
+     2185, 2171,    0, 2177,    0, 2167,    0, 2166, 2154, 2170,
+     2163, 2157, 2160, 2162,    0, 2159, 2173, 2161, 2155,    0,
+     2173, 2154, 2155,    0, 2152, 2170,    0, 2152,    0, 2154,
+
+     2153, 2166, 2135, 2156, 2143, 2151, 2143, 2152,    0, 2145,
+     2156, 2149, 2152, 2136, 2140, 2123, 2144, 2148, 2131, 2138,
+     2140, 2143, 2138, 2104, 2100, 2132,    0, 2129, 2124, 2136,
+        0, 2129, 2123, 2118,    0, 2106, 2122, 2115, 2113, 2117,
+     2111,    0,    0, 2111, 2129, 2098,    0, 2113, 2126, 2095,
+     2116, 2112, 2114, 2117, 2106, 2111, 2107, 2076, 2072, 2104,
+        0, 2097, 2100, 2095, 2107, 2093,    0, 2099,    0, 2093,
+     2088,    0, 2078, 2056, 2062, 2045, 2032, 2030, 2031,    0,
+     2026, 2038, 2026, 2016,    0, 2024, 1995, 1986,    0, 1978,
+     1995,    0, 1962, 1948,    0, 1963, 1962, 1968, 1932,  247,
+
+      263,  327,  360,  462,    0,  487,  530,  573,  593,  594,
+      625,  649,  675,  795,  798,  808,  833,  838,  854,  822,
+      820,  862,  871,  886,    0,    0,    0,  893,  912, 1488,
+        0,    0,  900,  911,    0,  903,  921,  893,  892,  898,
+        0,    0,    0,  896,  919, 1569,    0,    0,  905,  922,
+        0,  921,  937,  984,  980, 1000,  955,    0,  963,  960,
+      978,  979,    0, 1025,  989,  978,  995,    0,    0,  998,
+      989,    0,  979,    0, 1020, 1023,    0, 1014, 1027, 1032,
+     1014, 1025, 1053, 1051, 1047, 1044, 1051, 1071,    0, 1073,
+     1064, 1071, 1065, 1067,    0, 1076, 1083, 1085,    0, 1066,
+
+     1079, 1087, 1070, 1085, 1051, 1065, 1082, 1089, 1085, 1108,
+        0, 1121, 1115, 1098, 1113,    0, 1116,    0, 1117, 1115,
+     1120, 1112, 1107, 1123, 1119, 1117, 1131, 1129, 1120, 1129,
+     1135, 1137, 1097, 1111, 1128,    0, 1135, 1131, 1153, 1155,
+        0, 1167, 1161, 1159, 1146, 1162,    0,    0, 1164, 1155,
+        0, 1139,    0, 1167, 1163,    0, 1153, 1166, 1172, 1152,
+     1165, 1161, 1180, 1178, 1180, 1177, 1172, 1192,    0, 1190,
+     1181, 1189, 1183, 1185,    0, 1194, 1199, 1205,    0, 1186,
+     1199, 1207, 1190, 1196, 1168, 1182, 1199,    0, 1208, 1209,
+     1205,    0, 1650,    0, 1223,    0, 1226, 1178,    0, 1186,
+
+     1186, 1182,    0, 1731,    0, 1198,    0, 1201, 1239, 1240,
+     1241, 1217, 1232,    0, 1235,    0, 1226, 1220, 1211, 1244,
+     1246, 1246,    0, 1250, 1253, 1239,    0,    0, 1256,    0,
+     1242, 1242,    0, 1257,    0, 1239, 1246, 1267, 1242, 1244,
+     1263, 1258, 1248, 1255, 1269, 1268, 1278,    0,    0, 1272,
+     1238, 1257, 1269, 1284,    0, 1287,    0, 1278, 1288, 1290,
+     1296, 1297,    0, 1299, 1304, 1291,    0, 1305,    0, 1287,
+     1308, 1294, 1284, 1310, 1316, 1275, 1294, 1307, 1323,    0,
+     1326,    0,    0, 1317, 1311, 1302, 1329, 1331, 1331,    0,
+     1334, 1333, 1319,    0,    0, 1336,    0, 1340, 1323, 1323,
+
+        0, 1338,    0, 1314, 1321, 1348, 1323, 1324, 1343, 1342,
+     1332, 1339, 1353, 1350, 1360,    0,    0, 1360, 1326, 1345,
+     1357, 1364,    0,    0,    0, 1361, 1333, 1338,    0,    0,
+        0, 1335, 1390, 1391, 1382,    0, 1383, 1369, 1387, 1376,
+     1385,    0, 1362, 1379,    0, 1364, 1378, 1379,    0, 1367,
+     1408,    0, 1374, 1405, 1403, 1396, 1385, 1409, 1387,    0,
+        0, 1405,    0, 1390, 1388, 1423,    0, 1424, 1411, 1426,
+        0, 1403,    0, 1417, 1417, 1419, 1407,    0, 1408, 1409,
+     1433,    0, 1428, 1407, 1405, 1440,    0, 1441, 1427, 1445,
+     1434, 1443,    0, 1426, 1443,    0, 1428, 1443, 1446, 1451,
+
+        0, 1444, 1476,    0, 1447, 1478, 1476, 1462, 1452, 1481,
+     1459,    0,    0, 1477,    0, 1456, 1454, 1489, 1491, 1491,
+     1461, 1463, 1463,    0, 1496,    0, 1481, 1500, 1490, 1498,
+     1492, 1503,    0, 1502, 1490, 1491, 1495, 1503, 1500, 1504,
+        0, 1495, 1510, 1515,    0,    0, 1481,    0, 1515,    0,
+     1507, 1515,    0, 1511, 1518, 1506, 1517, 1507, 1522,    0,
+        0, 1492,    0, 1526,    0, 1511, 1530, 1520, 1528, 1522,
+     1533,    0, 1526, 1533, 1521, 1522, 1531, 1542, 1544, 1549,
+        0, 1540, 1555, 1560,    0,    0, 1526,    0,    0,    0,
+        0,    0,    0,    0, 1548, 1554, 1565, 1562, 1559, 1558,
+
+     1569, 1561, 1574, 1560, 1570, 1571, 1563, 1562, 1582, 1573,
+     1585, 1555,    0, 1583, 1580,    0, 1584, 1577, 1582, 1573,
+     1593, 1563,    0, 1581, 1587, 1593, 1592, 1589, 1588,    0,
+     1598, 1590, 1603, 1589, 1599, 1600, 1592, 1591, 1611, 1602,
+     1614, 1584, 1599, 1613, 1605, 1608, 1606, 1614, 1612,    0,
+        0, 1629, 1626, 1636, 1640,    0, 1641, 1639, 1635, 1632,
+     1616, 1638, 1641, 1635,    0,    0, 1651, 1655, 1653, 1623,
+     1641, 1655, 1647, 1650, 1648, 1651, 1646,    0,    0, 1658,
+     1654, 1664, 1668,    0, 1669, 1667, 1663, 1660, 1639, 1656,
+     1673, 1657, 1673, 1665, 1668,    0,    0, 1681, 1679, 1665,
+
+     1667, 1681, 1680, 1683, 1653, 1670, 1686,    0, 1688, 1675,
+     1689, 1659, 1677, 1694, 1678, 1694, 1686, 1688,    0,    0,
+     1701, 1704, 1693, 1700, 1715, 1714, 1717, 1687,    0, 1704,
+     1694,    0, 1695, 1717, 1713, 1729,    0, 1715, 1718, 1723,
+        0, 1691, 1708,    0, 1735, 1721, 1724, 1696,    0, 1724,
+     1714,    0, 1715, 1732, 1728, 1744,    0, 1730, 1733, 1738,
+        0, 1706, 1723, 1754, 1755, 1743,    0, 1744,    0, 1741,
+     1749, 1715, 1763, 1751,    0, 1747, 1719, 1738, 1769, 1770,
+     1759,    0, 1761,    0, 1757, 1764, 1730, 1760, 1768, 1768,
+     1778, 1776, 1758,    0,    0, 1785,    0, 1779, 1778, 1788,
+
+        0,    0,    0, 1775, 1783, 1782, 1792, 1786, 1768,    0,
+        0, 1795,    0, 1776, 1793, 1799, 1792, 1793, 1805, 1793,
+     1799, 1805, 1798, 1786, 1803, 1809, 1802, 1803, 1815, 1803,
+     1805, 1812,    0, 1802, 1806, 1810, 1803, 1817,    0, 1807,
+     1813, 1820,    0, 1810, 1814, 1818, 1811, 1830, 1819, 1819,
+     1832, 1824,    0, 1823, 1823, 1837, 1826, 1826, 1839, 1831,
+        0, 1829,    0, 1814, 1845, 1832,    0, 1817, 1834,    0,
+     1819, 1850, 1837, 1841, 1849, 1835, 1853, 1852, 1846, 1854,
+     1840, 1858, 1843, 1849, 1855, 1864, 1852, 1848, 1854, 1860,
+     1869,    0, 1867, 1857, 1853, 1870,    0, 1871, 1861, 1857,
+
+        0, 1864, 1870,    0,    0, 1866, 1872,    0, 1867,    0,
+     1868, 1870, 1871,    0,    0, 2611, 1911, 1922, 1933, 1944,
+     1955, 1966, 1974, 1982, 1990, 1998, 2009, 2017, 2028, 2039,
+     2050, 2053, 2062, 2070, 1976, 2078, 2089, 2100, 2111, 2122
     } ;
 
-static yyconst flex_int16_t yy_def[1615] =
+static yyconst flex_int16_t yy_def[1641] =
     {   0,
-     1591, 1591, 1590,    3, 1590,    5, 1590,    7, 1592, 1592,
-     1590,   11, 1593, 1593, 1594, 1594, 1595, 1595, 1590, 1590,
-     1590, 1590, 1590, 1590, 1596, 1597, 1590, 1590, 1590, 1590,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1590,
-     1590, 1597, 1590, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1590, 1590, 1590, 1597, 1590, 1590, 1590, 1596, 1598, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1598, 1598, 1590,
-       90, 1590, 1590, 1590, 1590, 1590, 1590, 1598,   98,   98,
-
-       98,   98,   98, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
-     1598, 1598, 1590, 1590,   98, 1598, 1590, 1590, 1590, 1598,
-     1599, 1590, 1599, 1599, 1590, 1590, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1600, 1590, 1590, 1600, 1590, 1590, 1601, 1602, 1603,
-     1590, 1590, 1590, 1602, 1602,   90,   90, 1590, 1604, 1590,
-     1590, 1602,  172,  172,  172,  172,  172, 1602, 1602, 1602,
-     1602, 1602, 1602, 1590, 1590,  172,  172,  172,  172,  172,
-     1602, 1602, 1602, 1602, 1602, 1602, 1602, 1590, 1590, 1605,
-
-     1590, 1590, 1606, 1590, 1590, 1590, 1607, 1607, 1607, 1607,
-     1590, 1590, 1590, 1590, 1596, 1590, 1597, 1597, 1590, 1590,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597,  218, 1590, 1590,
-     1597, 1590, 1590, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1590, 1590, 1598, 1598,
-     1590, 1590, 1590, 1608, 1590, 1590,   90,   90,  298, 1590,
-
-     1590, 1609, 1590,   98,   98,   98, 1598, 1598, 1598, 1598,
-       98, 1598, 1598, 1598,   98,   98, 1598, 1598, 1598, 1598,
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
-     1598, 1598, 1598, 1598, 1598,   98, 1598, 1599, 1599, 1610,
-     1599, 1590, 1609, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1600, 1600, 1601,
-
-     1590, 1602, 1602, 1603, 1603, 1604,  172,  172,  172, 1602,
-     1602,  172,  172, 1602, 1602, 1602, 1602, 1602, 1602, 1602,
-     1602, 1602, 1602, 1602, 1602,  172, 1602,  172,  172, 1602,
-     1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602,
-     1602, 1590, 1605, 1606, 1607, 1590, 1607, 1607, 1607, 1590,
-     1590, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1598, 1608, 1609, 1598,   98,
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,   98, 1598,
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
-     1598, 1598, 1599, 1610, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1600, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602,
-     1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602,
-     1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602,
-     1602, 1602, 1602, 1602, 1607, 1607, 1607, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1598, 1598, 1598,
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1602,
-     1602, 1602, 1602, 1602, 1602, 1602, 1602, 1611, 1602, 1602,
-     1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602,
-     1602, 1602, 1602, 1612, 1602, 1602, 1602, 1602, 1602, 1602,
-     1602, 1607, 1607, 1607, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1598, 1598, 1598, 1598, 1598, 1598,
-
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1602, 1602, 1602, 1602, 1602, 1613, 1611, 1602, 1602, 1602,
-     1602, 1602, 1602, 1602, 1602, 1602, 1614, 1612, 1602, 1602,
-     1602, 1602, 1607, 1607, 1607, 1597, 1597, 1597, 1597, 1597,
-
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1598, 1598, 1598, 1598,
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-
-     1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602, 1602,
-     1602, 1602, 1607, 1607, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1598, 1598, 1598, 1598, 1598,
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598,
-     1598, 1598, 1598, 1598, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1602, 1602, 1602, 1602, 1602,
-
-     1602, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1598, 1598, 1598, 1598, 1598,
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1598, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1602, 1602, 1602, 1602, 1602, 1602, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1598, 1598,
-     1598, 1598, 1598, 1598, 1598, 1598, 1598, 1599, 1599, 1599,
-
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1598, 1598, 1598, 1598, 1598,
-     1598, 1598, 1598, 1598, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1598,
-     1598, 1598, 1598, 1598, 1598, 1598, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-
-     1599, 1599, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1598, 1598, 1598, 1598,
-     1598, 1598, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1597, 1597, 1598, 1598, 1598, 1598,
-     1598, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1598, 1598, 1598, 1598, 1598, 1598, 1599, 1599, 1599,
-     1599, 1599, 1599, 1599, 1599, 1599, 1599, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1598, 1598, 1598, 1599, 1599, 1599,
-
-     1599, 1599, 1599, 1599, 1597, 1597, 1597, 1597, 1597, 1597,
-     1597, 1598, 1598, 1598, 1599, 1599, 1599, 1599, 1599, 1599,
-     1599, 1597, 1597, 1597, 1597, 1597, 1597, 1598, 1598, 1599,
-     1599, 1599, 1599, 1599, 1599, 1597, 1597, 1597, 1597, 1597,
-     1598, 1598, 1599, 1599, 1599, 1599, 1599, 1597, 1597, 1597,
-     1597, 1598, 1599, 1599, 1599, 1599, 1597, 1597, 1597, 1597,
-     1598, 1599, 1599, 1599, 1599, 1597, 1597, 1597, 1597, 1598,
-     1599, 1599, 1599, 1599, 1597, 1597, 1597, 1598, 1599, 1599,
-     1599, 1597, 1597, 1599, 1599, 1597, 1599, 1597, 1599,    0,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590, 1590, 1590, 1590
+     1617, 1617, 1616,    3, 1616,    5, 1616,    7, 1618, 1618,
+     1616,   11, 1619, 1619, 1620, 1620, 1621, 1621, 1616, 1616,
+     1616, 1616, 1616, 1616, 1622, 1623, 1616, 1616, 1616, 1616,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1616,
+     1616, 1623, 1616, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1616, 1616, 1616, 1623, 1616, 1616, 1616, 1622, 1624, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1624, 1624, 1616,
+       90, 1616, 1616, 1616, 1616, 1616, 1616, 1624,   98,   98,
+
+       98,   98,   98, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1616, 1616,   98, 1624, 1616, 1616, 1616, 1624,
+     1625, 1616, 1625, 1625, 1616, 1616, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1626, 1616, 1616, 1626, 1616, 1616, 1627, 1628, 1629,
+     1616, 1616, 1616, 1628, 1628,   90,   90, 1616, 1630, 1616,
+     1616, 1628,  172,  172,  172,  172,  172, 1628, 1628, 1628,
+     1628, 1628, 1628, 1616, 1616,  172,  172,  172,  172,  172,
+     1628, 1628, 1628, 1628, 1628, 1628, 1628, 1616, 1616, 1631,
+
+     1616, 1616, 1632, 1616, 1616, 1616, 1633, 1633, 1633, 1633,
+     1616, 1616, 1616, 1616, 1622, 1616, 1623, 1623, 1616, 1616,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623,  218, 1616, 1616,
+     1623, 1616, 1616, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1616, 1616, 1624, 1624,
+     1616, 1616, 1616, 1634, 1616, 1616,   90,   90,  298, 1616,
+
+     1616, 1635, 1616,   98,   98,   98, 1624, 1624, 1624, 1624,
+       98, 1624, 1624,   98, 1624,   98,   98, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1624, 1624,   98, 1624, 1625,
+     1625, 1636, 1625, 1616, 1635, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+
+     1625, 1626, 1626, 1627, 1616, 1628, 1628, 1629, 1629, 1630,
+      172,  172,  172, 1628, 1628,  172,  172, 1628, 1628, 1628,
+     1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628,  172,
+     1628,  172,  172, 1628, 1628, 1628, 1628, 1628, 1628, 1628,
+     1628, 1628, 1628, 1628, 1628, 1616, 1631, 1632, 1633, 1616,
+     1633, 1633, 1633, 1616, 1616, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1624,
+     1634, 1635, 1624,   98, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624,   98, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1625, 1636,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1626, 1628,
+     1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628,
+     1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628,
+     1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628,
+     1628, 1628, 1633, 1633, 1633, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1637,
+     1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628,
+     1628, 1628, 1628, 1628, 1628, 1638, 1628, 1628, 1628, 1628,
+     1628, 1628, 1628, 1633, 1633, 1633, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+
+     1623, 1623, 1623, 1623, 1623, 1623, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1628, 1628, 1628, 1628,
+     1628, 1639, 1637, 1628, 1628, 1628, 1628, 1628, 1628, 1628,
+
+     1628, 1628, 1640, 1638, 1628, 1628, 1628, 1628, 1633, 1633,
+     1633, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1624, 1624, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628, 1628,
+     1628, 1628, 1633, 1633, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1628, 1628, 1628,
+     1628, 1628, 1628, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1624, 1624, 1624,
+     1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1628, 1628, 1628,
+     1628, 1628, 1628, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624, 1624,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+
+     1623, 1623, 1623, 1623, 1623, 1624, 1624, 1624, 1624, 1624,
+     1624, 1624, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1624, 1624, 1624, 1624, 1624, 1624, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1623, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1623, 1623, 1624, 1624, 1624, 1624, 1624, 1625, 1625, 1625,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1624, 1624, 1624,
+
+     1624, 1624, 1624, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1625, 1625, 1625, 1623, 1623, 1623, 1623, 1623, 1623, 1623,
+     1624, 1624, 1624, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
+     1623, 1623, 1623, 1623, 1623, 1623, 1623, 1624, 1624, 1624,
+     1625, 1625, 1625, 1625, 1625, 1625, 1625, 1623, 1623, 1623,
+     1623, 1623, 1623, 1624, 1624, 1625, 1625, 1625, 1625, 1625,
+     1625, 1623, 1623, 1623, 1623, 1623, 1624, 1624, 1625, 1625,
+     1625, 1625, 1625, 1623, 1623, 1623, 1623, 1624, 1625, 1625,
+     1625, 1625, 1623, 1623, 1623, 1623, 1624, 1625, 1625, 1625,
+     1625, 1623, 1623, 1623, 1623, 1624, 1625, 1625, 1625, 1625,
+
+     1623, 1623, 1623, 1624, 1625, 1625, 1625, 1623, 1623, 1625,
+     1625, 1623, 1625, 1623, 1625,    0, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616
     } ;
 
-static yyconst flex_int16_t yy_nxt[2632] =
+static yyconst flex_int16_t yy_nxt[2694] =
     {   0,
        21,   22,   23,   24,   25,   21,   26,   27,   28,   29,
-       30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
-       40,   41,   42,   43,   44,   45,   46,   47,   48,   49,
-       50,   51,   52,   53,   35,   54,   55,   56,   57,   58,
-       59,   60,   61,   62,   63,   35,   64,   35,   35,   35,
-       35,   65,   35,   66,   21,   35,   67,   35,   35,   35,
-       35,   35,   35,   35,   35,   35,   68,   35,   35,   69,
-       35,   35,   70,   35,   35,   35,   35,   71,   72,   73,
-       74,   75,   76,   23,   77,   78,   75,   79,   80,   81,
-       82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
-
-       92,   93,   94,   95,   96,   97,   98,   99,  100,  101,
-      102,  103,  104,   88,  105,   88,  106,  107,  108,  109,
-      110,  111,   88,   88,  112,   88,   88,   88,   88,   88,
-       88,   88,  113,   88,  114,   75,   88,  115,  103,  103,
-      103,  103,  103,   88,   88,   88,   88,   88,   88,   88,
-       88,   88,   88,  116,   88,   88,   88,   88,  117,  118,
-      119,  120,   75,   76,   23,   77,   78,   75,  121,   80,
-       81,   82,   83,   84,   85,   86,  122,  123,  124,  125,
-      126,   92,   93,   94,   95,   96,   97,  127,  128,  129,
-      130,  131,  132,  133,  134,  135,  123,  136,  137,  138,
-
-      139,  140,  141,  142,  143,  144,  145,  123,  146,  123,
-      123,  123,  123,  113,  123,  114,   75,  123,  147,  123,
-      123,  123,  123,  123,  123,  123,  123,  123,  148,  123,
-      123,  149,  123,  123,  150,  123,  123,  123,  123,  117,
-      118,  119,  151,   75,   75,   20,   75,   75,   75,  152,
-       75,   75,   75,   75,   75,  153,   75,  154,  224,  287,
-      125,  126,   75,   75,   75,  156,   75,   75,  219,  225,
-      229,  230,  198,  199,  198,  199,  200,  961,  200,  232,
-      233,  234,  220,  235,  246,  236,  240,  201,  247,  201,
-      241,  237,  244,  242,   75,  245,   75,   75,  238,  239,
-
-      249,  251,  248,  258,  252,  260,  243,  253,  262,  261,
-      250,  293,  287,  259,  434,  288,  229,  230,  263,  435,
-       75,   75,   75,   75,   75,   20,   75,   75,   75,  152,
-       75,   75,   75,   75,   75,  153,   75,  154,  226,  226,
-      125,  126,   75,   75,   75,  156,   75,   75,  202,  268,
-      202,  219,  295,  264,  300,  294,  227,  265,  227,  269,
-      266,  267,  322,  296,  962,  220,  232,  233,  288,  228,
-      324,  300,  323,  295,   75,  326,   75,   75,  325,  272,
-      439,  300,  273,  274,  341,  327,  227,  359,  227,  275,
-      276,  277,  963,  440,  278,  279,  228,  360,  300,  280,
-
-       75,   75,   75,   21,   22,  157,   24,   21,  158,  159,
-       27,   28,   29,   30,  160,  161,  162,  163,  164,  165,
-      166,  167,  168,  169,   41,  170,   43,  171,  172,  173,
-      174,  175,  176,  177,  164,  164,  164,  164,  164,  178,
-      164,  179,  180,  181,  164,  164,  182,  183,  164,  164,
-      164,  164,  164,  164,  184,  164,  185,   21,  164,  186,
-      187,  188,  175,  189,  190,  164,  164,  164,  164,  191,
-      164,  192,  193,  194,  164,  195,  196,  164,  164,  164,
-       71,   72,   73,  197,   21,  198,  199,   21,   21,  200,
-      964,   21,   21,   21,   21,   21,   21,  204,   21,  293,
-
-      201,   21,   21,  204,  204,   21,   21,   21,   21,  226,
-      226,  423,  483,  311,  328,  311,  354,  332,  329,  355,
-      312,  333,  330,  313,  446,  484,  424,  227,  334,  227,
-      289,  289,  311,  335,  311,   21,   21,   21,   21,  462,
-      350,  463,  289,  340,  351,  314,  368,  352,  361,  289,
-      289,  362,  418,  446,  363,  965,  369,  227,  419,  227,
-      353,  205,   21,  206,   21,   21,  198,  199,   21,   21,
-      200,  966,   21,   21,   21,   21,   21,   21,  204,   21,
-      447,  201,   21,   21,  204,  204,   21,   21,   21,   21,
-      315,  311,  356,  311,  316,  469,  357,  311,  370,  311,
-
-      448,  289,  371,  311,  446,  311,  372,  289,  317,  289,
-      358,  446,  470,  289,  289,  289,   21,   21,   21,   21,
-      289,  289,  344,  373,  345,  318,  346,  375,  379,  446,
-      300,  376,  347,  374,  377,  378,  446,  456,  380,  348,
-      349,  844,  205,   21,  206,   21,   21,  198,  199,  457,
-       25,  200,  842,   21,   21,   21,   21,  300,   21,  204,
-      412,  409,  201,   21,   21,  204,  204,   21,   21,   21,
-      311,  402,  311,  409,  383,  657,  811,  384,  385,  449,
-      289,  967,  812,  402,  386,  387,  388,  289,  289,  389,
-      390,  413,  409,  409,  391,  541,  533,  409,  414,  534,
-
-      446,  336,  402,  402,  542,  415,  208,  402,  209,  446,
-      417,  409,  210,  488,  968,  416,  489,  526,  969,  527,
-      409,  402,  490,  211,   21,  212,   21,   21,  198,  199,
-      402,   25,  200,  970,   21,   21,   21,   21,  843,   21,
-      204,  586,  426,  201,   21,   21,  204,  204,   21,   21,
-       21,  427,  342,  342,  587,  499,  409,  500,  409,  971,
-      572,  501,  431,  655,  342,  342,  402,  522,  402,  432,
-      301,  217,  301,  217,  226,  226,  565,  573,  566,  523,
-      409,  972,  301,  343,  301,  559,  428,  208,  429,  209,
-      402,  588,  227,  210,  227,  430,  973,  560,  974,  589,
-
-      301,  217,  301,  217,  211,   21,  212,   21,  218,  218,
-      343,  975,  301,  978,  301,  979,  218,  218,  218,  218,
-      218,  218,  227,  433,  227,  476,  298,  298,  477,  579,
-      478,  604,  580,  605,  581,  980,  981,  606,  479,  982,
-      983,  480,  582,  984, 1590,  583, 1590,  218,  218,  218,
-      218,  218,  218,  290,  290,  446,  985,  300,  986,  409,
-      989,  290,  290,  290,  290,  290,  290,  409,  311,  402,
-      311,  311,  990,  311, 1590,  991, 1590,  402,  289,  992,
-      409,  289,  446,  996,  300,  289,  289,  997,  519,  289,
-      402,  998,  290,  290,  290,  290,  290,  290,  297,  297,
-
-      446,  342,  342,  999, 1000,  656,  298,  299,  298,  299,
-      298,  298, 1003,  300,  409,  311,  301,  520,  301,  301,
-      300,  301,  827, 1004,  402,  289,  639,  593,  828,  302,
-      594,  623,  289,  289,  993, 1005,  595,  298,  299,  298,
-      299,  298,  298,  311,  300,  311,  301,  995,  301,  301,
-      300,  301,  446,  289,  409, 1006,  302,  304,  304, 1007,
-      289,  289, 1008,  409,  402,  304,  305,  304,  306,  304,
-      304,  625,  307,  402, 1001,  311,  308,  311, 1009,  307,
-      626, 1010, 1011,  309,  310,  289, 1012, 1013,  307,  994,
-     1014, 1002,  289,  528, 1015,  409,  304,  311,  304,  311,
-
-      304,  304,  311,  307,  311,  402,  529, 1016,  409,  307,
-     1017, 1018,  289, 1019, 1020,  307,  339,  339,  402,  289,
-      289,  311, 1021,  311,  339,  339,  339,  339,  339,  339,
-      311,  289,  311,  301, 1022,  301, 1023, 1024,  289,  289,
-      289,  641, 1025, 1026, 1027, 1028,  719,  289,  289, 1029,
-     1030, 1031, 1032, 1033,  642,  339,  339,  339,  339,  339,
-      339,  399,  399,  301, 1034,  301, 1035,  551, 1036,  399,
-      399,  399,  399,  399,  399,  311, 1037,  311, 1038, 1039,
-     1040, 1041,  728, 1042, 1043,  289, 1044, 1045, 1046, 1047,
-     1048, 1049,  289,  289, 1050, 1051, 1052, 1053, 1054, 1055,
-
-      399,  399,  399,  399,  399,  399,  403,  403, 1056, 1057,
-     1058, 1059, 1060, 1061,  403,  403,  403,  403,  403,  403,
-     1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072,
-     1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
-     1066, 1083, 1084, 1085, 1086,  403,  403,  403,  403,  403,
-      403,  407,  407, 1087, 1088, 1089, 1090, 1091, 1092,  407,
-      408,  407,  409,  407,  407, 1093,  410, 1094, 1095, 1096,
-      411, 1097, 1098,  410, 1099, 1100, 1101, 1102, 1103, 1104,
-     1105, 1106,  410, 1107, 1108, 1109, 1110, 1111, 1112,  446,
-      407,  409,  407,  409,  407,  407,  446,  410,  446, 1115,
-
-     1116, 1117, 1118,  410, 1119, 1120, 1121, 1122, 1123,  410,
-      218,  218, 1124, 1125, 1126, 1127, 1128, 1129,  218,  218,
-      218,  218,  218,  218, 1130, 1131, 1132, 1133,  227, 1134,
-      227, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1113, 1142,
-     1143, 1144, 1145, 1114, 1146, 1147, 1148, 1149, 1150,  218,
-      218,  218,  218,  218,  218, 1151, 1152, 1153,  227, 1154,
-      227,  290,  290, 1155, 1156, 1157, 1158, 1159, 1160,  290,
-      290,  290,  290,  290,  290, 1161, 1162, 1163, 1164,  516,
-     1165,  516, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
-     1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
-
-      290,  290,  290,  290,  290,  290, 1184, 1185, 1186,  516,
-     1187,  516,  339,  339, 1188, 1189, 1190, 1191, 1192, 1193,
-      339,  339,  339,  339,  339,  339, 1194, 1195, 1196, 1197,
-      553, 1198,  553, 1199, 1200, 1201,  446,  446, 1202, 1203,
-     1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
-     1216,  339,  339,  339,  339,  339,  339, 1217, 1218, 1219,
-      553, 1214,  553,  399,  399, 1220, 1215, 1221, 1222, 1223,
-     1224,  399,  399,  399,  399,  399,  399, 1225, 1226, 1227,
-     1228,  621, 1229,  621, 1230, 1231, 1232, 1233, 1234, 1235,
-     1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
-
-     1246, 1247,  399,  399,  399,  399,  399,  399, 1248, 1249,
-     1250,  621, 1251,  621,  403,  403, 1252, 1254, 1255, 1256,
-     1257, 1253,  403,  403,  403,  403,  403,  403, 1258, 1259,
-     1260, 1261,  622, 1262,  622, 1263, 1264, 1265, 1266, 1267,
-     1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
-     1278, 1279, 1280,  403,  403,  403,  403,  403,  403, 1281,
-     1282, 1283,  622, 1284,  622,  976,  976, 1285,  976,  976,
-      976, 1286,  976,  976,  976,  976,  976, 1288,  976, 1289,
-     1290, 1291, 1292, 1293, 1287,  976,  976,  976,  976,  976,
-     1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
-
-     1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
-     1314, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,  976,
-     1324, 1326, 1327, 1315, 1328, 1329, 1330, 1331, 1325, 1332,
-     1333, 1334, 1335, 1336, 1337, 1338, 1341, 1342, 1343, 1339,
-     1344, 1345,  976,  976,  976,  987,  987, 1340,  987,  987,
-      987, 1346,  987,  987,  987,  987,  987, 1347,  987, 1348,
-     1349, 1350, 1351, 1352, 1354,  987,  987,  987,  987,  987,
-     1355, 1353, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
-     1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
-     1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,  987,
-
-     1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
-     1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
-     1403, 1404,  987,  987,  987,  976,  976, 1405,  976,  976,
-      976, 1406,  976,  976,  976,  976,  976, 1407,  976, 1408,
-     1409, 1410, 1411, 1412, 1413,  976,  976,  976,  976,  976,
-     1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
-     1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
-     1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,  976,
-     1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
-     1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
-
-     1466, 1467,  976,  976,  976,  987,  987, 1463,  987,  987,
-      987, 1464,  987,  987,  987,  987,  987, 1468,  987, 1469,
-     1470, 1471, 1475, 1476, 1465,  987,  987,  987,  987,  987,
-     1472, 1477, 1478, 1479, 1473, 1482, 1483, 1480, 1484, 1485,
-     1486, 1487, 1488, 1489, 1490, 1491, 1492, 1474, 1493, 1494,
-     1481, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,  987,
-     1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
-     1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
-     1523, 1524,  987,  987,  987, 1525, 1526, 1527, 1528, 1529,
-     1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
-
-     1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
-     1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
-     1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
-     1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
-     1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
-       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
-       20,  155,  155,  155,  155,  155,  155,  155,  155,  155,
-      155,  155,   21,   21,   21,   21,   21,   21,   21,   21,
-       21,   21,   21,  203,  203,  203,  203,  203,  203,  203,
-      203,  203,  203,  203,  207,  207,  207,  207,  207,  207,
-
-      207,  207,  207,  207,  207,  215,  215,  215,  215,  215,
-      215,  215,  215,  215,  215,  215,  217,  217,  217,  217,
-      217,  217,  217,  217,  289,  518,  289,  960,  289,  289,
-      289,  289,  338,  959,  338,  338,  338,  338,  338,  338,
-      398,  958,  957,  956,  955,  398,  398,  398,  400,  400,
-      400,  400,  400,  400,  400,  400,  400,  400,  400,  402,
-      954,  402,  953,  402,  402,  402,  402,  404,  952,  404,
-      404,  404,  404,  404,  404,  404,  404,  404,  406,  951,
-      406,  406,  406,  406,  406,  406,  406,  406,  406,  443,
-      950,  443,  443,  443,  443,  443,  443,  443,  443,  443,
-
-      444,  949,  444,  445,  445,  445,  948,  947,  445,  445,
-      946,  445,  517,  945,  517,  944,  517,  517,  517,  517,
-      554,  943,  554,  554,  554,  554,  554,  554,  977,  942,
-      977,  977,  977,  977,  977,  977,  977,  977,  977,  988,
-      941,  988,  988,  988,  988,  988,  988,  988,  988,  988,
-      976,  940,  976,  976,  976,  976,  976,  976,  976,  976,
-      976,  987,  939,  987,  987,  987,  987,  987,  987,  987,
-      987,  987,  938,  937,  936,  935,  934,  933,  932,  931,
-      930,  929,  928,  927,  926,  925,  924,  923,  922,  921,
-      920,  919,  918,  917,  916,  915,  914,  913,  912,  911,
-
-      910,  909,  908,  907,  906,  905,  904,  903,  902,  901,
-      900,  899,  898,  897,  896,  895,  894,  893,  892,  891,
-      890,  889,  888,  887,  886,  885,  884,  883,  882,  881,
-      880,  879,  878,  877,  876,  875,  874,  873,  872,  871,
-      870,  869,  868,  867,  866,  865,  864,  863,  862,  861,
-      860,  859,  858,  857,  856,  855,  854,  853,  852,  851,
-      850,  849,  848,  847,  846,  845,  841,  840,  839,  838,
-      837,  836,  835,  834,  833,  832,  831,  830,  829,  826,
-      825,  824,  823,  822,  821,  820,  819,  818,  817,  816,
-      815,  814,  813,  810,  809,  808,  807,  806,  805,  804,
-
-      803,  802,  801,  800,  799,  798,  797,  796,  795,  794,
-      793,  792,  791,  790,  789,  788,  787,  786,  785,  784,
-      783,  782,  781,  780,  779,  778,  777,  776,  775,  774,
-      773,  772,  771,  770,  769,  768,  767,  766,  765,  764,
-      763,  762,  761,  760,  759,  758,  757,  756,  755,  754,
-      753,  752,  751,  750,  749,  748,  747,  746,  745,  744,
-      743,  742,  741,  740,  739,  738,  737,  736,  735,  734,
-      733,  732,  731,  730,  729,  727,  726,  725,  724,  723,
-      722,  721,  720,  718,  717,  716,  715,  714,  713,  712,
-      711,  710,  709,  708,  707,  706,  705,  704,  703,  702,
-
-      701,  700,  699,  698,  697,  696,  695,  694,  693,  692,
-      691,  690,  689,  688,  687,  686,  685,  684,  683,  682,
-      681,  680,  679,  678,  677,  676,  675,  674,  673,  672,
-      671,  670,  669,  668,  667,  666,  665,  664,  663,  662,
-      661,  660,  659,  658,  445,  446,  442,  654,  653,  652,
-      651,  650,  649,  648,  647,  646,  645,  644,  643,  640,
-      638,  637,  636,  635,  634,  633,  632,  631,  630,  629,
-      628,  627,  624,  401,  620,  619,  618,  617,  616,  615,
-      614,  613,  612,  611,  610,  609,  608,  607,  603,  602,
-      601,  600,  599,  598,  597,  596,  592,  591,  590,  585,
-
-      584,  578,  577,  576,  575,  574,  571,  570,  569,  568,
-      567,  564,  563,  562,  561,  558,  557,  556,  555,  552,
-      550,  549,  548,  547,  546,  545,  544,  543,  540,  539,
-      538,  537,  536,  535,  532,  531,  530,  525,  524,  521,
-      515,  514,  513,  512,  511,  510,  509,  508,  507,  506,
-      505,  504,  503,  502,  498,  497,  496,  495,  494,  493,
-      492,  491,  487,  486,  485,  482,  481,  475,  474,  473,
-      472,  471,  468,  467,  466,  465,  464,  461,  460,  459,
-      458,  455,  454,  453,  452,  451,  450,  216,  213,  446,
-      295,  442,  441,  438,  437,  436,  425,  422,  421,  420,
-
-      303,  296,  293,  292,  405,  401,  397,  396,  395,  394,
-      393,  392,  382,  381,  367,  366,  365,  364,  337,  331,
-      321,  320,  319,  303,  292,  291,  216,  214,  213,  286,
-      285,  284,  283,  282,  281,  271,  270,  257,  256,  255,
-      254,  231,  223,  222,  221,  216,  214,  213, 1590,   19,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590
+       30,   31,   32,   33,   34,   35,   36,   37,   38,   38,
+       39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
+       49,   50,   51,   52,   53,   35,   54,   55,   56,   57,
+       58,   59,   60,   61,   62,   63,   35,   64,   35,   35,
+       35,   35,   65,   35,   66,   21,   35,   67,   35,   35,
+       35,   35,   35,   35,   35,   35,   35,   68,   35,   35,
+       69,   35,   35,   70,   35,   35,   35,   35,   71,   72,
+       73,   74,   75,   76,   23,   77,   78,   75,   79,   80,
+       81,   82,   83,   84,   85,   86,   87,   88,   89,   90,
+
+       91,   91,   92,   93,   94,   95,   96,   97,   98,   99,
+      100,  101,  102,  103,  104,   88,  105,   88,  106,  107,
+      108,  109,  110,  111,   88,   88,  112,   88,   88,   88,
+       88,   88,   88,   88,  113,   88,  114,   75,   88,  115,
+      103,  103,  103,  103,  103,   88,   88,   88,   88,   88,
+       88,   88,   88,   88,   88,  116,   88,   88,   88,   88,
+      117,  118,  119,  120,   75,   76,   23,   77,   78,   75,
+      121,   80,   81,   82,   83,   84,   85,   86,  122,  123,
+      124,  125,  126,  126,   92,   93,   94,   95,   96,   97,
+      127,  128,  129,  130,  131,  132,  133,  134,  135,  123,
+
+      136,  137,  138,  139,  140,  141,  142,  143,  144,  145,
+      123,  146,  123,  123,  123,  123,  113,  123,  114,   75,
+      123,  147,  123,  123,  123,  123,  123,  123,  123,  123,
+      123,  148,  123,  123,  149,  123,  123,  150,  123,  123,
+      123,  123,  117,  118,  119,  151,   75,   75,   20,   75,
+       75,   75,  152,   75,   75,   75,   75,   75,  153,   75,
+      154,  224,  287,  125,  126,  126,   75,   75,   75,  156,
+       75,   75,  219,  225,  229,  230,  198,  199,  198,  199,
+      200,  966,  200,  232,  233,  240,  234,  220,  235,  241,
+      236,  201,  242,  201,  244,  246,  237,  245,   75,  247,
+
+       75,   75,  249,  238,  239,  243,  258,  262,  251,  967,
+      268,  252,  250,  248,  253,  260,  259,  263,  288,  261,
+      269,  293,  229,  230,   75,   75,   75,   75,   75,   20,
+       75,   75,   75,  152,   75,   75,   75,   75,   75,  153,
+       75,  154,  219,  300,  125,  126,  126,   75,   75,   75,
+      156,   75,   75,  202,  264,  202,  272,  220,  265,  273,
+      274,  266,  267,  295,  968,  294,  275,  276,  277,  325,
+      300,  278,  279,  232,  233,  296,  280,  326,  311,   75,
+      311,   75,   75,  323,  311,  312,  311,  314,  313,  362,
+      371,  295,  422,  324,  289,  289,  289,  315,  423,  363,
+
+      372,  289,  289,  343,  969,   75,   75,   75,   21,   22,
+      157,   24,   21,  158,  159,   27,   28,   29,   30,  160,
+      161,  162,  163,  164,  165,  166,  167,  167,  168,  169,
+       41,  170,   43,  171,  172,  173,  174,  175,  176,  177,
+      164,  164,  164,  164,  164,  178,  164,  179,  180,  181,
+      164,  164,  182,  183,  164,  164,  164,  164,  164,  164,
+      184,  164,  185,   21,  164,  186,  187,  188,  175,  189,
+      190,  164,  164,  164,  164,  191,  164,  192,  193,  194,
+      164,  195,  196,  164,  164,  164,   71,   72,   73,  197,
+       21,  198,  199,   21,   21,  200,  970,   21,   21,   21,
+
+       21,   21,   21,  204,   21,  287,  201,   21,   21,   21,
+      204,  204,   21,   21,   21,   21,  226,  226,  226,  293,
+      316,  311,  327,  311,  317,  330,  328,  971,  300,  331,
+      311,  289,  311,  332,  427,  227,  329,  227,  318,  289,
+      289,  356,   21,   21,   21,   21,  334,  289,  289,  428,
+      335,  357,  319,  364,  358,  300,  365,  336,  972,  366,
+      359,  288,  337,  342,  360,  227,  450,  227,  205,   21,
+      206,   21,   21,  198,  199,   21,   21,  200,  361,   21,
+       21,   21,   21,   21,   21,  204,   21,  450,  201,   21,
+       21,   21,  204,  204,   21,   21,   21,   21,  226,  226,
+
+      226,  383,  352,  311,  373,  311,  353,  973,  374,  354,
+      438,  384,  375,  289,  376,  439,  453,  227,  377,  227,
+      289,  289,  355,  974,   21,   21,   21,   21,  378,  379,
+      228,  416,  413,  380,  417,  413,  381,  382,  413,  975,
+      450,  418,  406,  451,  466,  406,  467,  227,  406,  227,
+      205,   21,  206,   21,   21,  198,  199,  228,   25,  200,
+      547,   21,   21,   21,   21,  976,   21,  204,  473,  548,
+      201,   21,   21,   21,  204,  204,   21,   21,   21,  311,
+      413,  311,  346,  450,  347,  474,  348,  452,  413,  289,
+      406,  387,  349,  421,  388,  389,  289,  289,  406,  350,
+
+      351,  390,  391,  392,  413,  977,  393,  394,  413,  978,
+      338,  395,  413,  460,  406,  208,  419,  209,  406,  430,
+      492,  210,  406,  493,  854,  461,  420,  526,  431,  494,
+      579,  450,  211,   21,  212,   21,   21,  198,  199,  527,
+       25,  200,  432,   21,   21,   21,   21,  580,   21,  204,
+      300,  437,  201,   21,   21,   21,  204,  204,   21,   21,
+       21,  413,  344,  344,  344,  443,  487,  503,  531,  504,
+      532,  406,  565,  505,  344,  344,  344,  300,  444,  488,
+      217,  301,  217,  301,  566,  663,  226,  226,  226,  450,
+      413,  433,  413,  301,  345,  301,  593,  208,  434,  209,
+
+      406,  538,  406,  210,  539,  227,  572,  227,  573,  594,
+      217,  301,  217,  301,  211,   21,  212,   21,  218,  218,
+      218,  345,  450,  301,  979,  301,  856,  218,  218,  218,
+      218,  218,  218,  480,  435,  227,  481,  227,  482,  586,
+      595,  436,  587,  980,  588,  981,  483,  601,  596,  484,
+      602,  612,  589,  613,  450,  590,  603,  614,  218,  218,
+      218,  218,  218,  218,  290,  290,  290,  982,  983,  311,
+      413,  311,  664,  290,  290,  290,  290,  290,  290,  289,
+      406,  298,  298,  298,  413,  823,  289,  289,  984,  985,
+      986,  824,  855,  413,  406,  344,  344,  344,  450,  987,
+
+     1616,  631, 1616,  406,  290,  290,  290,  290,  290,  290,
+      297,  297,  297,  300,  301,  988,  301,  413,  413,  298,
+      299,  298,  299,  298,  298,  989,  300,  406,  406,  301,
+     1616,  301, 1616,  300,  633,  634,  990,  665,  991,  647,
+      300,  839,  302,  994,  301,  995,  301,  840,  996,  997,
+      298,  299,  298,  299,  298,  298,  311,  300,  311,  301,
+      998,  301,  301,  300,  301,  999,  289, 1000, 1001,  302,
+      304,  304,  304,  523,  289,  413, 1002, 1005,  413,  304,
+      305,  304,  306,  304,  304,  406,  307, 1006,  406,  311,
+      308,  524,  301,  307,  301, 1007, 1008,  309,  310,  289,
+
+      450, 1012,  307, 1013,  450, 1014,  289,  289, 1015, 1016,
+      304,  311,  304,  311,  304,  304,  311,  307,  311, 1019,
+      450,  649, 1020,  307,  650, 1021,  289, 1022, 1023,  307,
+      341,  341,  341,  289,  289, 1024,  311, 1010,  311,  341,
+      341,  341,  341,  341,  341,  311,  289,  311,  311, 1025,
+      311, 1017,  530,  289,  533,  289, 1009, 1026,  289, 1027,
+     1028, 1029,  289,  289, 1030,  289,  289, 1011, 1018, 1031,
+      341,  341,  341,  341,  341,  341,  403,  403,  403, 1032,
+     1033, 1034,  311, 1035,  311,  403,  403,  403,  403,  403,
+      403,  311,  289,  311,  557,  534, 1036, 1037,  727,  289,
+
+      289,  289, 1038, 1039, 1040, 1041, 1042, 1043,  289,  289,
+     1044, 1045, 1046, 1047, 1048, 1049,  403,  403,  403,  403,
+      403,  403,  407,  407,  407, 1050, 1051, 1052, 1053, 1054,
+     1055,  407,  407,  407,  407,  407,  407,  311, 1056,  311,
+     1057, 1058, 1059, 1060,  737, 1061, 1062,  289, 1063, 1064,
+     1065, 1066, 1067, 1068,  289,  289, 1069, 1070, 1071, 1072,
+     1073, 1074,  407,  407,  407,  407,  407,  407,  411,  411,
+      411, 1075, 1076, 1077, 1078, 1079, 1080,  411,  412,  411,
+      413,  411,  411, 1081,  414, 1082, 1083, 1084,  415, 1086,
+     1087,  414, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
+
+      414, 1096, 1097, 1098, 1085, 1099, 1100, 1101,  411,  413,
+      411,  413,  411,  411, 1102,  414, 1103, 1104, 1105, 1106,
+     1107,  414, 1108, 1109, 1110, 1111, 1112,  414,  218,  218,
+      218, 1113, 1114, 1115, 1116, 1117, 1118,  218,  218,  218,
+      218,  218,  218, 1119, 1120, 1121, 1122,  227, 1123,  227,
+     1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,  450,
+      450,  450, 1135, 1136, 1137, 1138, 1139, 1140,  218,  218,
+      218,  218,  218,  218, 1141, 1142, 1143,  227, 1144,  227,
+      290,  290,  290, 1145, 1146, 1147, 1148, 1149, 1150,  290,
+      290,  290,  290,  290,  290, 1151, 1152, 1153, 1154,  520,
+
+     1155,  520, 1156, 1157, 1158, 1159, 1160, 1134, 1133, 1161,
+     1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
+      290,  290,  290,  290,  290,  290, 1172, 1173, 1174,  520,
+     1175,  520,  341,  341,  341, 1176, 1177, 1178, 1179, 1180,
+     1181,  341,  341,  341,  341,  341,  341, 1182, 1183, 1184,
+     1185,  559, 1186,  559, 1187, 1188, 1189, 1190, 1191, 1192,
+     1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
+     1203, 1204,  341,  341,  341,  341,  341,  341, 1205, 1206,
+     1207,  559, 1208,  559,  403,  403,  403, 1209, 1210, 1211,
+     1212, 1213, 1214,  403,  403,  403,  403,  403,  403, 1215,
+
+     1216, 1217, 1218,  629, 1219,  629, 1220, 1221, 1222, 1223,
+      450,  450, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
+     1232, 1233, 1234, 1235,  403,  403,  403,  403,  403,  403,
+     1238, 1239, 1240,  629, 1236,  629,  407,  407,  407, 1237,
+     1241, 1242, 1243, 1244, 1245,  407,  407,  407,  407,  407,
+      407, 1246, 1247, 1248, 1249,  630, 1250,  630, 1251, 1252,
+     1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
+     1263, 1264, 1265, 1266, 1267, 1268,  407,  407,  407,  407,
+      407,  407, 1269, 1270, 1271,  630, 1272,  630,  992,  992,
+     1273,  992,  992,  992, 1274,  992,  992,  992,  992,  992,
+
+     1275,  992, 1276, 1278, 1279, 1280, 1281, 1277, 1282,  992,
+      992,  992,  992,  992, 1283, 1284, 1285, 1286, 1287, 1288,
+     1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
+     1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
+     1309, 1310, 1312,  992, 1313, 1314, 1315, 1316, 1317, 1318,
+     1319, 1320, 1321, 1322, 1311, 1323, 1324, 1325, 1326, 1327,
+     1328, 1329, 1330, 1331, 1332, 1333,  992,  992,  992, 1003,
+     1003, 1334, 1003, 1003, 1003, 1335, 1003, 1003, 1003, 1003,
+     1003, 1336, 1003, 1337, 1338, 1339, 1340, 1342, 1343, 1344,
+     1003, 1003, 1003, 1003, 1003, 1345, 1346, 1347, 1348, 1341,
+
+     1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1351,
+     1359, 1360, 1361, 1362, 1363, 1364, 1367, 1365, 1368, 1369,
+     1370, 1371, 1372, 1373, 1003, 1366, 1374, 1375, 1376, 1377,
+     1378, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1379, 1387,
+     1388, 1389, 1390, 1391, 1392, 1393, 1394, 1003, 1003, 1003,
+      992,  992, 1395,  992,  992,  992, 1396,  992,  992,  992,
+      992,  992, 1397,  992, 1398, 1399, 1400, 1401, 1402, 1403,
+     1404,  992,  992,  992,  992,  992, 1405, 1406, 1407, 1408,
+     1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
+     1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
+
+     1429, 1430, 1431, 1432, 1433,  992, 1434, 1435, 1436, 1437,
+     1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
+     1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,  992,  992,
+      992, 1003, 1003, 1456, 1003, 1003, 1003, 1457, 1003, 1003,
+     1003, 1003, 1003, 1458, 1003, 1459, 1460, 1461, 1462, 1463,
+     1464, 1465, 1003, 1003, 1003, 1003, 1003, 1466, 1467, 1468,
+     1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
+     1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
+     1489, 1492, 1493, 1494, 1490, 1495, 1003, 1496, 1497, 1498,
+     1501, 1502, 1503, 1499, 1504, 1505, 1508, 1491, 1509, 1506,
+
+     1510, 1511, 1512, 1513, 1514, 1515, 1500, 1516, 1517, 1003,
+     1003, 1003, 1507, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
+     1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
+     1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
+     1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
+     1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
+     1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
+     1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
+     1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
+     1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
+
+     1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
+     1615,   20,   20,   20,   20,   20,   20,   20,   20,   20,
+       20,   20,  155,  155,  155,  155,  155,  155,  155,  155,
+      155,  155,  155,   21,   21,   21,   21,   21,   21,   21,
+       21,   21,   21,   21,  203,  203,  203,  203,  203,  203,
+      203,  203,  203,  203,  203,  207,  207,  207,  207,  207,
+      207,  207,  207,  207,  207,  207,  215,  215,  215,  215,
+      215,  215,  215,  215,  215,  215,  215,  217,  217,  217,
+      217,  217,  217,  217,  217,  289,  522,  289,  965,  289,
+      289,  289,  289,  340,  964,  340,  340,  340,  340,  340,
+
+      340,  402,  963,  962,  961,  960,  402,  402,  402,  404,
+      404,  404,  404,  404,  404,  404,  404,  404,  404,  404,
+      406,  959,  406,  958,  406,  406,  406,  406,  408,  957,
+      408,  408,  408,  408,  408,  408,  408,  408,  408,  410,
+      956,  410,  410,  410,  410,  410,  410,  410,  410,  410,
+      447,  955,  447,  447,  447,  447,  447,  447,  447,  447,
+      447,  448,  954,  448,  449,  449,  449,  953,  952,  449,
+      449,  951,  449,  521,  950,  521,  949,  521,  521,  521,
+      521,  560,  948,  560,  560,  560,  560,  560,  560,  993,
+      947,  993,  993,  993,  993,  993,  993,  993,  993,  993,
+
+     1004,  946, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1004,
+     1004,  992,  945,  992,  992,  992,  992,  992,  992,  992,
+      992,  992, 1003,  944, 1003, 1003, 1003, 1003, 1003, 1003,
+     1003, 1003, 1003,  943,  942,  941,  940,  939,  938,  937,
+      936,  935,  934,  933,  932,  931,  930,  929,  928,  927,
+      926,  925,  924,  923,  922,  921,  920,  919,  918,  917,
+      916,  915,  914,  913,  912,  911,  910,  909,  908,  907,
+      906,  905,  904,  903,  902,  901,  900,  899,  898,  897,
+      896,  895,  894,  893,  892,  891,  890,  889,  888,  887,
+      886,  885,  884,  883,  882,  881,  880,  879,  878,  877,
+
+      876,  875,  874,  873,  872,  871,  870,  869,  868,  867,
+      866,  865,  864,  863,  862,  861,  860,  859,  858,  857,
+      853,  852,  851,  850,  849,  848,  847,  846,  845,  844,
+      843,  842,  841,  838,  837,  836,  835,  834,  833,  832,
+      831,  830,  829,  828,  827,  826,  825,  822,  821,  820,
+      819,  818,  817,  816,  815,  814,  813,  812,  811,  810,
+      809,  808,  807,  806,  805,  804,  803,  802,  801,  800,
+      799,  798,  797,  796,  795,  794,  793,  792,  791,  790,
+      789,  788,  787,  786,  785,  784,  783,  782,  781,  780,
+      779,  778,  777,  776,  775,  774,  773,  772,  771,  770,
+
+      769,  768,  767,  766,  765,  764,  763,  762,  761,  760,
+      759,  758,  757,  756,  755,  754,  753,  752,  751,  750,
+      749,  748,  747,  746,  745,  744,  743,  742,  741,  740,
+      739,  738,  736,  735,  734,  733,  732,  731,  730,  729,
+      728,  726,  725,  724,  723,  722,  721,  720,  719,  718,
+      717,  716,  715,  714,  713,  712,  711,  710,  709,  708,
+      707,  706,  705,  704,  703,  702,  701,  700,  699,  698,
+      697,  696,  695,  694,  693,  692,  691,  690,  689,  688,
+      687,  686,  685,  684,  683,  682,  681,  680,  679,  678,
+      677,  676,  675,  674,  673,  672,  671,  670,  669,  668,
+
+      667,  666,  449,  450,  446,  662,  661,  660,  659,  658,
+      657,  656,  655,  654,  653,  652,  651,  648,  646,  645,
+      644,  643,  642,  641,  640,  639,  638,  637,  636,  635,
+      632,  405,  628,  627,  626,  625,  624,  623,  622,  621,
+      620,  619,  618,  617,  616,  615,  611,  610,  609,  608,
+      607,  606,  605,  604,  600,  599,  598,  597,  592,  591,
+      585,  584,  583,  582,  581,  578,  577,  576,  575,  574,
+      571,  570,  569,  568,  567,  564,  563,  562,  561,  558,
+      556,  555,  554,  553,  552,  551,  550,  549,  546,  545,
+      544,  543,  542,  541,  540,  537,  536,  535,  529,  528,
+
+      525,  519,  518,  517,  516,  515,  514,  513,  512,  511,
+      510,  509,  508,  507,  506,  502,  501,  500,  499,  498,
+      497,  496,  495,  491,  490,  489,  486,  485,  479,  478,
+      477,  476,  475,  472,  471,  470,  469,  468,  465,  464,
+      463,  462,  459,  458,  457,  456,  455,  454,  216,  213,
+      450,  295,  446,  445,  442,  441,  440,  429,  426,  425,
+      424,  303,  296,  293,  292,  409,  405,  401,  400,  399,
+      398,  397,  396,  386,  385,  370,  369,  368,  367,  339,
+      333,  322,  321,  320,  303,  292,  291,  216,  214,  213,
+      286,  285,  284,  283,  282,  281,  271,  270,  257,  256,
+
+      255,  254,  231,  223,  222,  221,  216,  214,  213, 1616,
+       19, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616
+
     } ;
 
-static yyconst flex_int16_t yy_chk[2632] =
+static yyconst flex_int16_t yy_chk[2694] =
     {   0,
         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
@@ -1259,7 +1274,7 @@
         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
-        3,    5,    5,    5,    5,    5,    5,    5,    5,    5,
+        3,    3,    5,    5,    5,    5,    5,    5,    5,    5,
         5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
 
         5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
@@ -1268,7 +1283,7 @@
         5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
         5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
         5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
-        5,    5,    7,    7,    7,    7,    7,    7,    7,    7,
+        5,    5,    5,    5,    7,    7,    7,    7,    7,    7,
         7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
         7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
         7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
@@ -1277,25 +1292,25 @@
         7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
         7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
         7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
-        7,    7,    7,    9,    9,    9,    9,    9,    9,    9,
-        9,    9,    9,    9,    9,    9,    9,    9,   36,   72,
-        9,    9,    9,    9,    9,    9,    9,    9,   28,   36,
-       41,   41,   13,   13,   14,   14,   13,  800,   14,   43,
-       43,   45,   28,   45,   48,   45,   46,   13,   48,   14,
-       46,   45,   47,   46,    9,   47,    9,    9,   45,   45,
-
-       49,   50,   48,   55,   50,   56,   46,   50,   57,   56,
-       49,   87,  118,   55,  191,   72,   94,   94,   57,  191,
-        9,    9,    9,   10,   10,   10,   10,   10,   10,   10,
-       10,   10,   10,   10,   10,   10,   10,   10,   37,   37,
-       10,   10,   10,   10,   10,   10,   10,   10,   13,   59,
-       14,   81,   89,   58,   91,   87,   37,   58,   37,   59,
-       58,   58,  107,   89,  801,   81,   96,   96,  118,   37,
-      108,  167,  107,  124,   10,  109,   10,   10,  108,   62,
-      195,   91,   62,   62,  124,  109,   37,  131,   37,   62,
-       62,   62,  802,  195,   62,   62,   37,  131,  167,   62,
+        7,    7,    7,    7,    7,    7,    9,    9,    9,    9,
+        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
+        9,   36,   72,    9,    9,    9,    9,    9,    9,    9,
+        9,    9,   28,   36,   41,   41,   13,   13,   14,   14,
+       13,  800,   14,   43,   43,   46,   45,   28,   45,   46,
+       45,   13,   46,   14,   47,   48,   45,   47,    9,   48,
+
+        9,    9,   49,   45,   45,   46,   55,   57,   50,  801,
+       59,   50,   49,   48,   50,   56,   55,   57,   72,   56,
+       59,   87,   94,   94,    9,    9,    9,   10,   10,   10,
+       10,   10,   10,   10,   10,   10,   10,   10,   10,   10,
+       10,   10,   81,   91,   10,   10,   10,   10,   10,   10,
+       10,   10,   10,   13,   58,   14,   62,   81,   58,   62,
+       62,   58,   58,   89,  802,   87,   62,   62,   62,  108,
+       91,   62,   62,   96,   96,   89,   62,  108,   99,   10,
+       99,   10,   10,  107,  100,   99,  100,  100,   99,  131,
+      137,  124,  178,  107,  100,   99,   99,  100,  178,  131,
 
-       10,   10,   10,   11,   11,   11,   11,   11,   11,   11,
+      137,  100,  100,  124,  803,   10,   10,   10,   11,   11,
        11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
        11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
        11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
@@ -1303,244 +1318,251 @@
        11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
        11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
        11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
-       11,   11,   11,   11,   15,   15,   15,   15,   15,   15,
-      803,   15,   15,   15,   15,   15,   15,   15,   15,  122,
+       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
+       15,   15,   15,   15,   15,   15,  804,   15,   15,   15,
 
-       15,   15,   15,   15,   15,   15,   15,   15,   15,   38,
-       38,  182,  259,   99,  110,   99,  129,  112,  110,  129,
-       99,  112,  110,   99,  208,  259,  182,   38,  112,   38,
-       99,   99,  100,  112,  100,   15,   15,   15,   15,  244,
-      128,  244,  100,  122,  128,  100,  137,  128,  132,  100,
-      100,  132,  178,  209,  132,  804,  137,   38,  178,   38,
-      128,   15,   15,   15,   15,   16,   16,   16,   16,   16,
-       16,  805,   16,   16,   16,   16,   16,   16,   16,   16,
-      208,   16,   16,   16,   16,   16,   16,   16,   16,   16,
-      101,  101,  130,  101,  101,  250,  130,  103,  138,  103,
-
-      209,  101,  138,  102,  657,  102,  138,  103,  101,  101,
-      130,  655,  250,  102,  103,  103,   16,   16,   16,   16,
-      102,  102,  127,  139,  127,  102,  127,  140,  141,  210,
-      297,  140,  127,  139,  140,  140,  449,  238,  141,  127,
-      127,  657,   16,   16,   16,   16,   17,   17,   17,  238,
-       17,   17,  655,   17,   17,   17,   17,  297,   17,   17,
-      173,  173,   17,   17,   17,   17,   17,   17,   17,   17,
-      115,  173,  115,  175,  144,  449,  624,  144,  144,  210,
-      115,  806,  624,  175,  144,  144,  144,  115,  115,  144,
-      144,  174,  174,  176,  144,  327,  320,  177,  174,  320,
-
-      656,  115,  174,  176,  327,  176,   17,  177,   17,  447,
-      177,  186,   17,  263,  807,  176,  263,  314,  808,  314,
-      189,  186,  263,   17,   17,   17,   17,   18,   18,   18,
-      189,   18,   18,  809,   18,   18,   18,   18,  656,   18,
-       18,  369,  186,   18,   18,   18,   18,   18,   18,   18,
-       18,  186,  125,  125,  369,  272,  187,  272,  188,  810,
-      360,  272,  189,  447,  126,  126,  187,  309,  188,  189,
-      125,  228,  125,  228,  226,  226,  354,  360,  354,  309,
-      190,  811,  126,  125,  126,  348,  187,   18,  188,   18,
-      190,  370,  226,   18,  226,  188,  812,  348,  816,  370,
-
-      125,  228,  125,  228,   18,   18,   18,   18,   26,   26,
-      125,  817,  126,  821,  126,  822,   26,   26,   26,   26,
-       26,   26,  226,  190,  226,  256,  298,  298,  256,  366,
-      256,  383,  366,  383,  366,  824,  825,  383,  256,  826,
-      827,  256,  366,  828,  298,  366,  298,   26,   26,   26,
-       26,   26,   26,   79,   79,  448,  832,  298,  833,  407,
-      837,   79,   79,   79,   79,   79,   79,  409,  304,  407,
-      304,  305,  838,  305,  298,  840,  298,  409,  304,  841,
-      426,  305,  842,  845,  298,  304,  304,  847,  305,  305,
-      426,  848,   79,   79,   79,   79,   79,   79,   90,   90,
-
-      844,  342,  342,  849,  850,  448,   90,   90,   90,   90,
-       90,   90,  853,   90,  408,  306,   90,  306,   90,  342,
-       90,  342,  640,  854,  408,  306,  426,  374,  640,   90,
-      374,  408,  306,  306,  842,  855,  374,   90,   90,   90,
-       90,   90,   90,  311,   90,  311,   90,  844,   90,  342,
-       90,  342,  843,  311,  412,  858,   90,   98,   98,  859,
-      311,  311,  861,  413,  412,   98,   98,   98,   98,   98,
-       98,  412,   98,  413,  852,  315,   98,  315,  863,   98,
-      413,  864,  866,   98,   98,  315,  867,  868,   98,  843,
-      869,  852,  315,  315,  870,  428,   98,   98,   98,   98,
-
-       98,   98,  316,   98,  316,  428,  316,  871,  429,   98,
-      872,  873,  316,  874,  875,   98,  121,  121,  429,  316,
-      316,  336,  876,  336,  121,  121,  121,  121,  121,  121,
-      520,  336,  520,  518,  878,  518,  879,  880,  336,  336,
-      520,  428,  881,  882,  884,  885,  520,  520,  520,  886,
-      888,  889,  890,  891,  429,  121,  121,  121,  121,  121,
-      121,  152,  152,  518,  892,  518,  893,  336,  894,  152,
-      152,  152,  152,  152,  152,  529,  895,  529,  896,  897,
-      898,  900,  529,  901,  902,  529,  904,  906,  907,  908,
-      909,  910,  529,  529,  911,  912,  913,  914,  915,  916,
-
-      152,  152,  152,  152,  152,  152,  159,  159,  917,  918,
-      919,  920,  921,  923,  159,  159,  159,  159,  159,  159,
-      924,  925,  926,  928,  929,  930,  931,  934,  935,  937,
-      939,  940,  942,  943,  944,  945,  946,  947,  948,  949,
-      928,  950,  951,  952,  954,  159,  159,  159,  159,  159,
-      159,  172,  172,  955,  956,  957,  958,  960,  961,  172,
-      172,  172,  172,  172,  172,  962,  172,  964,  965,  966,
-      172,  967,  968,  172,  969,  970,  971,  973,  974,  975,
-      979,  981,  172,  982,  984,  985,  986,  990,  992,  993,
-      172,  172,  172,  172,  172,  172,  994,  172,  995,  996,
-
-      997,  999, 1001,  172, 1002, 1003, 1004, 1005, 1006,  172,
-      218,  218, 1008, 1009, 1010, 1013, 1015, 1016,  218,  218,
-      218,  218,  218,  218, 1018, 1020, 1021, 1022,  218, 1023,
-      218, 1024, 1025, 1026, 1027, 1028, 1029, 1030,  993, 1031,
-     1034, 1035, 1036,  994, 1037, 1038, 1040, 1041, 1042,  218,
-      218,  218,  218,  218,  218, 1043, 1044, 1045,  218, 1047,
-      218,  290,  290, 1048, 1050, 1052, 1053, 1054, 1055,  290,
-      290,  290,  290,  290,  290, 1056, 1057, 1058, 1059,  290,
-     1060,  290, 1061, 1063, 1065, 1066, 1067, 1068, 1069, 1070,
-     1072, 1073, 1074, 1077, 1079, 1080, 1082, 1084, 1085, 1086,
-
-      290,  290,  290,  290,  290,  290, 1087, 1088, 1089,  290,
-     1090,  290,  339,  339, 1091, 1092, 1093, 1094, 1095, 1098,
-      339,  339,  339,  339,  339,  339, 1099, 1100, 1101, 1102,
-      339, 1106,  339, 1107, 1108, 1112, 1113, 1114, 1115, 1117,
-     1118, 1119, 1120, 1121, 1123, 1124, 1126, 1127, 1128, 1130,
-     1133,  339,  339,  339,  339,  339,  339, 1134, 1135, 1136,
-      339, 1131,  339,  399,  399, 1137, 1131, 1138, 1139, 1142,
-     1144,  399,  399,  399,  399,  399,  399, 1145, 1146, 1148,
-     1149,  399, 1150,  399, 1152, 1154, 1155, 1156, 1158, 1159,
-     1160, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171,
-
-     1173, 1174,  399,  399,  399,  399,  399,  399, 1176, 1177,
-     1178,  399, 1180,  399,  403,  403, 1181, 1183, 1184, 1185,
-     1186, 1181,  403,  403,  403,  403,  403,  403, 1187, 1188,
-     1189, 1192,  403, 1194,  403, 1195, 1196, 1197, 1198, 1199,
-     1200, 1201, 1203, 1205, 1206, 1207, 1208, 1209, 1210, 1212,
-     1213, 1214, 1215,  403,  403,  403,  403,  403,  403, 1216,
-     1217, 1218,  403, 1220,  403,  818,  818, 1221,  818,  818,
-      818, 1222,  818,  818,  818,  818,  818, 1225,  818, 1227,
-     1229, 1230, 1232, 1233, 1222,  818,  818,  818,  818,  818,
-     1234, 1235, 1236, 1239, 1241, 1243, 1244, 1245, 1246, 1247,
-
-     1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259,
-     1260, 1263, 1271, 1272, 1273, 1274, 1275, 1276, 1277,  818,
-     1278, 1279, 1280, 1260, 1281, 1282, 1283, 1284, 1278, 1285,
-     1286, 1287, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1293,
-     1297, 1299,  818,  818,  818,  834,  834, 1293,  834,  834,
-      834, 1300,  834,  834,  834,  834,  834, 1301,  834, 1302,
-     1303, 1304, 1305, 1306, 1307,  834,  834,  834,  834,  834,
-     1308, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
-     1317, 1318, 1319, 1320, 1321, 1322, 1323, 1326, 1327, 1328,
-     1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,  834,
-
-     1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
-     1351, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363,
-     1364, 1365,  834,  834,  834,  977,  977, 1366,  977,  977,
-      977, 1367,  977,  977,  977,  977,  977, 1368,  977, 1369,
-     1372, 1373, 1374, 1375, 1376,  977,  977,  977,  977,  977,
-     1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1387,
-     1388, 1389, 1390, 1391, 1392, 1395, 1396, 1397, 1398, 1399,
-     1400, 1401, 1402, 1404, 1405, 1407, 1408, 1409, 1410,  977,
-     1412, 1413, 1414, 1416, 1417, 1419, 1420, 1421, 1422, 1424,
-     1425, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1436, 1437,
-
-     1439, 1440,  977,  977,  977,  988,  988, 1438,  988,  988,
-      988, 1438,  988,  988,  988,  988,  988, 1442,  988, 1444,
-     1445, 1446, 1448, 1450, 1438,  988,  988,  988,  988,  988,
-     1447, 1451, 1452, 1453, 1447, 1454, 1455, 1453, 1457, 1459,
-     1460, 1461, 1462, 1463, 1464, 1465, 1466, 1447, 1467, 1470,
-     1453, 1472, 1473, 1474, 1478, 1479, 1480, 1481, 1482,  988,
-     1483, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
-     1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
-     1506, 1508,  988,  988,  988, 1509, 1510, 1511, 1512, 1514,
-     1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
-
-     1526, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1536, 1538,
-     1539, 1540, 1542, 1543, 1545, 1546, 1547, 1548, 1549, 1550,
-     1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
-     1561, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1572,
-     1573, 1574, 1576, 1577, 1580, 1581, 1583, 1585, 1586, 1587,
-     1591, 1591, 1591, 1591, 1591, 1591, 1591, 1591, 1591, 1591,
-     1591, 1592, 1592, 1592, 1592, 1592, 1592, 1592, 1592, 1592,
-     1592, 1592, 1593, 1593, 1593, 1593, 1593, 1593, 1593, 1593,
-     1593, 1593, 1593, 1594, 1594, 1594, 1594, 1594, 1594, 1594,
-     1594, 1594, 1594, 1594, 1595, 1595, 1595, 1595, 1595, 1595,
-
-     1595, 1595, 1595, 1595, 1595, 1596, 1596, 1596, 1596, 1596,
-     1596, 1596, 1596, 1596, 1596, 1596, 1597, 1597, 1597, 1597,
-     1597, 1597, 1597, 1597, 1598, 1609, 1598,  799, 1598, 1598,
-     1598, 1598, 1599,  798, 1599, 1599, 1599, 1599, 1599, 1599,
-     1600,  797,  796,  795,  794, 1600, 1600, 1600, 1601, 1601,
-     1601, 1601, 1601, 1601, 1601, 1601, 1601, 1601, 1601, 1602,
-      792, 1602,  791, 1602, 1602, 1602, 1602, 1603,  790, 1603,
-     1603, 1603, 1603, 1603, 1603, 1603, 1603, 1603, 1604,  789,
-     1604, 1604, 1604, 1604, 1604, 1604, 1604, 1604, 1604, 1605,
-      788, 1605, 1605, 1605, 1605, 1605, 1605, 1605, 1605, 1605,
-
-     1606,  787, 1606, 1607, 1607, 1607,  786,  785, 1607, 1607,
-      784, 1607, 1608,  782, 1608,  780, 1608, 1608, 1608, 1608,
-     1610,  779, 1610, 1610, 1610, 1610, 1610, 1610, 1611,  777,
-     1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611, 1612,
-      776, 1612, 1612, 1612, 1612, 1612, 1612, 1612, 1612, 1612,
-     1613,  775, 1613, 1613, 1613, 1613, 1613, 1613, 1613, 1613,
-     1613, 1614,  773, 1614, 1614, 1614, 1614, 1614, 1614, 1614,
-     1614, 1614,  772,  771,  770,  768,  767,  766,  765,  764,
-      763,  762,  760,  758,  756,  755,  754,  753,  752,  750,
-      749,  748,  747,  746,  745,  744,  743,  742,  741,  740,
+       15,   15,   15,   15,   15,  118,   15,   15,   15,   15,
+       15,   15,   15,   15,   15,   15,   38,   38,   38,  122,
+      101,  101,  109,  101,  101,  110,  109,  806,  167,  110,
+      102,  101,  102,  110,  182,   38,  109,   38,  101,  101,
+      102,  129,   15,   15,   15,   15,  112,  102,  102,  182,
+      112,  129,  102,  132,  129,  167,  132,  112,  807,  132,
+      130,  118,  112,  122,  130,   38,  210,   38,   15,   15,
+       15,   15,   16,   16,   16,   16,   16,   16,  130,   16,
+       16,   16,   16,   16,   16,   16,   16,  208,   16,   16,
+       16,   16,   16,   16,   16,   16,   16,   16,   37,   37,
+
+       37,  141,  128,  103,  138,  103,  128,  808,  138,  128,
+      191,  141,  138,  103,  139,  191,  210,   37,  139,   37,
+      103,  103,  128,  809,   16,   16,   16,   16,  139,  140,
+       37,  173,  173,  140,  174,  174,  140,  140,  175,  810,
+      209,  174,  173,  208,  244,  174,  244,   37,  175,   37,
+       16,   16,   16,   16,   17,   17,   17,   37,   17,   17,
+      329,   17,   17,   17,   17,  811,   17,   17,  250,  329,
+       17,   17,   17,   17,   17,   17,   17,   17,   17,  115,
+      177,  115,  127,  663,  127,  250,  127,  209,  186,  115,
+      177,  144,  127,  177,  144,  144,  115,  115,  186,  127,
+
+      127,  144,  144,  144,  176,  812,  144,  144,  190,  813,
+      115,  144,  187,  238,  176,   17,  176,   17,  190,  186,
+      263,   17,  187,  263,  663,  238,  176,  309,  186,  263,
+      363,  451,   17,   17,   17,   17,   18,   18,   18,  309,
+       18,   18,  187,   18,   18,   18,   18,  363,   18,   18,
+      297,  190,   18,   18,   18,   18,   18,   18,   18,   18,
+       18,  188,  125,  125,  125,  195,  259,  272,  315,  272,
+      315,  188,  350,  272,  126,  126,  126,  297,  195,  259,
+      228,  125,  228,  125,  350,  451,  226,  226,  226,  665,
+      411,  188,  189,  126,  125,  126,  372,   18,  188,   18,
+
+      411,  321,  189,   18,  321,  226,  357,  226,  357,  372,
+      228,  125,  228,  125,   18,   18,   18,   18,   26,   26,
+       26,  125,  452,  126,  814,  126,  665,   26,   26,   26,
+       26,   26,   26,  256,  189,  226,  256,  226,  256,  369,
+      373,  189,  369,  815,  369,  816,  256,  378,  373,  256,
+      378,  387,  369,  387,  664,  369,  378,  387,   26,   26,
+       26,   26,   26,   26,   79,   79,   79,  817,  818,  304,
+      413,  304,  452,   79,   79,   79,   79,   79,   79,  304,
+      413,  298,  298,  298,  412,  632,  304,  304,  819,  820,
+      821,  632,  664,  430,  412,  344,  344,  344,  453,  822,
+
+      298,  412,  298,  430,   79,   79,   79,   79,   79,   79,
+       90,   90,   90,  298,  344,  823,  344,  416,  417,   90,
+       90,   90,   90,   90,   90,  824,   90,  416,  417,   90,
+      298,   90,  298,   90,  416,  417,  828,  453,  829,  430,
+      298,  648,   90,  833,  344,  834,  344,  648,  836,  837,
+       90,   90,   90,   90,   90,   90,  305,   90,  305,   90,
+      838,   90,  522,   90,  522,  839,  305,  840,  844,   90,
+       98,   98,   98,  305,  305,  432,  845,  849,  433,   98,
+       98,   98,   98,   98,   98,  432,   98,  850,  433,  306,
+       98,  306,  522,   98,  522,  852,  853,   98,   98,  306,
+
+      855,  857,   98,  859,  854,  860,  306,  306,  861,  862,
+       98,   98,   98,   98,   98,   98,  311,   98,  311,  865,
+      856,  432,  866,   98,  433,  867,  311,  870,  871,   98,
+      121,  121,  121,  311,  311,  873,  316,  855,  316,  121,
+      121,  121,  121,  121,  121,  314,  316,  314,  338,  875,
+      338,  864,  314,  316,  316,  314,  854,  876,  338,  878,
+      879,  880,  314,  314,  881,  338,  338,  856,  864,  882,
+      121,  121,  121,  121,  121,  121,  152,  152,  152,  883,
+      884,  885,  524,  886,  524,  152,  152,  152,  152,  152,
+      152,  317,  524,  317,  338,  317,  887,  888,  524,  524,
+
+      524,  317,  890,  891,  892,  893,  894,  896,  317,  317,
+      897,  898,  900,  901,  902,  903,  152,  152,  152,  152,
+      152,  152,  159,  159,  159,  904,  905,  906,  907,  908,
+      909,  159,  159,  159,  159,  159,  159,  534,  910,  534,
+      912,  913,  914,  915,  534,  917,  919,  534,  920,  921,
+      922,  923,  924,  925,  534,  534,  926,  927,  928,  929,
+      930,  931,  159,  159,  159,  159,  159,  159,  172,  172,
+      172,  932,  933,  934,  935,  937,  938,  172,  172,  172,
+      172,  172,  172,  939,  172,  940,  942,  943,  172,  944,
+      945,  172,  946,  949,  950,  952,  954,  955,  957,  958,
+
+      172,  959,  960,  961,  943,  962,  963,  964,  172,  172,
+      172,  172,  172,  172,  965,  172,  966,  967,  968,  970,
+      971,  172,  972,  973,  974,  976,  977,  172,  218,  218,
+      218,  978,  980,  981,  982,  983,  984,  218,  218,  218,
+      218,  218,  218,  985,  986,  987,  989,  218,  990,  218,
+      991,  995,  997,  998, 1000, 1001, 1002, 1006, 1008, 1009,
+     1010, 1011, 1012, 1013, 1015, 1017, 1018, 1019,  218,  218,
+      218,  218,  218,  218, 1020, 1021, 1022,  218, 1024,  218,
+      290,  290,  290, 1025, 1026, 1029, 1031, 1032, 1034,  290,
+      290,  290,  290,  290,  290, 1036, 1037, 1038, 1039,  290,
+
+     1040,  290, 1041, 1042, 1043, 1044, 1045, 1010, 1009, 1046,
+     1047, 1050, 1051, 1052, 1053, 1054, 1056, 1058, 1059, 1060,
+      290,  290,  290,  290,  290,  290, 1061, 1062, 1064,  290,
+     1065,  290,  341,  341,  341, 1066, 1068, 1070, 1071, 1072,
+     1073,  341,  341,  341,  341,  341,  341, 1074, 1075, 1076,
+     1077,  341, 1078,  341, 1079, 1081, 1084, 1085, 1086, 1087,
+     1088, 1089, 1091, 1092, 1093, 1096, 1098, 1099, 1100, 1102,
+     1104, 1105,  341,  341,  341,  341,  341,  341, 1106, 1107,
+     1108,  341, 1109,  341,  403,  403,  403, 1110, 1111, 1112,
+     1113, 1114, 1115,  403,  403,  403,  403,  403,  403, 1118,
+
+     1119, 1120, 1121,  403, 1122,  403, 1126, 1127, 1128, 1132,
+     1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1143, 1144,
+     1146, 1147, 1148, 1150,  403,  403,  403,  403,  403,  403,
+     1153, 1154, 1155,  403, 1151,  403,  407,  407,  407, 1151,
+     1156, 1157, 1158, 1159, 1162,  407,  407,  407,  407,  407,
+      407, 1164, 1165, 1166, 1168,  407, 1169,  407, 1170, 1172,
+     1174, 1175, 1176, 1177, 1179, 1180, 1181, 1183, 1184, 1185,
+     1186, 1188, 1189, 1190, 1191, 1192,  407,  407,  407,  407,
+      407,  407, 1194, 1195, 1197,  407, 1198,  407,  830,  830,
+     1199,  830,  830,  830, 1200,  830,  830,  830,  830,  830,
+
+     1202,  830, 1203, 1205, 1206, 1207, 1208, 1203, 1209,  830,
+      830,  830,  830,  830, 1210, 1211, 1214, 1216, 1217, 1218,
+     1219, 1220, 1221, 1222, 1223, 1225, 1227, 1228, 1229, 1230,
+     1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242,
+     1243, 1244, 1247,  830, 1249, 1251, 1252, 1254, 1255, 1256,
+     1257, 1258, 1259, 1262, 1244, 1264, 1266, 1267, 1268, 1269,
+     1270, 1271, 1273, 1274, 1275, 1276,  830,  830,  830,  846,
+      846, 1277,  846,  846,  846, 1278,  846,  846,  846,  846,
+      846, 1279,  846, 1280, 1282, 1283, 1284, 1287, 1295, 1296,
+      846,  846,  846,  846,  846, 1297, 1298, 1299, 1300, 1284,
+
+     1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1302,
+     1310, 1311, 1312, 1314, 1315, 1317, 1319, 1318, 1320, 1321,
+     1322, 1324, 1325, 1326,  846, 1318, 1327, 1328, 1329, 1331,
+     1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1332, 1340,
+     1341, 1342, 1343, 1344, 1345, 1346, 1347,  846,  846,  846,
+      993,  993, 1348,  993,  993,  993, 1349,  993,  993,  993,
+      993,  993, 1352,  993, 1353, 1354, 1355, 1357, 1358, 1359,
+     1360,  993,  993,  993,  993,  993, 1361, 1362, 1363, 1364,
+     1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
+     1377, 1380, 1381, 1382, 1383, 1385, 1386, 1387, 1388, 1389,
+
+     1390, 1391, 1392, 1393, 1394,  993, 1395, 1398, 1399, 1400,
+     1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1410, 1411,
+     1412, 1413, 1414, 1415, 1416, 1417, 1418, 1421,  993,  993,
+      993, 1004, 1004, 1422, 1004, 1004, 1004, 1423, 1004, 1004,
+     1004, 1004, 1004, 1424, 1004, 1425, 1426, 1427, 1428, 1430,
+     1431, 1433, 1004, 1004, 1004, 1004, 1004, 1434, 1435, 1436,
+     1438, 1439, 1440, 1442, 1443, 1445, 1446, 1447, 1448, 1450,
+     1451, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1462, 1463,
+     1464, 1465, 1466, 1468, 1464, 1470, 1004, 1471, 1472, 1473,
+     1474, 1476, 1477, 1473, 1478, 1479, 1480, 1464, 1481, 1479,
+
+     1483, 1485, 1486, 1487, 1488, 1489, 1473, 1490, 1491, 1004,
+     1004, 1004, 1479, 1492, 1493, 1496, 1498, 1499, 1500, 1504,
+     1505, 1506, 1507, 1508, 1509, 1512, 1514, 1515, 1516, 1517,
+     1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
+     1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538,
+     1540, 1541, 1542, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
+     1551, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1562,
+     1564, 1565, 1566, 1568, 1569, 1571, 1572, 1573, 1574, 1575,
+     1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
+     1586, 1587, 1588, 1589, 1590, 1591, 1593, 1594, 1595, 1596,
+
+     1598, 1599, 1600, 1602, 1603, 1606, 1607, 1609, 1611, 1612,
+     1613, 1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617, 1617,
+     1617, 1617, 1618, 1618, 1618, 1618, 1618, 1618, 1618, 1618,
+     1618, 1618, 1618, 1619, 1619, 1619, 1619, 1619, 1619, 1619,
+     1619, 1619, 1619, 1619, 1620, 1620, 1620, 1620, 1620, 1620,
+     1620, 1620, 1620, 1620, 1620, 1621, 1621, 1621, 1621, 1621,
+     1621, 1621, 1621, 1621, 1621, 1621, 1622, 1622, 1622, 1622,
+     1622, 1622, 1622, 1622, 1622, 1622, 1622, 1623, 1623, 1623,
+     1623, 1623, 1623, 1623, 1623, 1624, 1635, 1624,  799, 1624,
+     1624, 1624, 1624, 1625,  798, 1625, 1625, 1625, 1625, 1625,
+
+     1625, 1626,  797,  796,  794,  793, 1626, 1626, 1626, 1627,
+     1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627,
+     1628,  791, 1628,  790, 1628, 1628, 1628, 1628, 1629,  788,
+     1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1629, 1630,
+      787, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 1630,
+     1631,  786, 1631, 1631, 1631, 1631, 1631, 1631, 1631, 1631,
+     1631, 1632,  784, 1632, 1633, 1633, 1633,  783,  782, 1633,
+     1633,  781, 1633, 1634,  779, 1634,  778, 1634, 1634, 1634,
+     1634, 1636,  777, 1636, 1636, 1636, 1636, 1636, 1636, 1637,
+      776, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637, 1637,
+
+     1638,  775, 1638, 1638, 1638, 1638, 1638, 1638, 1638, 1638,
+     1638, 1639,  774, 1639, 1639, 1639, 1639, 1639, 1639, 1639,
+     1639, 1639, 1640,  773, 1640, 1640, 1640, 1640, 1640, 1640,
+     1640, 1640, 1640,  771,  770,  768,  766,  765,  764,  763,
+      762,  760,  759,  758,  757,  756,  755,  754,  753,  752,
+      751,  750,  749,  748,  746,  745,  744,  741,  740,  739,
+      738,  737,  736,  734,  733,  732,  730,  729,  728,  726,
+      725,  724,  723,  722,  721,  720,  719,  718,  717,  716,
+      715,  714,  713,  712,  711,  710,  708,  707,  706,  705,
+      704,  703,  702,  701,  700,  698,  696,  695,  693,  692,
+
+      691,  689,  688,  687,  686,  684,  683,  682,  681,  680,
+      679,  678,  676,  674,  672,  671,  670,  669,  668,  666,
+      662,  661,  660,  659,  658,  657,  656,  655,  654,  653,
+      651,  650,  649,  647,  646,  645,  644,  643,  642,  641,
+      640,  639,  638,  637,  635,  634,  633,  631,  628,  625,
+      624,  623,  622,  621,  620,  619,  618,  617,  616,  615,
+      614,  613,  612,  611,  610,  609,  608,  607,  606,  605,
+      604,  603,  602,  601,  600,  599,  597,  594,  593,  592,
+      591,  590,  589,  588,  587,  586,  584,  583,  582,  581,
+      580,  579,  578,  577,  576,  575,  574,  573,  572,  571,
+
+      570,  569,  568,  567,  566,  565,  564,  563,  562,  561,
+      558,  557,  556,  555,  554,  553,  552,  551,  550,  549,
+      548,  547,  546,  545,  542,  541,  540,  539,  538,  537,
+      536,  535,  533,  532,  531,  530,  529,  528,  527,  526,
+      525,  523,  519,  516,  515,  514,  513,  512,  511,  510,
+      509,  508,  507,  506,  505,  504,  503,  502,  501,  500,
+      499,  498,  497,  496,  495,  494,  493,  492,  491,  490,
+      488,  487,  486,  485,  484,  483,  482,  481,  480,  478,
+      477,  476,  475,  474,  473,  472,  471,  470,  469,  468,
+      467,  466,  465,  464,  463,  462,  461,  460,  459,  458,
+
+      457,  456,  450,  449,  446,  445,  444,  443,  442,  441,
+      440,  439,  438,  437,  436,  435,  434,  431,  429,  428,
+      427,  426,  425,  424,  423,  422,  421,  420,  419,  418,
+      415,  404,  401,  400,  399,  398,  397,  396,  395,  394,
+      393,  392,  391,  390,  389,  388,  386,  385,  384,  383,
+      382,  381,  380,  379,  377,  376,  375,  374,  371,  370,
+      368,  367,  366,  365,  364,  362,  361,  360,  359,  358,
+      356,  355,  354,  353,  352,  349,  348,  347,  346,  339,
+      337,  336,  335,  334,  333,  332,  331,  330,  328,  327,
+      326,  325,  324,  323,  322,  320,  319,  318,  313,  312,
+
+      308,  286,  285,  284,  283,  282,  281,  280,  279,  278,
+      277,  276,  275,  274,  273,  271,  270,  269,  268,  267,
+      266,  265,  264,  262,  261,  260,  258,  257,  255,  254,
+      253,  252,  251,  249,  248,  247,  246,  245,  243,  242,
+      241,  240,  237,  236,  235,  234,  233,  229,  215,  213,
+      207,  201,  198,  196,  194,  193,  192,  183,  181,  180,
+      179,  170,  165,  163,  161,  160,  158,  150,  149,  148,
+      147,  146,  145,  143,  142,  136,  135,  134,  133,  116,
+      111,  106,  105,  104,   95,   85,   84,   78,   77,   76,
+       70,   69,   68,   67,   64,   63,   61,   60,   54,   53,
+
+       52,   51,   42,   34,   32,   31,   25,   24,   22,   19,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
+     1616, 1616, 1616
 
-      739,  738,  736,  735,  732,  731,  730,  729,  728,  727,
-      725,  724,  722,  721,  720,  718,  717,  716,  715,  714,
-      713,  712,  711,  710,  709,  708,  707,  706,  705,  704,
-      703,  702,  700,  699,  698,  697,  696,  695,  694,  693,
-      692,  690,  688,  687,  685,  684,  683,  681,  680,  679,
-      678,  676,  675,  674,  673,  672,  671,  670,  668,  666,
-      664,  663,  662,  661,  660,  658,  654,  653,  652,  651,
-      650,  649,  648,  647,  646,  645,  643,  642,  641,  639,
-      638,  637,  636,  635,  634,  633,  632,  631,  630,  629,
-      627,  626,  625,  623,  620,  617,  616,  615,  614,  613,
-
-      612,  611,  610,  609,  608,  607,  606,  605,  604,  603,
-      602,  601,  600,  599,  598,  597,  596,  595,  594,  593,
-      592,  590,  587,  586,  585,  584,  583,  582,  581,  580,
-      579,  577,  576,  575,  574,  573,  572,  571,  570,  569,
-      568,  567,  566,  565,  564,  563,  562,  561,  560,  559,
-      558,  557,  556,  555,  552,  551,  550,  549,  548,  547,
-      546,  545,  544,  543,  542,  541,  540,  537,  536,  535,
-      534,  533,  532,  531,  530,  528,  527,  526,  525,  524,
-      523,  522,  521,  519,  515,  512,  511,  510,  509,  508,
-      507,  506,  505,  504,  503,  502,  501,  500,  499,  498,
-
-      497,  496,  495,  494,  493,  492,  491,  490,  489,  488,
-      487,  486,  484,  483,  482,  481,  480,  479,  478,  477,
-      476,  474,  473,  472,  471,  470,  469,  468,  467,  466,
-      465,  464,  463,  462,  461,  460,  459,  458,  457,  456,
-      455,  454,  453,  452,  446,  445,  442,  441,  440,  439,
-      438,  437,  436,  435,  434,  433,  432,  431,  430,  427,
-      425,  424,  423,  422,  421,  420,  419,  418,  417,  416,
-      415,  414,  411,  400,  397,  396,  395,  394,  393,  392,
-      391,  390,  389,  388,  387,  386,  385,  384,  382,  381,
-      380,  379,  378,  377,  376,  375,  373,  372,  371,  368,
-
-      367,  365,  364,  363,  362,  361,  359,  358,  357,  356,
-      355,  353,  352,  351,  350,  347,  346,  345,  344,  337,
-      335,  334,  333,  332,  331,  330,  329,  328,  326,  325,
-      324,  323,  322,  321,  319,  318,  317,  313,  312,  308,
-      286,  285,  284,  283,  282,  281,  280,  279,  278,  277,
-      276,  275,  274,  273,  271,  270,  269,  268,  267,  266,
-      265,  264,  262,  261,  260,  258,  257,  255,  254,  253,
-      252,  251,  249,  248,  247,  246,  245,  243,  242,  241,
-      240,  237,  236,  235,  234,  233,  229,  215,  213,  207,
-      201,  198,  196,  194,  193,  192,  183,  181,  180,  179,
-
-      170,  165,  163,  161,  160,  158,  150,  149,  148,  147,
-      146,  145,  143,  142,  136,  135,  134,  133,  116,  111,
-      106,  105,  104,   95,   85,   84,   78,   77,   76,   70,
-       69,   68,   67,   64,   63,   61,   60,   54,   53,   52,
-       51,   42,   34,   32,   31,   25,   24,   22,   19, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590, 1590,
-     1590
     } ;
 
 static yy_state_type yy_last_accepting_state;
@@ -1656,7 +1678,7 @@
 
 
 
-#line 1660 "ldlex.c"
+#line 1682 "lex.yy.c"
 
 #define INITIAL 0
 #define SCRIPT 1
@@ -1703,7 +1725,7 @@
 
 void yyset_out  (FILE * out_str  );
 
-yy_size_t yyget_leng (void );
+int yyget_leng (void );
 
 char *yyget_text (void );
 
@@ -1764,7 +1786,7 @@
 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
 		{ \
 		int c = '*'; \
-		yy_size_t n; \
+		int n; \
 		for ( n = 0; n < max_size && \
 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
 			buf[n] = (char) c; \
@@ -1865,7 +1887,7 @@
 	}
     }
 
-#line 1869 "ldlex.c"
+#line 1891 "lex.yy.c"
 
 	if ( !(yy_init) )
 		{
@@ -1918,13 +1940,13 @@
 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 				{
 				yy_current_state = (int) yy_def[yy_current_state];
-				if ( yy_current_state >= 1591 )
+				if ( yy_current_state >= 1617 )
 					yy_c = yy_meta[(unsigned int) yy_c];
 				}
 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
 			++yy_cp;
 			}
-		while ( yy_base[yy_current_state] != 2550 );
+		while ( yy_base[yy_current_state] != 2611 );
 
 yy_find_action:
 		yy_act = yy_accept[yy_current_state];
@@ -2317,207 +2339,207 @@
 case 63:
 YY_RULE_SETUP
 #line 257 "ldlex.l"
-{ RTOKEN(ASSERT_K); }
+{ RTOKEN(CEILP2); }
 	YY_BREAK
 case 64:
 YY_RULE_SETUP
 #line 258 "ldlex.l"
-{ RTOKEN(ENTRY);}
+{ RTOKEN(NACL_MASK);}
 	YY_BREAK
 case 65:
 YY_RULE_SETUP
 #line 259 "ldlex.l"
-{ RTOKEN(EXTERN);}
+{ RTOKEN(ASSERT_K); }
 	YY_BREAK
 case 66:
 YY_RULE_SETUP
 #line 260 "ldlex.l"
-{ RTOKEN(NEXT);}
+{ RTOKEN(ENTRY);}
 	YY_BREAK
 case 67:
 YY_RULE_SETUP
 #line 261 "ldlex.l"
-{ RTOKEN(SIZEOF_HEADERS);}
+{ RTOKEN(EXTERN);}
 	YY_BREAK
 case 68:
 YY_RULE_SETUP
 #line 262 "ldlex.l"
-{ RTOKEN(SIZEOF_HEADERS);}
+{ RTOKEN(NEXT);}
 	YY_BREAK
 case 69:
 YY_RULE_SETUP
 #line 263 "ldlex.l"
-{ RTOKEN(SEGMENT_START);}
+{ RTOKEN(SIZEOF_HEADERS);}
 	YY_BREAK
 case 70:
 YY_RULE_SETUP
 #line 264 "ldlex.l"
-{ RTOKEN(MAP);}
+{ RTOKEN(SIZEOF_HEADERS);}
 	YY_BREAK
 case 71:
 YY_RULE_SETUP
 #line 265 "ldlex.l"
-{ RTOKEN(SIZEOF);}
+{ RTOKEN(SEGMENT_START);}
 	YY_BREAK
 case 72:
 YY_RULE_SETUP
 #line 266 "ldlex.l"
-{ RTOKEN(TARGET_K);}
+{ RTOKEN(MAP);}
 	YY_BREAK
 case 73:
 YY_RULE_SETUP
 #line 267 "ldlex.l"
-{ RTOKEN(SEARCH_DIR);}
+{ RTOKEN(SIZEOF);}
 	YY_BREAK
 case 74:
 YY_RULE_SETUP
 #line 268 "ldlex.l"
-{ RTOKEN(OUTPUT);}
+{ RTOKEN(TARGET_K);}
 	YY_BREAK
 case 75:
 YY_RULE_SETUP
 #line 269 "ldlex.l"
-{ RTOKEN(INPUT);}
+{ RTOKEN(SEARCH_DIR);}
 	YY_BREAK
 case 76:
 YY_RULE_SETUP
 #line 270 "ldlex.l"
-{ RTOKEN(GROUP);}
+{ RTOKEN(OUTPUT);}
 	YY_BREAK
 case 77:
 YY_RULE_SETUP
 #line 271 "ldlex.l"
-{ RTOKEN(AS_NEEDED);}
+{ RTOKEN(INPUT);}
 	YY_BREAK
 case 78:
 YY_RULE_SETUP
 #line 272 "ldlex.l"
-{ RTOKEN(DEFINED);}
+{ RTOKEN(GROUP);}
 	YY_BREAK
 case 79:
 YY_RULE_SETUP
 #line 273 "ldlex.l"
-{ RTOKEN(CREATE_OBJECT_SYMBOLS);}
+{ RTOKEN(AS_NEEDED);}
 	YY_BREAK
 case 80:
 YY_RULE_SETUP
 #line 274 "ldlex.l"
-{ RTOKEN( CONSTRUCTORS);}
+{ RTOKEN(DEFINED);}
 	YY_BREAK
 case 81:
 YY_RULE_SETUP
 #line 275 "ldlex.l"
-{ RTOKEN(FORCE_COMMON_ALLOCATION);}
+{ RTOKEN(CREATE_OBJECT_SYMBOLS);}
 	YY_BREAK
 case 82:
 YY_RULE_SETUP
 #line 276 "ldlex.l"
-{ RTOKEN(INHIBIT_COMMON_ALLOCATION);}
+{ RTOKEN( CONSTRUCTORS);}
 	YY_BREAK
 case 83:
 YY_RULE_SETUP
 #line 277 "ldlex.l"
-{ RTOKEN(SECTIONS);}
+{ RTOKEN(FORCE_COMMON_ALLOCATION);}
 	YY_BREAK
 case 84:
 YY_RULE_SETUP
 #line 278 "ldlex.l"
-{ RTOKEN(INSERT_K);}
+{ RTOKEN(INHIBIT_COMMON_ALLOCATION);}
 	YY_BREAK
 case 85:
 YY_RULE_SETUP
 #line 279 "ldlex.l"
-{ RTOKEN(AFTER);}
+{ RTOKEN(SECTIONS);}
 	YY_BREAK
 case 86:
 YY_RULE_SETUP
 #line 280 "ldlex.l"
-{ RTOKEN(BEFORE);}
+{ RTOKEN(INSERT_K);}
 	YY_BREAK
 case 87:
 YY_RULE_SETUP
 #line 281 "ldlex.l"
-{ RTOKEN(FILL);}
+{ RTOKEN(AFTER);}
 	YY_BREAK
 case 88:
 YY_RULE_SETUP
 #line 282 "ldlex.l"
-{ RTOKEN(STARTUP);}
+{ RTOKEN(BEFORE);}
 	YY_BREAK
 case 89:
 YY_RULE_SETUP
 #line 283 "ldlex.l"
-{ RTOKEN(OUTPUT_FORMAT);}
+{ RTOKEN(FILL);}
 	YY_BREAK
 case 90:
 YY_RULE_SETUP
 #line 284 "ldlex.l"
-{ RTOKEN( OUTPUT_ARCH);}
+{ RTOKEN(STARTUP);}
 	YY_BREAK
 case 91:
 YY_RULE_SETUP
 #line 285 "ldlex.l"
-{ RTOKEN(HLL);}
+{ RTOKEN(OUTPUT_FORMAT);}
 	YY_BREAK
 case 92:
 YY_RULE_SETUP
 #line 286 "ldlex.l"
-{ RTOKEN(SYSLIB);}
+{ RTOKEN( OUTPUT_ARCH);}
 	YY_BREAK
 case 93:
 YY_RULE_SETUP
 #line 287 "ldlex.l"
-{ RTOKEN(FLOAT);}
+{ RTOKEN(HLL);}
 	YY_BREAK
 case 94:
 YY_RULE_SETUP
 #line 288 "ldlex.l"
-{ RTOKEN( QUAD);}
+{ RTOKEN(SYSLIB);}
 	YY_BREAK
 case 95:
 YY_RULE_SETUP
 #line 289 "ldlex.l"
-{ RTOKEN( SQUAD);}
+{ RTOKEN(FLOAT);}
 	YY_BREAK
 case 96:
 YY_RULE_SETUP
 #line 290 "ldlex.l"
-{ RTOKEN( LONG);}
+{ RTOKEN( QUAD);}
 	YY_BREAK
 case 97:
 YY_RULE_SETUP
 #line 291 "ldlex.l"
-{ RTOKEN( SHORT);}
+{ RTOKEN( SQUAD);}
 	YY_BREAK
 case 98:
 YY_RULE_SETUP
 #line 292 "ldlex.l"
-{ RTOKEN( BYTE);}
+{ RTOKEN( LONG);}
 	YY_BREAK
 case 99:
 YY_RULE_SETUP
 #line 293 "ldlex.l"
-{ RTOKEN(NOFLOAT);}
+{ RTOKEN( SHORT);}
 	YY_BREAK
 case 100:
 YY_RULE_SETUP
 #line 294 "ldlex.l"
-{ RTOKEN(NOCROSSREFS);}
+{ RTOKEN( BYTE);}
 	YY_BREAK
 case 101:
 YY_RULE_SETUP
 #line 295 "ldlex.l"
-{ RTOKEN(OVERLAY); }
+{ RTOKEN(NOFLOAT);}
 	YY_BREAK
 case 102:
 YY_RULE_SETUP
 #line 296 "ldlex.l"
-{ RTOKEN(SORT_BY_NAME); }
+{ RTOKEN(NOCROSSREFS);}
 	YY_BREAK
 case 103:
 YY_RULE_SETUP
 #line 297 "ldlex.l"
-{ RTOKEN(SORT_BY_ALIGNMENT); }
+{ RTOKEN(OVERLAY); }
 	YY_BREAK
 case 104:
 YY_RULE_SETUP
@@ -2527,349 +2549,359 @@
 case 105:
 YY_RULE_SETUP
 #line 299 "ldlex.l"
-{ RTOKEN(NOLOAD);}
+{ RTOKEN(SORT_BY_ALIGNMENT); }
 	YY_BREAK
 case 106:
 YY_RULE_SETUP
 #line 300 "ldlex.l"
-{ RTOKEN(DSECT);}
+{ RTOKEN(SORT_BY_NAME); }
 	YY_BREAK
 case 107:
 YY_RULE_SETUP
 #line 301 "ldlex.l"
-{ RTOKEN(COPY);}
+{ RTOKEN(NOLOAD);}
 	YY_BREAK
 case 108:
 YY_RULE_SETUP
 #line 302 "ldlex.l"
-{ RTOKEN(INFO);}
+{ RTOKEN(DSECT);}
 	YY_BREAK
 case 109:
 YY_RULE_SETUP
 #line 303 "ldlex.l"
-{ RTOKEN(OVERLAY);}
+{ RTOKEN(COPY);}
 	YY_BREAK
 case 110:
 YY_RULE_SETUP
 #line 304 "ldlex.l"
-{ RTOKEN(ONLY_IF_RO); }
+{ RTOKEN(INFO);}
 	YY_BREAK
 case 111:
 YY_RULE_SETUP
 #line 305 "ldlex.l"
-{ RTOKEN(ONLY_IF_RW); }
+{ RTOKEN(OVERLAY);}
 	YY_BREAK
 case 112:
 YY_RULE_SETUP
 #line 306 "ldlex.l"
-{ RTOKEN(SPECIAL); }
+{ RTOKEN(ONLY_IF_RO); }
 	YY_BREAK
 case 113:
 YY_RULE_SETUP
 #line 307 "ldlex.l"
-{ RTOKEN(ORIGIN);}
+{ RTOKEN(ONLY_IF_RW); }
 	YY_BREAK
 case 114:
 YY_RULE_SETUP
 #line 308 "ldlex.l"
-{ RTOKEN(ORIGIN);}
+{ RTOKEN(SPECIAL); }
 	YY_BREAK
 case 115:
 YY_RULE_SETUP
 #line 309 "ldlex.l"
-{ RTOKEN( LENGTH);}
+{ RTOKEN(ORIGIN);}
 	YY_BREAK
 case 116:
 YY_RULE_SETUP
 #line 310 "ldlex.l"
-{ RTOKEN( LENGTH);}
+{ RTOKEN(ORIGIN);}
 	YY_BREAK
 case 117:
 YY_RULE_SETUP
 #line 311 "ldlex.l"
-{ RTOKEN(INCLUDE);}
+{ RTOKEN( LENGTH);}
 	YY_BREAK
 case 118:
 YY_RULE_SETUP
 #line 312 "ldlex.l"
-{ RTOKEN (PHDRS); }
+{ RTOKEN( LENGTH);}
 	YY_BREAK
 case 119:
 YY_RULE_SETUP
 #line 313 "ldlex.l"
-{ RTOKEN(AT);}
+{ RTOKEN(INCLUDE);}
 	YY_BREAK
 case 120:
 YY_RULE_SETUP
 #line 314 "ldlex.l"
-{ RTOKEN(SUBALIGN);}
+{ RTOKEN (PHDRS); }
 	YY_BREAK
 case 121:
 YY_RULE_SETUP
 #line 315 "ldlex.l"
-{ RTOKEN(PROVIDE); }
+{ RTOKEN(AT);}
 	YY_BREAK
 case 122:
 YY_RULE_SETUP
 #line 316 "ldlex.l"
-{ RTOKEN(PROVIDE_HIDDEN); }
+{ RTOKEN(SUBALIGN);}
 	YY_BREAK
 case 123:
 YY_RULE_SETUP
 #line 317 "ldlex.l"
-{ RTOKEN(KEEP); }
+{ RTOKEN(PROVIDE); }
 	YY_BREAK
 case 124:
 YY_RULE_SETUP
 #line 318 "ldlex.l"
-{ RTOKEN(EXCLUDE_FILE); }
+{ RTOKEN(PROVIDE_HIDDEN); }
 	YY_BREAK
 case 125:
 YY_RULE_SETUP
 #line 319 "ldlex.l"
-{ RTOKEN(CONSTANT);}
+{ RTOKEN(KEEP); }
 	YY_BREAK
 case 126:
-/* rule 126 can match eol */
 YY_RULE_SETUP
 #line 320 "ldlex.l"
-{ ++ lineno; }
+{ RTOKEN(EXCLUDE_FILE); }
 	YY_BREAK
 case 127:
-/* rule 127 can match eol */
 YY_RULE_SETUP
 #line 321 "ldlex.l"
-{ ++ lineno;  RTOKEN(NEWLINE); }
+{ RTOKEN(CONSTANT);}
 	YY_BREAK
 case 128:
+/* rule 128 can match eol */
 YY_RULE_SETUP
 #line 322 "ldlex.l"
-{ /* Mri comment line */ }
+{ ++ lineno; }
 	YY_BREAK
 case 129:
+/* rule 129 can match eol */
 YY_RULE_SETUP
 #line 323 "ldlex.l"
-{ /* Mri comment line */ }
+{ ++ lineno;  RTOKEN(NEWLINE); }
 	YY_BREAK
 case 130:
 YY_RULE_SETUP
 #line 324 "ldlex.l"
-{ RTOKEN(ENDWORD); }
+{ /* Mri comment line */ }
 	YY_BREAK
 case 131:
 YY_RULE_SETUP
 #line 325 "ldlex.l"
-{ RTOKEN(ALIGNMOD);}
+{ /* Mri comment line */ }
 	YY_BREAK
 case 132:
 YY_RULE_SETUP
 #line 326 "ldlex.l"
-{ RTOKEN(ALIGN_K);}
+{ RTOKEN(ENDWORD); }
 	YY_BREAK
 case 133:
 YY_RULE_SETUP
 #line 327 "ldlex.l"
-{ RTOKEN(CHIP); }
+{ RTOKEN(ALIGNMOD);}
 	YY_BREAK
 case 134:
 YY_RULE_SETUP
 #line 328 "ldlex.l"
-{ RTOKEN(BASE); }
+{ RTOKEN(ALIGN_K);}
 	YY_BREAK
 case 135:
 YY_RULE_SETUP
 #line 329 "ldlex.l"
-{ RTOKEN(ALIAS); }
+{ RTOKEN(CHIP); }
 	YY_BREAK
 case 136:
 YY_RULE_SETUP
 #line 330 "ldlex.l"
-{ RTOKEN(TRUNCATE); }
+{ RTOKEN(BASE); }
 	YY_BREAK
 case 137:
 YY_RULE_SETUP
 #line 331 "ldlex.l"
-{ RTOKEN(LOAD); }
+{ RTOKEN(ALIAS); }
 	YY_BREAK
 case 138:
 YY_RULE_SETUP
 #line 332 "ldlex.l"
-{ RTOKEN(PUBLIC); }
+{ RTOKEN(TRUNCATE); }
 	YY_BREAK
 case 139:
 YY_RULE_SETUP
 #line 333 "ldlex.l"
-{ RTOKEN(ORDER); }
+{ RTOKEN(LOAD); }
 	YY_BREAK
 case 140:
 YY_RULE_SETUP
 #line 334 "ldlex.l"
-{ RTOKEN(NAMEWORD); }
+{ RTOKEN(PUBLIC); }
 	YY_BREAK
 case 141:
 YY_RULE_SETUP
 #line 335 "ldlex.l"
-{ RTOKEN(FORMAT); }
+{ RTOKEN(ORDER); }
 	YY_BREAK
 case 142:
 YY_RULE_SETUP
 #line 336 "ldlex.l"
-{ RTOKEN(CASE); }
+{ RTOKEN(NAMEWORD); }
 	YY_BREAK
 case 143:
 YY_RULE_SETUP
 #line 337 "ldlex.l"
-{ RTOKEN(START); }
+{ RTOKEN(FORMAT); }
 	YY_BREAK
 case 144:
 YY_RULE_SETUP
 #line 338 "ldlex.l"
-{ RTOKEN(LIST); /* LIST and ignore to end of line */ }
+{ RTOKEN(CASE); }
 	YY_BREAK
 case 145:
 YY_RULE_SETUP
 #line 339 "ldlex.l"
-{ RTOKEN(SECT); }
+{ RTOKEN(START); }
 	YY_BREAK
 case 146:
 YY_RULE_SETUP
 #line 340 "ldlex.l"
-{ RTOKEN(ABSOLUTE); }
+{ RTOKEN(LIST); /* LIST and ignore to end of line */ }
 	YY_BREAK
 case 147:
 YY_RULE_SETUP
 #line 341 "ldlex.l"
-{ RTOKEN(ENDWORD); }
+{ RTOKEN(SECT); }
 	YY_BREAK
 case 148:
 YY_RULE_SETUP
 #line 342 "ldlex.l"
-{ RTOKEN(ALIGNMOD);}
+{ RTOKEN(ABSOLUTE); }
 	YY_BREAK
 case 149:
 YY_RULE_SETUP
 #line 343 "ldlex.l"
-{ RTOKEN(ALIGN_K);}
+{ RTOKEN(ENDWORD); }
 	YY_BREAK
 case 150:
 YY_RULE_SETUP
 #line 344 "ldlex.l"
-{ RTOKEN(CHIP); }
+{ RTOKEN(ALIGNMOD);}
 	YY_BREAK
 case 151:
 YY_RULE_SETUP
 #line 345 "ldlex.l"
-{ RTOKEN(BASE); }
+{ RTOKEN(ALIGN_K);}
 	YY_BREAK
 case 152:
 YY_RULE_SETUP
 #line 346 "ldlex.l"
-{ RTOKEN(ALIAS); }
+{ RTOKEN(CHIP); }
 	YY_BREAK
 case 153:
 YY_RULE_SETUP
 #line 347 "ldlex.l"
-{ RTOKEN(TRUNCATE); }
+{ RTOKEN(BASE); }
 	YY_BREAK
 case 154:
 YY_RULE_SETUP
 #line 348 "ldlex.l"
-{ RTOKEN(LOAD); }
+{ RTOKEN(ALIAS); }
 	YY_BREAK
 case 155:
 YY_RULE_SETUP
 #line 349 "ldlex.l"
-{ RTOKEN(PUBLIC); }
+{ RTOKEN(TRUNCATE); }
 	YY_BREAK
 case 156:
 YY_RULE_SETUP
 #line 350 "ldlex.l"
-{ RTOKEN(ORDER); }
+{ RTOKEN(LOAD); }
 	YY_BREAK
 case 157:
 YY_RULE_SETUP
 #line 351 "ldlex.l"
-{ RTOKEN(NAMEWORD); }
+{ RTOKEN(PUBLIC); }
 	YY_BREAK
 case 158:
 YY_RULE_SETUP
 #line 352 "ldlex.l"
-{ RTOKEN(FORMAT); }
+{ RTOKEN(ORDER); }
 	YY_BREAK
 case 159:
 YY_RULE_SETUP
 #line 353 "ldlex.l"
-{ RTOKEN(CASE); }
+{ RTOKEN(NAMEWORD); }
 	YY_BREAK
 case 160:
 YY_RULE_SETUP
 #line 354 "ldlex.l"
-{ RTOKEN(EXTERN); }
+{ RTOKEN(FORMAT); }
 	YY_BREAK
 case 161:
 YY_RULE_SETUP
 #line 355 "ldlex.l"
-{ RTOKEN(START); }
+{ RTOKEN(CASE); }
 	YY_BREAK
 case 162:
 YY_RULE_SETUP
 #line 356 "ldlex.l"
-{ RTOKEN(LIST); /* LIST and ignore to end of line */ }
+{ RTOKEN(EXTERN); }
 	YY_BREAK
 case 163:
 YY_RULE_SETUP
 #line 357 "ldlex.l"
-{ RTOKEN(SECT); }
+{ RTOKEN(START); }
 	YY_BREAK
 case 164:
 YY_RULE_SETUP
 #line 358 "ldlex.l"
-{ RTOKEN(ABSOLUTE); }
+{ RTOKEN(LIST); /* LIST and ignore to end of line */ }
 	YY_BREAK
 case 165:
 YY_RULE_SETUP
+#line 359 "ldlex.l"
+{ RTOKEN(SECT); }
+	YY_BREAK
+case 166:
+YY_RULE_SETUP
 #line 360 "ldlex.l"
+{ RTOKEN(ABSOLUTE); }
+	YY_BREAK
+case 167:
+YY_RULE_SETUP
+#line 362 "ldlex.l"
 {
 /* Filename without commas, needed to parse mri stuff */
 				 yylval.name = xstrdup (yytext);
 				  return NAME;
 				}
 	YY_BREAK
-case 166:
+case 168:
 YY_RULE_SETUP
-#line 367 "ldlex.l"
+#line 369 "ldlex.l"
 {
 				 yylval.name = xstrdup (yytext);
 				  return NAME;
 				}
 	YY_BREAK
-case 167:
+case 169:
 YY_RULE_SETUP
-#line 371 "ldlex.l"
+#line 373 "ldlex.l"
 {
 				  yylval.name = xstrdup (yytext + 2);
 				  return LNAME;
 				}
 	YY_BREAK
-case 168:
+case 170:
 YY_RULE_SETUP
-#line 375 "ldlex.l"
+#line 377 "ldlex.l"
 {
 				 yylval.name = xstrdup (yytext);
 				  return NAME;
 				}
 	YY_BREAK
-case 169:
+case 171:
 YY_RULE_SETUP
-#line 379 "ldlex.l"
+#line 381 "ldlex.l"
 {
 				  yylval.name = xstrdup (yytext + 2);
 				  return LNAME;
 				}
 	YY_BREAK
-case 170:
+case 172:
 YY_RULE_SETUP
-#line 383 "ldlex.l"
+#line 385 "ldlex.l"
 {
 		/* Annoyingly, this pattern can match comments, and we have
 		   longest match issues to consider.  So if the first two
@@ -2887,10 +2919,10 @@
 		  }
 	}
 	YY_BREAK
-case 171:
-/* rule 171 can match eol */
+case 173:
+/* rule 173 can match eol */
 YY_RULE_SETUP
-#line 400 "ldlex.l"
+#line 402 "ldlex.l"
 {
 					/* No matter the state, quotes
 					   give what's inside */
@@ -2899,94 +2931,94 @@
 					return NAME;
 				}
 	YY_BREAK
-case 172:
-/* rule 172 can match eol */
+case 174:
+/* rule 174 can match eol */
 YY_RULE_SETUP
-#line 407 "ldlex.l"
+#line 409 "ldlex.l"
 { lineno++;}
 	YY_BREAK
-case 173:
+case 175:
 YY_RULE_SETUP
-#line 408 "ldlex.l"
+#line 410 "ldlex.l"
 { }
 	YY_BREAK
-case 174:
+case 176:
 YY_RULE_SETUP
-#line 410 "ldlex.l"
+#line 412 "ldlex.l"
 { return *yytext; }
 	YY_BREAK
-case 175:
+case 177:
 YY_RULE_SETUP
-#line 412 "ldlex.l"
+#line 414 "ldlex.l"
 { RTOKEN(GLOBAL); }
 	YY_BREAK
-case 176:
+case 178:
 YY_RULE_SETUP
-#line 414 "ldlex.l"
+#line 416 "ldlex.l"
 { RTOKEN(LOCAL); }
 	YY_BREAK
-case 177:
+case 179:
 YY_RULE_SETUP
-#line 416 "ldlex.l"
+#line 418 "ldlex.l"
 { RTOKEN(EXTERN); }
 	YY_BREAK
-case 178:
+case 180:
 YY_RULE_SETUP
-#line 418 "ldlex.l"
+#line 420 "ldlex.l"
 { yylval.name = xstrdup (yytext);
 				  return VERS_IDENTIFIER; }
 	YY_BREAK
-case 179:
+case 181:
 YY_RULE_SETUP
-#line 421 "ldlex.l"
+#line 423 "ldlex.l"
 { yylval.name = xstrdup (yytext);
 				  return VERS_TAG; }
 	YY_BREAK
-case 180:
+case 182:
 YY_RULE_SETUP
-#line 424 "ldlex.l"
+#line 426 "ldlex.l"
 { BEGIN(VERS_SCRIPT); return *yytext; }
 	YY_BREAK
-case 181:
+case 183:
 YY_RULE_SETUP
-#line 426 "ldlex.l"
+#line 428 "ldlex.l"
 { BEGIN(VERS_NODE);
 				  vers_node_nesting = 0;
 				  return *yytext;
 				}
 	YY_BREAK
-case 182:
+case 184:
 YY_RULE_SETUP
-#line 430 "ldlex.l"
+#line 432 "ldlex.l"
 { return *yytext; }
 	YY_BREAK
-case 183:
+case 185:
 YY_RULE_SETUP
-#line 431 "ldlex.l"
+#line 433 "ldlex.l"
 { vers_node_nesting++; return *yytext; }
 	YY_BREAK
-case 184:
+case 186:
 YY_RULE_SETUP
-#line 432 "ldlex.l"
+#line 434 "ldlex.l"
 { if (--vers_node_nesting < 0)
 				    BEGIN(VERS_SCRIPT);
 				  return *yytext;
 				}
 	YY_BREAK
-case 185:
-/* rule 185 can match eol */
+case 187:
+/* rule 187 can match eol */
 YY_RULE_SETUP
-#line 437 "ldlex.l"
+#line 439 "ldlex.l"
 { lineno++; }
 	YY_BREAK
-case 186:
+case 188:
 YY_RULE_SETUP
-#line 439 "ldlex.l"
+#line 441 "ldlex.l"
 { /* Eat up comments */ }
 	YY_BREAK
-case 187:
+case 189:
 YY_RULE_SETUP
-#line 441 "ldlex.l"
+#line 443 "ldlex.l"
 { /* Eat up whitespace */ }
 	YY_BREAK
 case YY_STATE_EOF(INITIAL):
@@ -2998,7 +3030,7 @@
 case YY_STATE_EOF(VERS_START):
 case YY_STATE_EOF(VERS_SCRIPT):
 case YY_STATE_EOF(VERS_NODE):
-#line 443 "ldlex.l"
+#line 445 "ldlex.l"
 {
   include_stack_ptr--;
 
@@ -3017,22 +3049,22 @@
   return END;
 }
 	YY_BREAK
-case 188:
+case 190:
 YY_RULE_SETUP
-#line 461 "ldlex.l"
+#line 463 "ldlex.l"
 lex_warn_invalid (" in script", yytext);
 	YY_BREAK
-case 189:
+case 191:
 YY_RULE_SETUP
-#line 462 "ldlex.l"
+#line 464 "ldlex.l"
 lex_warn_invalid (" in expression", yytext);
 	YY_BREAK
-case 190:
+case 192:
 YY_RULE_SETUP
-#line 464 "ldlex.l"
+#line 466 "ldlex.l"
 ECHO;
 	YY_BREAK
-#line 3036 "ldlex.c"
+#line 3068 "lex.yy.c"
 
 	case YY_END_OF_BUFFER:
 		{
@@ -3216,7 +3248,7 @@
 
 	else
 		{
-			yy_size_t num_to_read =
+			int num_to_read =
 			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;
 
 		while ( num_to_read <= 0 )
@@ -3230,7 +3262,7 @@
 
 			if ( b->yy_is_our_buffer )
 				{
-				yy_size_t new_size = b->yy_buf_size * 2;
+				int new_size = b->yy_buf_size * 2;
 
 				if ( new_size <= 0 )
 					b->yy_buf_size += b->yy_buf_size / 8;
@@ -3261,7 +3293,7 @@
 
 		/* Read in more data. */
 		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
-			(yy_n_chars), num_to_read );
+			(yy_n_chars), (size_t) num_to_read );
 
 		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
 		}
@@ -3322,7 +3354,7 @@
 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 			{
 			yy_current_state = (int) yy_def[yy_current_state];
-			if ( yy_current_state >= 1591 )
+			if ( yy_current_state >= 1617 )
 				yy_c = yy_meta[(unsigned int) yy_c];
 			}
 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
@@ -3350,11 +3382,11 @@
 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 		{
 		yy_current_state = (int) yy_def[yy_current_state];
-		if ( yy_current_state >= 1591 )
+		if ( yy_current_state >= 1617 )
 			yy_c = yy_meta[(unsigned int) yy_c];
 		}
 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
-	yy_is_jam = (yy_current_state == 1590);
+	yy_is_jam = (yy_current_state == 1616);
 
 	return yy_is_jam ? 0 : yy_current_state;
 }
@@ -3371,7 +3403,7 @@
 	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
 		{ /* need to shift things up to make room */
 		/* +2 for EOB chars. */
-		register yy_size_t number_to_move = (yy_n_chars) + 2;
+		register int number_to_move = (yy_n_chars) + 2;
 		register char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
 					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
 		register char *source =
@@ -3420,7 +3452,7 @@
 
 		else
 			{ /* need more input */
-			yy_size_t offset = (yy_c_buf_p) - (yytext_ptr);
+			int offset = (yy_c_buf_p) - (yytext_ptr);
 			++(yy_c_buf_p);
 
 			switch ( yy_get_next_buffer(  ) )
@@ -3444,7 +3476,7 @@
 				case EOB_ACT_END_OF_FILE:
 					{
 					if ( yywrap( ) )
-						return 0;
+						return EOF;
 
 					if ( ! (yy_did_buffer_switch_on_eof) )
 						YY_NEW_FILE;
@@ -3696,7 +3728,7 @@
  */
 static void yyensure_buffer_stack (void)
 {
-	yy_size_t num_to_alloc;
+	int num_to_alloc;
     
 	if (!(yy_buffer_stack)) {
 
@@ -3793,11 +3825,12 @@
  * 
  * @return the newly allocated buffer state object.
  */
-YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )
+YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )
 {
 	YY_BUFFER_STATE b;
 	char *buf;
-	yy_size_t n, i;
+	yy_size_t n;
+	int i;
     
 	/* Get memory for full buffer, including space for trailing EOB's. */
 	n = _yybytes_len + 2;
@@ -3879,7 +3912,7 @@
 /** Get the length of the current token.
  * 
  */
-yy_size_t yyget_leng  (void)
+int yyget_leng  (void)
 {
         return yyleng;
 }
@@ -4027,7 +4060,7 @@
 
 #define YYTABLES_NAME "yytables"
 
-#line 464 "ldlex.l"
+#line 466 "ldlex.l"
 
 
 
