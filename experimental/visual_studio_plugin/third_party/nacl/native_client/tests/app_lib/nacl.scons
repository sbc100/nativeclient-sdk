# -*- python -*-
# Copyright 2008, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Import('env')

# TODO(robertm): this triggers a compiler bug on ARM (constant pool trouble)
if env['TARGET_ARCHITECTURE'] == 'arm':
   Return()

######################################################################
# Smoke Test
######################################################################
env.ComponentProgram('app_lib_test.nexe',
                     'app_lib_test.c',
                     EXTRA_LIBS=['pthread'],
                     )

# NOTE: we are using the same file as stdin and on the command line
#
# app_lib_test exercises stdio, in particular, it uses fopen on the
# command line argument, so it requires the -d flag to sel_ldr in
# order to access the filesystem.
node = env.CommandSelLdrTestNacl(
     'app_lib_test.out',
     command=[env.File('app_lib_test.nexe'), env.File('app_lib_test.stdin')],
     stdin=env.File('app_lib_test.stdin'),
     stdout_golden=env.File('app_lib_test.stdout'),
     sel_ldr_flags=['-d'],
     )

env.AddNodeToTestSuite(node, ['small_tests'], 'run_app_list_test')
