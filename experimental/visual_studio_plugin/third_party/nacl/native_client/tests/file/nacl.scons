# Copyright 2008, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Import('env')


# Don't use -lnosys on ARM - it's automagically included and will spoil
# things if included before -lc
if env['TARGET_ARCHITECTURE'] == 'arm':
  extra_libs = ['pthread']
else:
  extra_libs = ['pthread', 'nosys']

env.ComponentProgram('file.nexe', 'file.cc', EXTRA_LIBS=extra_libs)

# TODO: add tests back in
# NOTE: this smoke tests currently fails in "test17"
#       when opening "././file/testdata256"
#       it creates files in the current directory and below
#       which should be avoided
#       so for now we invoke file.py (see below)

# node = env.CommandSelLdrTestNacl('file_test.out',
#                                  env.File('file.nexe'),
#                                  flags='-d',
#                                  )
# AlwaysBuild(node)
# env.AddNodeToSmokeTestSuite(node)


# node = env.Command('file_test.out',
#                    'file.py',
#                    '${PYTHON} %s > ${TARGET}' % env.File('file.py')
#                    )
# AlwaysBuild(node)
# env.AddNodeToSmokeTestSuite(node)
