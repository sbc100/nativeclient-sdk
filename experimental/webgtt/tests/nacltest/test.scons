#! -*- python -*-
# Copyright 2011 The Native Client Authors.  All rights reserved.
# Use of this source code is governed by a BSD-style license that can
# be found in the LICENSE file.

import os
import subprocess
from build_tools import build_utils

Import('env')

# ----------------------------------------------------------------------------
# Add a builder for the WebGTT test.  This adds an Alias() node named
# 'webgtt_test' that is always built.  There is some special handling for the
# clean mode, since SCons relies on actual build products for its clean
# processing and will not run Alias() actions during clean unless they actually
# produce something.


def BuildWebGTTTest(env, target, source):
  '''Build the WebGTT test.

  This builds the nexes for the WebGTT test.

  Args:
    env: The construction Environment() that is building the test.
    target: The target that triggered this build.  Not used.
    source: The sources used for this build.  Not used.
  '''
  env.BuildNaClTest(os.path.join('experimental', 'webgtt', 'tests', 'nacltest'))


def CleanWebGTTTest(env, target, source):
  '''Clean the WebGTT test.

  This cleans the WebGTT test.

  Args:
    env: The construction Environment() that is building the test.
    target: The target that triggered this build.  Not used.
    source: The sources used for this build.  Not used.
  '''
  env.CleanNaClTest()

webgtt_test_builder = env.Alias('webgtt_test', [env.GetToolchainNode()],
                                BuildWebGTTTest)
env.AlwaysBuild(webgtt_test_builder)
env.AddCleanAction(['.'], CleanWebGTTTest, ['bot'], webgtt_test_builder)

# Create the test node

webgtt_files = ['webgtt_test.html', 'webgtt_test.js', 'webgtt.nmf',
               'webgtt_x86_32.nexe', 'webgtt_x86_64.nexe']

webgtt_staging_files = [os.path.join('$STAGING_DIR', x) for x in webgtt_files]

node = env.PPAPIBrowserTester('webgtt_test.out',
                              url='webgtt_test.html',
                              files=webgtt_staging_files)

env.AddNodeToTestSuite(node,
                      ['bot'],
                       'run_webgtt_test')

# Make sure the test is built and nexes are available before it is run.
env.Depends(node, webgtt_test_builder)
